This is libc.info, produced by makeinfo version 4.6 from libc.texinfo.

INFO-DIR-SECTION GNU libraries
START-INFO-DIR-ENTRY
* Libc: (libc).                 C library.
END-INFO-DIR-ENTRY

INFO-DIR-SECTION GNU C library functions and macros
START-INFO-DIR-ENTRY
* ALTWERASE: (libc)Local Modes.
* ARGP_ERR_UNKNOWN: (libc)Argp Parser Functions.
* ARG_MAX: (libc)General Limits.
* BC_BASE_MAX: (libc)Utility Limits.
* BC_DIM_MAX: (libc)Utility Limits.
* BC_SCALE_MAX: (libc)Utility Limits.
* BC_STRING_MAX: (libc)Utility Limits.
* BRKINT: (libc)Input Modes.
* BUFSIZ: (libc)Controlling Buffering.
* CCTS_OFLOW: (libc)Control Modes.
* CHILD_MAX: (libc)General Limits.
* CIGNORE: (libc)Control Modes.
* CLK_TCK: (libc)CPU Time.
* CLOCAL: (libc)Control Modes.
* CLOCKS_PER_SEC: (libc)CPU Time.
* COLL_WEIGHTS_MAX: (libc)Utility Limits.
* CPU_CLR: (libc)CPU Affinity.
* CPU_ISSET: (libc)CPU Affinity.
* CPU_SET: (libc)CPU Affinity.
* CPU_SETSIZE: (libc)CPU Affinity.
* CPU_ZERO: (libc)CPU Affinity.
* CREAD: (libc)Control Modes.
* CRTS_IFLOW: (libc)Control Modes.
* CS5: (libc)Control Modes.
* CS6: (libc)Control Modes.
* CS7: (libc)Control Modes.
* CS8: (libc)Control Modes.
* CSIZE: (libc)Control Modes.
* CSTOPB: (libc)Control Modes.
* DES_FAILED: (libc)DES Encryption.
* DTTOIF: (libc)Directory Entries.
* E2BIG: (libc)Error Codes.
* EACCES: (libc)Error Codes.
* EADDRINUSE: (libc)Error Codes.
* EADDRNOTAVAIL: (libc)Error Codes.
* EADV: (libc)Error Codes.
* EAFNOSUPPORT: (libc)Error Codes.
* EAGAIN: (libc)Error Codes.
* EALREADY: (libc)Error Codes.
* EAUTH: (libc)Error Codes.
* EBACKGROUND: (libc)Error Codes.
* EBADE: (libc)Error Codes.
* EBADF: (libc)Error Codes.
* EBADFD: (libc)Error Codes.
* EBADMSG: (libc)Error Codes.
* EBADR: (libc)Error Codes.
* EBADRPC: (libc)Error Codes.
* EBADRQC: (libc)Error Codes.
* EBADSLT: (libc)Error Codes.
* EBFONT: (libc)Error Codes.
* EBUSY: (libc)Error Codes.
* ECANCELED: (libc)Error Codes.
* ECHILD: (libc)Error Codes.
* ECHO: (libc)Local Modes.
* ECHOCTL: (libc)Local Modes.
* ECHOE: (libc)Local Modes.
* ECHOK: (libc)Local Modes.
* ECHOKE: (libc)Local Modes.
* ECHONL: (libc)Local Modes.
* ECHOPRT: (libc)Local Modes.
* ECHRNG: (libc)Error Codes.
* ECOMM: (libc)Error Codes.
* ECONNABORTED: (libc)Error Codes.
* ECONNREFUSED: (libc)Error Codes.
* ECONNRESET: (libc)Error Codes.
* ED: (libc)Error Codes.
* EDEADLK: (libc)Error Codes.
* EDEADLOCK: (libc)Error Codes.
* EDESTADDRREQ: (libc)Error Codes.
* EDIED: (libc)Error Codes.
* EDOM: (libc)Error Codes.
* EDOTDOT: (libc)Error Codes.
* EDQUOT: (libc)Error Codes.
* EEXIST: (libc)Error Codes.
* EFAULT: (libc)Error Codes.
* EFBIG: (libc)Error Codes.
* EFTYPE: (libc)Error Codes.
* EGRATUITOUS: (libc)Error Codes.
* EGREGIOUS: (libc)Error Codes.
* EHOSTDOWN: (libc)Error Codes.
* EHOSTUNREACH: (libc)Error Codes.
* EIDRM: (libc)Error Codes.
* EIEIO: (libc)Error Codes.
* EILSEQ: (libc)Error Codes.
* EINPROGRESS: (libc)Error Codes.
* EINTR: (libc)Error Codes.
* EINVAL: (libc)Error Codes.
* EIO: (libc)Error Codes.
* EISCONN: (libc)Error Codes.
* EISDIR: (libc)Error Codes.
* EISNAM: (libc)Error Codes.
* EKEYEXPIRED: (libc)Error Codes.
* EKEYREJECTED: (libc)Error Codes.
* EKEYREVOKED: (libc)Error Codes.
* EL2HLT: (libc)Error Codes.
* EL2NSYNC: (libc)Error Codes.
* EL3HLT: (libc)Error Codes.
* EL3RST: (libc)Error Codes.
* ELIBACC: (libc)Error Codes.
* ELIBBAD: (libc)Error Codes.
* ELIBEXEC: (libc)Error Codes.
* ELIBMAX: (libc)Error Codes.
* ELIBSCN: (libc)Error Codes.
* ELNRNG: (libc)Error Codes.
* ELOOP: (libc)Error Codes.
* EMEDIUMTYPE: (libc)Error Codes.
* EMFILE: (libc)Error Codes.
* EMLINK: (libc)Error Codes.
* EMSGSIZE: (libc)Error Codes.
* EMULTIHOP: (libc)Error Codes.
* ENAMETOOLONG: (libc)Error Codes.
* ENAVAIL: (libc)Error Codes.
* ENEEDAUTH: (libc)Error Codes.
* ENETDOWN: (libc)Error Codes.
* ENETRESET: (libc)Error Codes.
* ENETUNREACH: (libc)Error Codes.
* ENFILE: (libc)Error Codes.
* ENOANO: (libc)Error Codes.
* ENOBUFS: (libc)Error Codes.
* ENOCSI: (libc)Error Codes.
* ENODATA: (libc)Error Codes.
* ENODEV: (libc)Error Codes.
* ENOENT: (libc)Error Codes.
* ENOEXEC: (libc)Error Codes.
* ENOKEY: (libc)Error Codes.
* ENOLCK: (libc)Error Codes.
* ENOLINK: (libc)Error Codes.
* ENOMEDIUM: (libc)Error Codes.
* ENOMEM: (libc)Error Codes.
* ENOMSG: (libc)Error Codes.
* ENONET: (libc)Error Codes.
* ENOPKG: (libc)Error Codes.
* ENOPROTOOPT: (libc)Error Codes.
* ENOSPC: (libc)Error Codes.
* ENOSR: (libc)Error Codes.
* ENOSTR: (libc)Error Codes.
* ENOSYS: (libc)Error Codes.
* ENOTBLK: (libc)Error Codes.
* ENOTCONN: (libc)Error Codes.
* ENOTDIR: (libc)Error Codes.
* ENOTEMPTY: (libc)Error Codes.
* ENOTNAM: (libc)Error Codes.
* ENOTRECOVERABLE: (libc)Error Codes.
* ENOTSOCK: (libc)Error Codes.
* ENOTSUP: (libc)Error Codes.
* ENOTTY: (libc)Error Codes.
* ENOTUNIQ: (libc)Error Codes.
* ENXIO: (libc)Error Codes.
* EOF: (libc)EOF and Errors.
* EOPNOTSUPP: (libc)Error Codes.
* EOVERFLOW: (libc)Error Codes.
* EOWNERDEAD: (libc)Error Codes.
* EPERM: (libc)Error Codes.
* EPFNOSUPPORT: (libc)Error Codes.
* EPIPE: (libc)Error Codes.
* EPROCLIM: (libc)Error Codes.
* EPROCUNAVAIL: (libc)Error Codes.
* EPROGMISMATCH: (libc)Error Codes.
* EPROGUNAVAIL: (libc)Error Codes.
* EPROTO: (libc)Error Codes.
* EPROTONOSUPPORT: (libc)Error Codes.
* EPROTOTYPE: (libc)Error Codes.
* EQUIV_CLASS_MAX: (libc)Utility Limits.
* ERANGE: (libc)Error Codes.
* EREMCHG: (libc)Error Codes.
* EREMOTE: (libc)Error Codes.
* EREMOTEIO: (libc)Error Codes.
* ERESTART: (libc)Error Codes.
* EROFS: (libc)Error Codes.
* ERPCMISMATCH: (libc)Error Codes.
* ESHUTDOWN: (libc)Error Codes.
* ESOCKTNOSUPPORT: (libc)Error Codes.
* ESPIPE: (libc)Error Codes.
* ESRCH: (libc)Error Codes.
* ESRMNT: (libc)Error Codes.
* ESTALE: (libc)Error Codes.
* ESTRPIPE: (libc)Error Codes.
* ETIME: (libc)Error Codes.
* ETIMEDOUT: (libc)Error Codes.
* ETOOMANYREFS: (libc)Error Codes.
* ETXTBSY: (libc)Error Codes.
* EUCLEAN: (libc)Error Codes.
* EUNATCH: (libc)Error Codes.
* EUSERS: (libc)Error Codes.
* EWOULDBLOCK: (libc)Error Codes.
* EXDEV: (libc)Error Codes.
* EXFULL: (libc)Error Codes.
* EXIT_FAILURE: (libc)Exit Status.
* EXIT_SUCCESS: (libc)Exit Status.
* EXPR_NEST_MAX: (libc)Utility Limits.
* FD_CLOEXEC: (libc)Descriptor Flags.
* FD_CLR: (libc)Waiting for I/O.
* FD_ISSET: (libc)Waiting for I/O.
* FD_SET: (libc)Waiting for I/O.
* FD_SETSIZE: (libc)Waiting for I/O.
* FD_ZERO: (libc)Waiting for I/O.
* FILENAME_MAX: (libc)Limits for Files.
* FLUSHO: (libc)Local Modes.
* FOPEN_MAX: (libc)Opening Streams.
* FP_ILOGB0: (libc)Exponents and Logarithms.
* FP_ILOGBNAN: (libc)Exponents and Logarithms.
* F_DUPFD: (libc)Duplicating Descriptors.
* F_GETFD: (libc)Descriptor Flags.
* F_GETFL: (libc)Getting File Status Flags.
* F_GETLK: (libc)File Locks.
* F_GETOWN: (libc)Interrupt Input.
* F_OK: (libc)Testing File Access.
* F_SETFD: (libc)Descriptor Flags.
* F_SETFL: (libc)Getting File Status Flags.
* F_SETLK: (libc)File Locks.
* F_SETLKW: (libc)File Locks.
* F_SETOWN: (libc)Interrupt Input.
* HUGE_VAL: (libc)Math Error Reporting.
* HUGE_VALF: (libc)Math Error Reporting.
* HUGE_VALL: (libc)Math Error Reporting.
* HUPCL: (libc)Control Modes.
* I: (libc)Complex Numbers.
* ICANON: (libc)Local Modes.
* ICRNL: (libc)Input Modes.
* IEXTEN: (libc)Local Modes.
* IFNAMSIZ: (libc)Interface Naming.
* IFTODT: (libc)Directory Entries.
* IGNBRK: (libc)Input Modes.
* IGNCR: (libc)Input Modes.
* IGNPAR: (libc)Input Modes.
* IMAXBEL: (libc)Input Modes.
* INADDR_ANY: (libc)Host Address Data Type.
* INADDR_BROADCAST: (libc)Host Address Data Type.
* INADDR_LOOPBACK: (libc)Host Address Data Type.
* INADDR_NONE: (libc)Host Address Data Type.
* INFINITY: (libc)Infinity and NaN.
* INLCR: (libc)Input Modes.
* INPCK: (libc)Input Modes.
* IPPORT_RESERVED: (libc)Ports.
* IPPORT_USERRESERVED: (libc)Ports.
* ISIG: (libc)Local Modes.
* ISTRIP: (libc)Input Modes.
* IXANY: (libc)Input Modes.
* IXOFF: (libc)Input Modes.
* IXON: (libc)Input Modes.
* LINE_MAX: (libc)Utility Limits.
* LINK_MAX: (libc)Limits for Files.
* L_ctermid: (libc)Identifying the Terminal.
* L_cuserid: (libc)Who Logged In.
* L_tmpnam: (libc)Temporary Files.
* MAXNAMLEN: (libc)Limits for Files.
* MAXSYMLINKS: (libc)Symbolic Links.
* MAX_CANON: (libc)Limits for Files.
* MAX_INPUT: (libc)Limits for Files.
* MB_CUR_MAX: (libc)Selecting the Conversion.
* MB_LEN_MAX: (libc)Selecting the Conversion.
* MDMBUF: (libc)Control Modes.
* MSG_DONTROUTE: (libc)Socket Data Options.
* MSG_OOB: (libc)Socket Data Options.
* MSG_PEEK: (libc)Socket Data Options.
* NAME_MAX: (libc)Limits for Files.
* NAN: (libc)Infinity and NaN.
* NCCS: (libc)Mode Data Types.
* NGROUPS_MAX: (libc)General Limits.
* NOFLSH: (libc)Local Modes.
* NOKERNINFO: (libc)Local Modes.
* NSIG: (libc)Standard Signals.
* NULL: (libc)Null Pointer Constant.
* ONLCR: (libc)Output Modes.
* ONOEOT: (libc)Output Modes.
* OPEN_MAX: (libc)General Limits.
* OPOST: (libc)Output Modes.
* OXTABS: (libc)Output Modes.
* O_ACCMODE: (libc)Access Modes.
* O_APPEND: (libc)Operating Modes.
* O_ASYNC: (libc)Operating Modes.
* O_CREAT: (libc)Open-time Flags.
* O_EXCL: (libc)Open-time Flags.
* O_EXEC: (libc)Access Modes.
* O_EXLOCK: (libc)Open-time Flags.
* O_FSYNC: (libc)Operating Modes.
* O_IGNORE_CTTY: (libc)Open-time Flags.
* O_NDELAY: (libc)Operating Modes.
* O_NOATIME: (libc)Operating Modes.
* O_NOCTTY: (libc)Open-time Flags.
* O_NOLINK: (libc)Open-time Flags.
* O_NONBLOCK: (libc)Open-time Flags.
* O_NONBLOCK: (libc)Operating Modes.
* O_NOTRANS: (libc)Open-time Flags.
* O_RDONLY: (libc)Access Modes.
* O_RDWR: (libc)Access Modes.
* O_READ: (libc)Access Modes.
* O_SHLOCK: (libc)Open-time Flags.
* O_SYNC: (libc)Operating Modes.
* O_TRUNC: (libc)Open-time Flags.
* O_WRITE: (libc)Access Modes.
* O_WRONLY: (libc)Access Modes.
* PARENB: (libc)Control Modes.
* PARMRK: (libc)Input Modes.
* PARODD: (libc)Control Modes.
* PATH_MAX: (libc)Limits for Files.
* PA_FLAG_MASK: (libc)Parsing a Template String.
* PENDIN: (libc)Local Modes.
* PF_FILE: (libc)Local Namespace Details.
* PF_INET6: (libc)Internet Namespace.
* PF_INET: (libc)Internet Namespace.
* PF_LOCAL: (libc)Local Namespace Details.
* PF_UNIX: (libc)Local Namespace Details.
* PIPE_BUF: (libc)Limits for Files.
* P_tmpdir: (libc)Temporary Files.
* RAND_MAX: (libc)ISO Random.
* RE_DUP_MAX: (libc)General Limits.
* RLIM_INFINITY: (libc)Limits on Resources.
* R_OK: (libc)Testing File Access.
* SA_NOCLDSTOP: (libc)Flags for Sigaction.
* SA_ONSTACK: (libc)Flags for Sigaction.
* SA_RESTART: (libc)Flags for Sigaction.
* SEEK_CUR: (libc)File Positioning.
* SEEK_END: (libc)File Positioning.
* SEEK_SET: (libc)File Positioning.
* SIGABRT: (libc)Program Error Signals.
* SIGALRM: (libc)Alarm Signals.
* SIGBUS: (libc)Program Error Signals.
* SIGCHLD: (libc)Job Control Signals.
* SIGCLD: (libc)Job Control Signals.
* SIGCONT: (libc)Job Control Signals.
* SIGEMT: (libc)Program Error Signals.
* SIGFPE: (libc)Program Error Signals.
* SIGHUP: (libc)Termination Signals.
* SIGILL: (libc)Program Error Signals.
* SIGINFO: (libc)Miscellaneous Signals.
* SIGINT: (libc)Termination Signals.
* SIGIO: (libc)Asynchronous I/O Signals.
* SIGIOT: (libc)Program Error Signals.
* SIGKILL: (libc)Termination Signals.
* SIGLOST: (libc)Operation Error Signals.
* SIGPIPE: (libc)Operation Error Signals.
* SIGPOLL: (libc)Asynchronous I/O Signals.
* SIGPROF: (libc)Alarm Signals.
* SIGQUIT: (libc)Termination Signals.
* SIGSEGV: (libc)Program Error Signals.
* SIGSTOP: (libc)Job Control Signals.
* SIGSYS: (libc)Program Error Signals.
* SIGTERM: (libc)Termination Signals.
* SIGTRAP: (libc)Program Error Signals.
* SIGTSTP: (libc)Job Control Signals.
* SIGTTIN: (libc)Job Control Signals.
* SIGTTOU: (libc)Job Control Signals.
* SIGURG: (libc)Asynchronous I/O Signals.
* SIGUSR1: (libc)Miscellaneous Signals.
* SIGUSR2: (libc)Miscellaneous Signals.
* SIGVTALRM: (libc)Alarm Signals.
* SIGWINCH: (libc)Miscellaneous Signals.
* SIGXCPU: (libc)Operation Error Signals.
* SIGXFSZ: (libc)Operation Error Signals.
* SIG_ERR: (libc)Basic Signal Handling.
* SOCK_DGRAM: (libc)Communication Styles.
* SOCK_RAW: (libc)Communication Styles.
* SOCK_RDM: (libc)Communication Styles.
* SOCK_SEQPACKET: (libc)Communication Styles.
* SOCK_STREAM: (libc)Communication Styles.
* SOL_SOCKET: (libc)Socket-Level Options.
* SSIZE_MAX: (libc)General Limits.
* STREAM_MAX: (libc)General Limits.
* SUN_LEN: (libc)Local Namespace Details.
* SV_INTERRUPT: (libc)BSD Handler.
* SV_ONSTACK: (libc)BSD Handler.
* SV_RESETHAND: (libc)BSD Handler.
* S_IFMT: (libc)Testing File Type.
* S_ISBLK: (libc)Testing File Type.
* S_ISCHR: (libc)Testing File Type.
* S_ISDIR: (libc)Testing File Type.
* S_ISFIFO: (libc)Testing File Type.
* S_ISLNK: (libc)Testing File Type.
* S_ISREG: (libc)Testing File Type.
* S_ISSOCK: (libc)Testing File Type.
* S_TYPEISMQ: (libc)Testing File Type.
* S_TYPEISSEM: (libc)Testing File Type.
* S_TYPEISSHM: (libc)Testing File Type.
* TMP_MAX: (libc)Temporary Files.
* TOSTOP: (libc)Local Modes.
* TZNAME_MAX: (libc)General Limits.
* VDISCARD: (libc)Other Special.
* VDSUSP: (libc)Signal Characters.
* VEOF: (libc)Editing Characters.
* VEOL2: (libc)Editing Characters.
* VEOL: (libc)Editing Characters.
* VERASE: (libc)Editing Characters.
* VINTR: (libc)Signal Characters.
* VKILL: (libc)Editing Characters.
* VLNEXT: (libc)Other Special.
* VMIN: (libc)Noncanonical Input.
* VQUIT: (libc)Signal Characters.
* VREPRINT: (libc)Editing Characters.
* VSTART: (libc)Start/Stop Characters.
* VSTATUS: (libc)Other Special.
* VSTOP: (libc)Start/Stop Characters.
* VSUSP: (libc)Signal Characters.
* VTIME: (libc)Noncanonical Input.
* VWERASE: (libc)Editing Characters.
* WCHAR_MAX: (libc)Extended Char Intro.
* WCHAR_MIN: (libc)Extended Char Intro.
* WCOREDUMP: (libc)Process Completion Status.
* WEOF: (libc)EOF and Errors.
* WEOF: (libc)Extended Char Intro.
* WEXITSTATUS: (libc)Process Completion Status.
* WIFEXITED: (libc)Process Completion Status.
* WIFSIGNALED: (libc)Process Completion Status.
* WIFSTOPPED: (libc)Process Completion Status.
* WSTOPSIG: (libc)Process Completion Status.
* WTERMSIG: (libc)Process Completion Status.
* W_OK: (libc)Testing File Access.
* X_OK: (libc)Testing File Access.
* _Complex_I: (libc)Complex Numbers.
* _Exit: (libc)Termination Internals.
* _IOFBF: (libc)Controlling Buffering.
* _IOLBF: (libc)Controlling Buffering.
* _IONBF: (libc)Controlling Buffering.
* _Imaginary_I: (libc)Complex Numbers.
* _PATH_UTMP: (libc)Manipulating the Database.
* _PATH_WTMP: (libc)Manipulating the Database.
* _POSIX2_C_DEV: (libc)System Options.
* _POSIX2_C_VERSION: (libc)Version Supported.
* _POSIX2_FORT_DEV: (libc)System Options.
* _POSIX2_FORT_RUN: (libc)System Options.
* _POSIX2_LOCALEDEF: (libc)System Options.
* _POSIX2_SW_DEV: (libc)System Options.
* _POSIX_CHOWN_RESTRICTED: (libc)Options for Files.
* _POSIX_JOB_CONTROL: (libc)System Options.
* _POSIX_NO_TRUNC: (libc)Options for Files.
* _POSIX_SAVED_IDS: (libc)System Options.
* _POSIX_VDISABLE: (libc)Options for Files.
* _POSIX_VERSION: (libc)Version Supported.
* __fbufsize: (libc)Controlling Buffering.
* __flbf: (libc)Controlling Buffering.
* __fpending: (libc)Controlling Buffering.
* __fpurge: (libc)Flushing Buffers.
* __freadable: (libc)Opening Streams.
* __freading: (libc)Opening Streams.
* __fsetlocking: (libc)Streams and Threads.
* __fwritable: (libc)Opening Streams.
* __fwriting: (libc)Opening Streams.
* __gconv_end_fct: (libc)glibc iconv Implementation.
* __gconv_fct: (libc)glibc iconv Implementation.
* __gconv_init_fct: (libc)glibc iconv Implementation.
* __va_copy: (libc)Argument Macros.
* _exit: (libc)Termination Internals.
* _flushlbf: (libc)Flushing Buffers.
* _tolower: (libc)Case Conversion.
* _toupper: (libc)Case Conversion.
* a64l: (libc)Encode Binary Data.
* abort: (libc)Aborting a Program.
* abs: (libc)Absolute Value.
* accept: (libc)Accepting Connections.
* access: (libc)Testing File Access.
* acos: (libc)Inverse Trig Functions.
* acosf: (libc)Inverse Trig Functions.
* acosh: (libc)Hyperbolic Functions.
* acoshf: (libc)Hyperbolic Functions.
* acoshl: (libc)Hyperbolic Functions.
* acosl: (libc)Inverse Trig Functions.
* addmntent: (libc)mtab.
* addseverity: (libc)Adding Severity Classes.
* adjtime: (libc)High-Resolution Calendar.
* adjtimex: (libc)High-Resolution Calendar.
* aio_cancel64: (libc)Cancel AIO Operations.
* aio_cancel: (libc)Cancel AIO Operations.
* aio_error64: (libc)Status of AIO Operations.
* aio_error: (libc)Status of AIO Operations.
* aio_fsync64: (libc)Synchronizing AIO Operations.
* aio_fsync: (libc)Synchronizing AIO Operations.
* aio_init: (libc)Configuration of AIO.
* aio_read64: (libc)Asynchronous Reads/Writes.
* aio_read: (libc)Asynchronous Reads/Writes.
* aio_return64: (libc)Status of AIO Operations.
* aio_return: (libc)Status of AIO Operations.
* aio_suspend64: (libc)Synchronizing AIO Operations.
* aio_suspend: (libc)Synchronizing AIO Operations.
* aio_write64: (libc)Asynchronous Reads/Writes.
* aio_write: (libc)Asynchronous Reads/Writes.
* alarm: (libc)Setting an Alarm.
* alloca: (libc)Variable Size Automatic.
* alphasort64: (libc)Scanning Directory Content.
* alphasort: (libc)Scanning Directory Content.
* argp_error: (libc)Argp Helper Functions.
* argp_failure: (libc)Argp Helper Functions.
* argp_help: (libc)Argp Help.
* argp_parse: (libc)Argp.
* argp_state_help: (libc)Argp Helper Functions.
* argp_usage: (libc)Argp Helper Functions.
* argz_add: (libc)Argz Functions.
* argz_add_sep: (libc)Argz Functions.
* argz_append: (libc)Argz Functions.
* argz_count: (libc)Argz Functions.
* argz_create: (libc)Argz Functions.
* argz_create_sep: (libc)Argz Functions.
* argz_delete: (libc)Argz Functions.
* argz_extract: (libc)Argz Functions.
* argz_insert: (libc)Argz Functions.
* argz_next: (libc)Argz Functions.
* argz_replace: (libc)Argz Functions.
* argz_stringify: (libc)Argz Functions.
* asctime: (libc)Formatting Calendar Time.
* asctime_r: (libc)Formatting Calendar Time.
* asin: (libc)Inverse Trig Functions.
* asinf: (libc)Inverse Trig Functions.
* asinh: (libc)Hyperbolic Functions.
* asinhf: (libc)Hyperbolic Functions.
* asinhl: (libc)Hyperbolic Functions.
* asinl: (libc)Inverse Trig Functions.
* asprintf: (libc)Dynamic Output.
* assert: (libc)Consistency Checking.
* assert_perror: (libc)Consistency Checking.
* atan2: (libc)Inverse Trig Functions.
* atan2f: (libc)Inverse Trig Functions.
* atan2l: (libc)Inverse Trig Functions.
* atan: (libc)Inverse Trig Functions.
* atanf: (libc)Inverse Trig Functions.
* atanh: (libc)Hyperbolic Functions.
* atanhf: (libc)Hyperbolic Functions.
* atanhl: (libc)Hyperbolic Functions.
* atanl: (libc)Inverse Trig Functions.
* atexit: (libc)Cleanups on Exit.
* atof: (libc)Parsing of Floats.
* atoi: (libc)Parsing of Integers.
* atol: (libc)Parsing of Integers.
* atoll: (libc)Parsing of Integers.
* backtrace: (libc)Backtraces.
* backtrace_symbols: (libc)Backtraces.
* backtrace_symbols_fd: (libc)Backtraces.
* basename: (libc)Finding Tokens in a String.
* basename: (libc)Finding Tokens in a String.
* bcmp: (libc)String/Array Comparison.
* bcopy: (libc)Copying and Concatenation.
* bind: (libc)Setting Address.
* bind_textdomain_codeset: (libc)Charset conversion in gettext.
* bindtextdomain: (libc)Locating gettext catalog.
* brk: (libc)Resizing the Data Segment.
* bsearch: (libc)Array Search Function.
* btowc: (libc)Converting a Character.
* bzero: (libc)Copying and Concatenation.
* cabs: (libc)Absolute Value.
* cabsf: (libc)Absolute Value.
* cabsl: (libc)Absolute Value.
* cacos: (libc)Inverse Trig Functions.
* cacosf: (libc)Inverse Trig Functions.
* cacosh: (libc)Hyperbolic Functions.
* cacoshf: (libc)Hyperbolic Functions.
* cacoshl: (libc)Hyperbolic Functions.
* cacosl: (libc)Inverse Trig Functions.
* calloc: (libc)Allocating Cleared Space.
* canonicalize_file_name: (libc)Symbolic Links.
* carg: (libc)Operations on Complex.
* cargf: (libc)Operations on Complex.
* cargl: (libc)Operations on Complex.
* casin: (libc)Inverse Trig Functions.
* casinf: (libc)Inverse Trig Functions.
* casinh: (libc)Hyperbolic Functions.
* casinhf: (libc)Hyperbolic Functions.
* casinhl: (libc)Hyperbolic Functions.
* casinl: (libc)Inverse Trig Functions.
* catan: (libc)Inverse Trig Functions.
* catanf: (libc)Inverse Trig Functions.
* catanh: (libc)Hyperbolic Functions.
* catanhf: (libc)Hyperbolic Functions.
* catanhl: (libc)Hyperbolic Functions.
* catanl: (libc)Inverse Trig Functions.
* catclose: (libc)The catgets Functions.
* catgets: (libc)The catgets Functions.
* catopen: (libc)The catgets Functions.
* cbc_crypt: (libc)DES Encryption.
* cbrt: (libc)Exponents and Logarithms.
* cbrtf: (libc)Exponents and Logarithms.
* cbrtl: (libc)Exponents and Logarithms.
* ccos: (libc)Trig Functions.
* ccosf: (libc)Trig Functions.
* ccosh: (libc)Hyperbolic Functions.
* ccoshf: (libc)Hyperbolic Functions.
* ccoshl: (libc)Hyperbolic Functions.
* ccosl: (libc)Trig Functions.
* ceil: (libc)Rounding Functions.
* ceilf: (libc)Rounding Functions.
* ceill: (libc)Rounding Functions.
* cexp: (libc)Exponents and Logarithms.
* cexpf: (libc)Exponents and Logarithms.
* cexpl: (libc)Exponents and Logarithms.
* cfgetispeed: (libc)Line Speed.
* cfgetospeed: (libc)Line Speed.
* cfmakeraw: (libc)Noncanonical Input.
* cfree: (libc)Freeing after Malloc.
* cfsetispeed: (libc)Line Speed.
* cfsetospeed: (libc)Line Speed.
* cfsetspeed: (libc)Line Speed.
* chdir: (libc)Working Directory.
* chmod: (libc)Setting Permissions.
* chown: (libc)File Owner.
* cimag: (libc)Operations on Complex.
* cimagf: (libc)Operations on Complex.
* cimagl: (libc)Operations on Complex.
* clearenv: (libc)Environment Access.
* clearerr: (libc)Error Recovery.
* clearerr_unlocked: (libc)Error Recovery.
* clock: (libc)CPU Time.
* clog10: (libc)Exponents and Logarithms.
* clog10f: (libc)Exponents and Logarithms.
* clog10l: (libc)Exponents and Logarithms.
* clog: (libc)Exponents and Logarithms.
* clogf: (libc)Exponents and Logarithms.
* clogl: (libc)Exponents and Logarithms.
* close: (libc)Opening and Closing Files.
* closedir: (libc)Reading/Closing Directory.
* closelog: (libc)closelog.
* confstr: (libc)String Parameters.
* conj: (libc)Operations on Complex.
* conjf: (libc)Operations on Complex.
* conjl: (libc)Operations on Complex.
* connect: (libc)Connecting.
* copysign: (libc)FP Bit Twiddling.
* copysignf: (libc)FP Bit Twiddling.
* copysignl: (libc)FP Bit Twiddling.
* cos: (libc)Trig Functions.
* cosf: (libc)Trig Functions.
* cosh: (libc)Hyperbolic Functions.
* coshf: (libc)Hyperbolic Functions.
* coshl: (libc)Hyperbolic Functions.
* cosl: (libc)Trig Functions.
* cpow: (libc)Exponents and Logarithms.
* cpowf: (libc)Exponents and Logarithms.
* cpowl: (libc)Exponents and Logarithms.
* cproj: (libc)Operations on Complex.
* cprojf: (libc)Operations on Complex.
* cprojl: (libc)Operations on Complex.
* creal: (libc)Operations on Complex.
* crealf: (libc)Operations on Complex.
* creall: (libc)Operations on Complex.
* creat64: (libc)Opening and Closing Files.
* creat: (libc)Opening and Closing Files.
* crypt: (libc)crypt.
* crypt_r: (libc)crypt.
* csin: (libc)Trig Functions.
* csinf: (libc)Trig Functions.
* csinh: (libc)Hyperbolic Functions.
* csinhf: (libc)Hyperbolic Functions.
* csinhl: (libc)Hyperbolic Functions.
* csinl: (libc)Trig Functions.
* csqrt: (libc)Exponents and Logarithms.
* csqrtf: (libc)Exponents and Logarithms.
* csqrtl: (libc)Exponents and Logarithms.
* ctan: (libc)Trig Functions.
* ctanf: (libc)Trig Functions.
* ctanh: (libc)Hyperbolic Functions.
* ctanhf: (libc)Hyperbolic Functions.
* ctanhl: (libc)Hyperbolic Functions.
* ctanl: (libc)Trig Functions.
* ctermid: (libc)Identifying the Terminal.
* ctime: (libc)Formatting Calendar Time.
* ctime_r: (libc)Formatting Calendar Time.
* cuserid: (libc)Who Logged In.
* dcgettext: (libc)Translation with gettext.
* dcngettext: (libc)Advanced gettext functions.
* des_setparity: (libc)DES Encryption.
* dgettext: (libc)Translation with gettext.
* difftime: (libc)Elapsed Time.
* dirfd: (libc)Opening a Directory.
* dirname: (libc)Finding Tokens in a String.
* div: (libc)Integer Division.
* dngettext: (libc)Advanced gettext functions.
* drand48: (libc)SVID Random.
* drand48_r: (libc)SVID Random.
* drem: (libc)Remainder Functions.
* dremf: (libc)Remainder Functions.
* dreml: (libc)Remainder Functions.
* dup2: (libc)Duplicating Descriptors.
* dup: (libc)Duplicating Descriptors.
* ecb_crypt: (libc)DES Encryption.
* ecvt: (libc)System V Number Conversion.
* ecvt_r: (libc)System V Number Conversion.
* encrypt: (libc)DES Encryption.
* encrypt_r: (libc)DES Encryption.
* endfsent: (libc)fstab.
* endgrent: (libc)Scanning All Groups.
* endhostent: (libc)Host Names.
* endmntent: (libc)mtab.
* endnetent: (libc)Networks Database.
* endnetgrent: (libc)Lookup Netgroup.
* endprotoent: (libc)Protocols Database.
* endpwent: (libc)Scanning All Users.
* endservent: (libc)Services Database.
* endutent: (libc)Manipulating the Database.
* endutxent: (libc)XPG Functions.
* envz_add: (libc)Envz Functions.
* envz_entry: (libc)Envz Functions.
* envz_get: (libc)Envz Functions.
* envz_merge: (libc)Envz Functions.
* envz_strip: (libc)Envz Functions.
* erand48: (libc)SVID Random.
* erand48_r: (libc)SVID Random.
* erf: (libc)Special Functions.
* erfc: (libc)Special Functions.
* erfcf: (libc)Special Functions.
* erfcl: (libc)Special Functions.
* erff: (libc)Special Functions.
* erfl: (libc)Special Functions.
* err: (libc)Error Messages.
* errno: (libc)Checking for Errors.
* error: (libc)Error Messages.
* error_at_line: (libc)Error Messages.
* errx: (libc)Error Messages.
* execl: (libc)Executing a File.
* execle: (libc)Executing a File.
* execlp: (libc)Executing a File.
* execv: (libc)Executing a File.
* execve: (libc)Executing a File.
* execvp: (libc)Executing a File.
* exit: (libc)Normal Termination.
* exp10: (libc)Exponents and Logarithms.
* exp10f: (libc)Exponents and Logarithms.
* exp10l: (libc)Exponents and Logarithms.
* exp2: (libc)Exponents and Logarithms.
* exp2f: (libc)Exponents and Logarithms.
* exp2l: (libc)Exponents and Logarithms.
* exp: (libc)Exponents and Logarithms.
* expf: (libc)Exponents and Logarithms.
* expl: (libc)Exponents and Logarithms.
* expm1: (libc)Exponents and Logarithms.
* expm1f: (libc)Exponents and Logarithms.
* expm1l: (libc)Exponents and Logarithms.
* fabs: (libc)Absolute Value.
* fabsf: (libc)Absolute Value.
* fabsl: (libc)Absolute Value.
* fchdir: (libc)Working Directory.
* fchmod: (libc)Setting Permissions.
* fchown: (libc)File Owner.
* fclean: (libc)Cleaning Streams.
* fclose: (libc)Closing Streams.
* fcloseall: (libc)Closing Streams.
* fcntl: (libc)Control Operations.
* fcvt: (libc)System V Number Conversion.
* fcvt_r: (libc)System V Number Conversion.
* fdatasync: (libc)Synchronizing I/O.
* fdim: (libc)Misc FP Arithmetic.
* fdimf: (libc)Misc FP Arithmetic.
* fdiml: (libc)Misc FP Arithmetic.
* fdopen: (libc)Descriptors and Streams.
* fdopendir: (libc)Opening a Directory.
* feclearexcept: (libc)Status bit operations.
* fedisableexcept: (libc)Control Functions.
* feenableexcept: (libc)Control Functions.
* fegetenv: (libc)Control Functions.
* fegetexcept: (libc)Control Functions.
* fegetexceptflag: (libc)Status bit operations.
* fegetround: (libc)Rounding.
* feholdexcept: (libc)Control Functions.
* feof: (libc)EOF and Errors.
* feof_unlocked: (libc)EOF and Errors.
* feraiseexcept: (libc)Status bit operations.
* ferror: (libc)EOF and Errors.
* ferror_unlocked: (libc)EOF and Errors.
* fesetenv: (libc)Control Functions.
* fesetexceptflag: (libc)Status bit operations.
* fesetround: (libc)Rounding.
* fetestexcept: (libc)Status bit operations.
* feupdateenv: (libc)Control Functions.
* fflush: (libc)Flushing Buffers.
* fflush_unlocked: (libc)Flushing Buffers.
* fgetc: (libc)Character Input.
* fgetc_unlocked: (libc)Character Input.
* fgetgrent: (libc)Scanning All Groups.
* fgetgrent_r: (libc)Scanning All Groups.
* fgetpos64: (libc)Portable Positioning.
* fgetpos: (libc)Portable Positioning.
* fgetpwent: (libc)Scanning All Users.
* fgetpwent_r: (libc)Scanning All Users.
* fgets: (libc)Line Input.
* fgets_unlocked: (libc)Line Input.
* fgetwc: (libc)Character Input.
* fgetwc_unlocked: (libc)Character Input.
* fgetws: (libc)Line Input.
* fgetws_unlocked: (libc)Line Input.
* fileno: (libc)Descriptors and Streams.
* fileno_unlocked: (libc)Descriptors and Streams.
* finite: (libc)Floating Point Classes.
* finitef: (libc)Floating Point Classes.
* finitel: (libc)Floating Point Classes.
* flockfile: (libc)Streams and Threads.
* floor: (libc)Rounding Functions.
* floorf: (libc)Rounding Functions.
* floorl: (libc)Rounding Functions.
* fma: (libc)Misc FP Arithmetic.
* fmaf: (libc)Misc FP Arithmetic.
* fmal: (libc)Misc FP Arithmetic.
* fmax: (libc)Misc FP Arithmetic.
* fmaxf: (libc)Misc FP Arithmetic.
* fmaxl: (libc)Misc FP Arithmetic.
* fmemopen: (libc)String Streams.
* fmin: (libc)Misc FP Arithmetic.
* fminf: (libc)Misc FP Arithmetic.
* fminl: (libc)Misc FP Arithmetic.
* fmod: (libc)Remainder Functions.
* fmodf: (libc)Remainder Functions.
* fmodl: (libc)Remainder Functions.
* fmtmsg: (libc)Printing Formatted Messages.
* fnmatch: (libc)Wildcard Matching.
* fopen64: (libc)Opening Streams.
* fopen: (libc)Opening Streams.
* fopencookie: (libc)Streams and Cookies.
* fork: (libc)Creating a Process.
* forkpty: (libc)Pseudo-Terminal Pairs.
* fpathconf: (libc)Pathconf.
* fpclassify: (libc)Floating Point Classes.
* fprintf: (libc)Formatted Output Functions.
* fputc: (libc)Simple Output.
* fputc_unlocked: (libc)Simple Output.
* fputs: (libc)Simple Output.
* fputs_unlocked: (libc)Simple Output.
* fputwc: (libc)Simple Output.
* fputwc_unlocked: (libc)Simple Output.
* fputws: (libc)Simple Output.
* fputws_unlocked: (libc)Simple Output.
* fread: (libc)Block Input/Output.
* fread_unlocked: (libc)Block Input/Output.
* free: (libc)Freeing after Malloc.
* freopen64: (libc)Opening Streams.
* freopen: (libc)Opening Streams.
* frexp: (libc)Normalization Functions.
* frexpf: (libc)Normalization Functions.
* frexpl: (libc)Normalization Functions.
* fscanf: (libc)Formatted Input Functions.
* fseek: (libc)File Positioning.
* fseeko64: (libc)File Positioning.
* fseeko: (libc)File Positioning.
* fsetpos64: (libc)Portable Positioning.
* fsetpos: (libc)Portable Positioning.
* fstat64: (libc)Reading Attributes.
* fstat: (libc)Reading Attributes.
* fsync: (libc)Synchronizing I/O.
* ftell: (libc)File Positioning.
* ftello64: (libc)File Positioning.
* ftello: (libc)File Positioning.
* ftruncate64: (libc)File Size.
* ftruncate: (libc)File Size.
* ftrylockfile: (libc)Streams and Threads.
* ftw64: (libc)Working with Directory Trees.
* ftw: (libc)Working with Directory Trees.
* funlockfile: (libc)Streams and Threads.
* futimes: (libc)File Times.
* fwide: (libc)Streams and I18N.
* fwprintf: (libc)Formatted Output Functions.
* fwrite: (libc)Block Input/Output.
* fwrite_unlocked: (libc)Block Input/Output.
* fwscanf: (libc)Formatted Input Functions.
* gamma: (libc)Special Functions.
* gammaf: (libc)Special Functions.
* gammal: (libc)Special Functions.
* gcvt: (libc)System V Number Conversion.
* get_avphys_pages: (libc)Query Memory Parameters.
* get_current_dir_name: (libc)Working Directory.
* get_nprocs: (libc)Processor Resources.
* get_nprocs_conf: (libc)Processor Resources.
* get_phys_pages: (libc)Query Memory Parameters.
* getc: (libc)Character Input.
* getc_unlocked: (libc)Character Input.
* getchar: (libc)Character Input.
* getchar_unlocked: (libc)Character Input.
* getcontext: (libc)System V contexts.
* getcwd: (libc)Working Directory.
* getdate: (libc)General Time String Parsing.
* getdate_r: (libc)General Time String Parsing.
* getdelim: (libc)Line Input.
* getdomainnname: (libc)Host Identification.
* getegid: (libc)Reading Persona.
* getenv: (libc)Environment Access.
* geteuid: (libc)Reading Persona.
* getfsent: (libc)fstab.
* getfsfile: (libc)fstab.
* getfsspec: (libc)fstab.
* getgid: (libc)Reading Persona.
* getgrent: (libc)Scanning All Groups.
* getgrent_r: (libc)Scanning All Groups.
* getgrgid: (libc)Lookup Group.
* getgrgid_r: (libc)Lookup Group.
* getgrnam: (libc)Lookup Group.
* getgrnam_r: (libc)Lookup Group.
* getgrouplist: (libc)Setting Groups.
* getgroups: (libc)Reading Persona.
* gethostbyaddr: (libc)Host Names.
* gethostbyaddr_r: (libc)Host Names.
* gethostbyname2: (libc)Host Names.
* gethostbyname2_r: (libc)Host Names.
* gethostbyname: (libc)Host Names.
* gethostbyname_r: (libc)Host Names.
* gethostent: (libc)Host Names.
* gethostid: (libc)Host Identification.
* gethostname: (libc)Host Identification.
* getitimer: (libc)Setting an Alarm.
* getline: (libc)Line Input.
* getloadavg: (libc)Processor Resources.
* getlogin: (libc)Who Logged In.
* getmntent: (libc)mtab.
* getmntent_r: (libc)mtab.
* getnetbyaddr: (libc)Networks Database.
* getnetbyname: (libc)Networks Database.
* getnetent: (libc)Networks Database.
* getnetgrent: (libc)Lookup Netgroup.
* getnetgrent_r: (libc)Lookup Netgroup.
* getopt: (libc)Using Getopt.
* getopt_long: (libc)Getopt Long Options.
* getopt_long_only: (libc)Getopt Long Options.
* getpagesize: (libc)Query Memory Parameters.
* getpass: (libc)getpass.
* getpeername: (libc)Who is Connected.
* getpgid: (libc)Process Group Functions.
* getpgrp: (libc)Process Group Functions.
* getpgrp: (libc)Process Group Functions.
* getpid: (libc)Process Identification.
* getppid: (libc)Process Identification.
* getpriority: (libc)Traditional Scheduling Functions.
* getprotobyname: (libc)Protocols Database.
* getprotobynumber: (libc)Protocols Database.
* getprotoent: (libc)Protocols Database.
* getpt: (libc)Allocation.
* getpwent: (libc)Scanning All Users.
* getpwent_r: (libc)Scanning All Users.
* getpwnam: (libc)Lookup User.
* getpwnam_r: (libc)Lookup User.
* getpwuid: (libc)Lookup User.
* getpwuid_r: (libc)Lookup User.
* getrlimit64: (libc)Limits on Resources.
* getrlimit: (libc)Limits on Resources.
* getrusage: (libc)Resource Usage.
* gets: (libc)Line Input.
* getservbyname: (libc)Services Database.
* getservbyport: (libc)Services Database.
* getservent: (libc)Services Database.
* getsid: (libc)Process Group Functions.
* getsockname: (libc)Reading Address.
* getsockopt: (libc)Socket Option Functions.
* getsubopt: (libc)Suboptions.
* gettext: (libc)Translation with gettext.
* gettimeofday: (libc)High-Resolution Calendar.
* getuid: (libc)Reading Persona.
* getumask: (libc)Setting Permissions.
* getutent: (libc)Manipulating the Database.
* getutent_r: (libc)Manipulating the Database.
* getutid: (libc)Manipulating the Database.
* getutid_r: (libc)Manipulating the Database.
* getutline: (libc)Manipulating the Database.
* getutline_r: (libc)Manipulating the Database.
* getutmp: (libc)XPG Functions.
* getutmpx: (libc)XPG Functions.
* getutxent: (libc)XPG Functions.
* getutxid: (libc)XPG Functions.
* getutxline: (libc)XPG Functions.
* getw: (libc)Character Input.
* getwc: (libc)Character Input.
* getwc_unlocked: (libc)Character Input.
* getwchar: (libc)Character Input.
* getwchar_unlocked: (libc)Character Input.
* getwd: (libc)Working Directory.
* glob64: (libc)Calling Glob.
* glob: (libc)Calling Glob.
* globfree64: (libc)More Flags for Globbing.
* globfree: (libc)More Flags for Globbing.
* gmtime: (libc)Broken-down Time.
* gmtime_r: (libc)Broken-down Time.
* grantpt: (libc)Allocation.
* gsignal: (libc)Signaling Yourself.
* gtty: (libc)BSD Terminal Modes.
* hasmntopt: (libc)mtab.
* hcreate: (libc)Hash Search Function.
* hcreate_r: (libc)Hash Search Function.
* hdestroy: (libc)Hash Search Function.
* hdestroy_r: (libc)Hash Search Function.
* hsearch: (libc)Hash Search Function.
* hsearch_r: (libc)Hash Search Function.
* htonl: (libc)Byte Order.
* htons: (libc)Byte Order.
* hypot: (libc)Exponents and Logarithms.
* hypotf: (libc)Exponents and Logarithms.
* hypotl: (libc)Exponents and Logarithms.
* iconv: (libc)Generic Conversion Interface.
* iconv_close: (libc)Generic Conversion Interface.
* iconv_open: (libc)Generic Conversion Interface.
* if_freenameindex: (libc)Interface Naming.
* if_indextoname: (libc)Interface Naming.
* if_nameindex: (libc)Interface Naming.
* if_nametoindex: (libc)Interface Naming.
* ilogb: (libc)Exponents and Logarithms.
* ilogbf: (libc)Exponents and Logarithms.
* ilogbl: (libc)Exponents and Logarithms.
* imaxabs: (libc)Absolute Value.
* imaxdiv: (libc)Integer Division.
* in6addr_any: (libc)Host Address Data Type.
* in6addr_loopback: (libc)Host Address Data Type.
* index: (libc)Search Functions.
* inet_addr: (libc)Host Address Functions.
* inet_aton: (libc)Host Address Functions.
* inet_lnaof: (libc)Host Address Functions.
* inet_makeaddr: (libc)Host Address Functions.
* inet_netof: (libc)Host Address Functions.
* inet_network: (libc)Host Address Functions.
* inet_ntoa: (libc)Host Address Functions.
* inet_ntop: (libc)Host Address Functions.
* inet_pton: (libc)Host Address Functions.
* initgroups: (libc)Setting Groups.
* initstate: (libc)BSD Random.
* initstate_r: (libc)BSD Random.
* innetgr: (libc)Netgroup Membership.
* int: (libc)Random Access Directory.
* ioctl: (libc)IOCTLs.
* isalnum: (libc)Classification of Characters.
* isalpha: (libc)Classification of Characters.
* isascii: (libc)Classification of Characters.
* isatty: (libc)Is It a Terminal.
* isblank: (libc)Classification of Characters.
* iscntrl: (libc)Classification of Characters.
* isdigit: (libc)Classification of Characters.
* isfinite: (libc)Floating Point Classes.
* isgraph: (libc)Classification of Characters.
* isgreater: (libc)FP Comparison Functions.
* isgreaterequal: (libc)FP Comparison Functions.
* isinf: (libc)Floating Point Classes.
* isinff: (libc)Floating Point Classes.
* isinfl: (libc)Floating Point Classes.
* isless: (libc)FP Comparison Functions.
* islessequal: (libc)FP Comparison Functions.
* islessgreater: (libc)FP Comparison Functions.
* islower: (libc)Classification of Characters.
* isnan: (libc)Floating Point Classes.
* isnan: (libc)Floating Point Classes.
* isnanf: (libc)Floating Point Classes.
* isnanl: (libc)Floating Point Classes.
* isnormal: (libc)Floating Point Classes.
* isprint: (libc)Classification of Characters.
* ispunct: (libc)Classification of Characters.
* isspace: (libc)Classification of Characters.
* isunordered: (libc)FP Comparison Functions.
* isupper: (libc)Classification of Characters.
* iswalnum: (libc)Classification of Wide Characters.
* iswalpha: (libc)Classification of Wide Characters.
* iswblank: (libc)Classification of Wide Characters.
* iswcntrl: (libc)Classification of Wide Characters.
* iswctype: (libc)Classification of Wide Characters.
* iswdigit: (libc)Classification of Wide Characters.
* iswgraph: (libc)Classification of Wide Characters.
* iswlower: (libc)Classification of Wide Characters.
* iswprint: (libc)Classification of Wide Characters.
* iswpunct: (libc)Classification of Wide Characters.
* iswspace: (libc)Classification of Wide Characters.
* iswupper: (libc)Classification of Wide Characters.
* iswxdigit: (libc)Classification of Wide Characters.
* isxdigit: (libc)Classification of Characters.
* j0: (libc)Special Functions.
* j0f: (libc)Special Functions.
* j0l: (libc)Special Functions.
* j1: (libc)Special Functions.
* j1f: (libc)Special Functions.
* j1l: (libc)Special Functions.
* jn: (libc)Special Functions.
* jnf: (libc)Special Functions.
* jnl: (libc)Special Functions.
* jrand48: (libc)SVID Random.
* jrand48_r: (libc)SVID Random.
* kill: (libc)Signaling Another Process.
* killpg: (libc)Signaling Another Process.
* l64a: (libc)Encode Binary Data.
* labs: (libc)Absolute Value.
* lcong48: (libc)SVID Random.
* lcong48_r: (libc)SVID Random.
* ldexp: (libc)Normalization Functions.
* ldexpf: (libc)Normalization Functions.
* ldexpl: (libc)Normalization Functions.
* ldiv: (libc)Integer Division.
* lfind: (libc)Array Search Function.
* lgamma: (libc)Special Functions.
* lgamma_r: (libc)Special Functions.
* lgammaf: (libc)Special Functions.
* lgammaf_r: (libc)Special Functions.
* lgammal: (libc)Special Functions.
* lgammal_r: (libc)Special Functions.
* link: (libc)Hard Links.
* lio_listio64: (libc)Asynchronous Reads/Writes.
* lio_listio: (libc)Asynchronous Reads/Writes.
* listen: (libc)Listening.
* llabs: (libc)Absolute Value.
* lldiv: (libc)Integer Division.
* llrint: (libc)Rounding Functions.
* llrintf: (libc)Rounding Functions.
* llrintl: (libc)Rounding Functions.
* llround: (libc)Rounding Functions.
* llroundf: (libc)Rounding Functions.
* llroundl: (libc)Rounding Functions.
* localeconv: (libc)The Lame Way to Locale Data.
* localtime: (libc)Broken-down Time.
* localtime_r: (libc)Broken-down Time.
* log10: (libc)Exponents and Logarithms.
* log10f: (libc)Exponents and Logarithms.
* log10l: (libc)Exponents and Logarithms.
* log1p: (libc)Exponents and Logarithms.
* log1pf: (libc)Exponents and Logarithms.
* log1pl: (libc)Exponents and Logarithms.
* log2: (libc)Exponents and Logarithms.
* log2f: (libc)Exponents and Logarithms.
* log2l: (libc)Exponents and Logarithms.
* log: (libc)Exponents and Logarithms.
* logb: (libc)Exponents and Logarithms.
* logbf: (libc)Exponents and Logarithms.
* logbl: (libc)Exponents and Logarithms.
* logf: (libc)Exponents and Logarithms.
* login: (libc)Logging In and Out.
* login_tty: (libc)Logging In and Out.
* logl: (libc)Exponents and Logarithms.
* logout: (libc)Logging In and Out.
* logwtmp: (libc)Logging In and Out.
* longjmp: (libc)Non-Local Details.
* lrand48: (libc)SVID Random.
* lrand48_r: (libc)SVID Random.
* lrint: (libc)Rounding Functions.
* lrintf: (libc)Rounding Functions.
* lrintl: (libc)Rounding Functions.
* lround: (libc)Rounding Functions.
* lroundf: (libc)Rounding Functions.
* lroundl: (libc)Rounding Functions.
* lsearch: (libc)Array Search Function.
* lseek64: (libc)File Position Primitive.
* lseek: (libc)File Position Primitive.
* lstat64: (libc)Reading Attributes.
* lstat: (libc)Reading Attributes.
* lutimes: (libc)File Times.
* madvise: (libc)Memory-mapped I/O.
* makecontext: (libc)System V contexts.
* mallinfo: (libc)Statistics of Malloc.
* malloc: (libc)Basic Allocation.
* mallopt: (libc)Malloc Tunable Parameters.
* mblen: (libc)Non-reentrant Character Conversion.
* mbrlen: (libc)Converting a Character.
* mbrtowc: (libc)Converting a Character.
* mbsinit: (libc)Keeping the state.
* mbsnrtowcs: (libc)Converting Strings.
* mbsrtowcs: (libc)Converting Strings.
* mbstowcs: (libc)Non-reentrant String Conversion.
* mbtowc: (libc)Non-reentrant Character Conversion.
* mcheck: (libc)Heap Consistency Checking.
* memalign: (libc)Aligned Memory Blocks.
* memccpy: (libc)Copying and Concatenation.
* memchr: (libc)Search Functions.
* memcmp: (libc)String/Array Comparison.
* memcpy: (libc)Copying and Concatenation.
* memfrob: (libc)Trivial Encryption.
* memmem: (libc)Search Functions.
* memmove: (libc)Copying and Concatenation.
* mempcpy: (libc)Copying and Concatenation.
* memrchr: (libc)Search Functions.
* memset: (libc)Copying and Concatenation.
* mkdir: (libc)Creating Directories.
* mkdtemp: (libc)Temporary Files.
* mkfifo: (libc)FIFO Special Files.
* mknod: (libc)Making Special Files.
* mkstemp: (libc)Temporary Files.
* mktemp: (libc)Temporary Files.
* mktime: (libc)Broken-down Time.
* mlock: (libc)Page Lock Functions.
* mlockall: (libc)Page Lock Functions.
* mmap64: (libc)Memory-mapped I/O.
* mmap: (libc)Memory-mapped I/O.
* modf: (libc)Rounding Functions.
* modff: (libc)Rounding Functions.
* modfl: (libc)Rounding Functions.
* mount: (libc)Mount-Unmount-Remount.
* mprobe: (libc)Heap Consistency Checking.
* mrand48: (libc)SVID Random.
* mrand48_r: (libc)SVID Random.
* mremap: (libc)Memory-mapped I/O.
* msync: (libc)Memory-mapped I/O.
* mtrace: (libc)Tracing malloc.
* munlock: (libc)Page Lock Functions.
* munlockall: (libc)Page Lock Functions.
* munmap: (libc)Memory-mapped I/O.
* muntrace: (libc)Tracing malloc.
* nan: (libc)FP Bit Twiddling.
* nanf: (libc)FP Bit Twiddling.
* nanl: (libc)FP Bit Twiddling.
* nanosleep: (libc)Sleeping.
* nearbyint: (libc)Rounding Functions.
* nearbyintf: (libc)Rounding Functions.
* nearbyintl: (libc)Rounding Functions.
* nextafter: (libc)FP Bit Twiddling.
* nextafterf: (libc)FP Bit Twiddling.
* nextafterl: (libc)FP Bit Twiddling.
* nexttoward: (libc)FP Bit Twiddling.
* nexttowardf: (libc)FP Bit Twiddling.
* nexttowardl: (libc)FP Bit Twiddling.
* nftw64: (libc)Working with Directory Trees.
* nftw: (libc)Working with Directory Trees.
* ngettext: (libc)Advanced gettext functions.
* nice: (libc)Traditional Scheduling Functions.
* nl_langinfo: (libc)The Elegant and Fast Way.
* nrand48: (libc)SVID Random.
* nrand48_r: (libc)SVID Random.
* ntohl: (libc)Byte Order.
* ntohs: (libc)Byte Order.
* ntp_adjtime: (libc)High Accuracy Clock.
* ntp_gettime: (libc)High Accuracy Clock.
* obstack_1grow: (libc)Growing Objects.
* obstack_1grow_fast: (libc)Extra Fast Growing.
* obstack_alignment_mask: (libc)Obstacks Data Alignment.
* obstack_alloc: (libc)Allocation in an Obstack.
* obstack_base: (libc)Status of an Obstack.
* obstack_blank: (libc)Growing Objects.
* obstack_blank_fast: (libc)Extra Fast Growing.
* obstack_chunk_size: (libc)Obstack Chunks.
* obstack_copy0: (libc)Allocation in an Obstack.
* obstack_copy: (libc)Allocation in an Obstack.
* obstack_finish: (libc)Growing Objects.
* obstack_free: (libc)Freeing Obstack Objects.
* obstack_grow0: (libc)Growing Objects.
* obstack_grow: (libc)Growing Objects.
* obstack_init: (libc)Preparing for Obstacks.
* obstack_int_grow: (libc)Growing Objects.
* obstack_int_grow_fast: (libc)Extra Fast Growing.
* obstack_next_free: (libc)Status of an Obstack.
* obstack_object_size: (libc)Growing Objects.
* obstack_object_size: (libc)Status of an Obstack.
* obstack_printf: (libc)Dynamic Output.
* obstack_ptr_grow: (libc)Growing Objects.
* obstack_ptr_grow_fast: (libc)Extra Fast Growing.
* obstack_room: (libc)Extra Fast Growing.
* obstack_vprintf: (libc)Variable Arguments Output.
* offsetof: (libc)Structure Measurement.
* on_exit: (libc)Cleanups on Exit.
* open64: (libc)Opening and Closing Files.
* open: (libc)Opening and Closing Files.
* open_memstream: (libc)String Streams.
* open_obstack_stream: (libc)Obstack Streams.
* opendir: (libc)Opening a Directory.
* openlog: (libc)openlog.
* openpty: (libc)Pseudo-Terminal Pairs.
* parse_printf_format: (libc)Parsing a Template String.
* pathconf: (libc)Pathconf.
* pause: (libc)Using Pause.
* pclose: (libc)Pipe to a Subprocess.
* perror: (libc)Error Messages.
* pipe: (libc)Creating a Pipe.
* popen: (libc)Pipe to a Subprocess.
* posix_memalign: (libc)Aligned Memory Blocks.
* pow10: (libc)Exponents and Logarithms.
* pow10f: (libc)Exponents and Logarithms.
* pow10l: (libc)Exponents and Logarithms.
* pow: (libc)Exponents and Logarithms.
* powf: (libc)Exponents and Logarithms.
* powl: (libc)Exponents and Logarithms.
* pread64: (libc)I/O Primitives.
* pread: (libc)I/O Primitives.
* printf: (libc)Formatted Output Functions.
* printf_size: (libc)Predefined Printf Handlers.
* printf_size_info: (libc)Predefined Printf Handlers.
* psignal: (libc)Signal Messages.
* ptsname: (libc)Allocation.
* ptsname_r: (libc)Allocation.
* putc: (libc)Simple Output.
* putc_unlocked: (libc)Simple Output.
* putchar: (libc)Simple Output.
* putchar_unlocked: (libc)Simple Output.
* putenv: (libc)Environment Access.
* putpwent: (libc)Writing a User Entry.
* puts: (libc)Simple Output.
* pututline: (libc)Manipulating the Database.
* pututxline: (libc)XPG Functions.
* putw: (libc)Simple Output.
* putwc: (libc)Simple Output.
* putwc_unlocked: (libc)Simple Output.
* putwchar: (libc)Simple Output.
* putwchar_unlocked: (libc)Simple Output.
* pwrite64: (libc)I/O Primitives.
* pwrite: (libc)I/O Primitives.
* qecvt: (libc)System V Number Conversion.
* qecvt_r: (libc)System V Number Conversion.
* qfcvt: (libc)System V Number Conversion.
* qfcvt_r: (libc)System V Number Conversion.
* qgcvt: (libc)System V Number Conversion.
* qsort: (libc)Array Sort Function.
* raise: (libc)Signaling Yourself.
* rand: (libc)ISO Random.
* rand_r: (libc)ISO Random.
* random: (libc)BSD Random.
* random_r: (libc)BSD Random.
* rawmemchr: (libc)Search Functions.
* read: (libc)I/O Primitives.
* readdir64: (libc)Reading/Closing Directory.
* readdir64_r: (libc)Reading/Closing Directory.
* readdir: (libc)Reading/Closing Directory.
* readdir_r: (libc)Reading/Closing Directory.
* readlink: (libc)Symbolic Links.
* readv: (libc)Scatter-Gather.
* realloc: (libc)Changing Block Size.
* realpath: (libc)Symbolic Links.
* recv: (libc)Receiving Data.
* recvfrom: (libc)Receiving Datagrams.
* recvmsg: (libc)Receiving Datagrams.
* regcomp: (libc)POSIX Regexp Compilation.
* regerror: (libc)Regexp Cleanup.
* regexec: (libc)Matching POSIX Regexps.
* regfree: (libc)Regexp Cleanup.
* register_printf_function: (libc)Registering New Conversions.
* remainder: (libc)Remainder Functions.
* remainderf: (libc)Remainder Functions.
* remainderl: (libc)Remainder Functions.
* remove: (libc)Deleting Files.
* rename: (libc)Renaming Files.
* rewind: (libc)File Positioning.
* rewinddir: (libc)Random Access Directory.
* rindex: (libc)Search Functions.
* rint: (libc)Rounding Functions.
* rintf: (libc)Rounding Functions.
* rintl: (libc)Rounding Functions.
* rmdir: (libc)Deleting Files.
* round: (libc)Rounding Functions.
* roundf: (libc)Rounding Functions.
* roundl: (libc)Rounding Functions.
* rpmatch: (libc)Yes-or-No Questions.
* sbrk: (libc)Resizing the Data Segment.
* scalb: (libc)Normalization Functions.
* scalbf: (libc)Normalization Functions.
* scalbl: (libc)Normalization Functions.
* scalbln: (libc)Normalization Functions.
* scalblnf: (libc)Normalization Functions.
* scalblnl: (libc)Normalization Functions.
* scalbn: (libc)Normalization Functions.
* scalbnf: (libc)Normalization Functions.
* scalbnl: (libc)Normalization Functions.
* scandir64: (libc)Scanning Directory Content.
* scandir: (libc)Scanning Directory Content.
* scanf: (libc)Formatted Input Functions.
* sched_get_priority_max: (libc)Basic Scheduling Functions.
* sched_get_priority_min: (libc)Basic Scheduling Functions.
* sched_getaffinity: (libc)CPU Affinity.
* sched_getparam: (libc)Basic Scheduling Functions.
* sched_getscheduler: (libc)Basic Scheduling Functions.
* sched_rr_get_interval: (libc)Basic Scheduling Functions.
* sched_setaffinity: (libc)CPU Affinity.
* sched_setparam: (libc)Basic Scheduling Functions.
* sched_setscheduler: (libc)Basic Scheduling Functions.
* sched_yield: (libc)Basic Scheduling Functions.
* seed48: (libc)SVID Random.
* seed48_r: (libc)SVID Random.
* seekdir: (libc)Random Access Directory.
* select: (libc)Waiting for I/O.
* send: (libc)Sending Data.
* sendmsg: (libc)Receiving Datagrams.
* sendto: (libc)Sending Datagrams.
* setbuf: (libc)Controlling Buffering.
* setbuffer: (libc)Controlling Buffering.
* setcontext: (libc)System V contexts.
* setdomainname: (libc)Host Identification.
* setegid: (libc)Setting Groups.
* setenv: (libc)Environment Access.
* seteuid: (libc)Setting User ID.
* setfsent: (libc)fstab.
* setgid: (libc)Setting Groups.
* setgrent: (libc)Scanning All Groups.
* setgroups: (libc)Setting Groups.
* sethostent: (libc)Host Names.
* sethostid: (libc)Host Identification.
* sethostname: (libc)Host Identification.
* setitimer: (libc)Setting an Alarm.
* setjmp: (libc)Non-Local Details.
* setkey: (libc)DES Encryption.
* setkey_r: (libc)DES Encryption.
* setlinebuf: (libc)Controlling Buffering.
* setlocale: (libc)Setting the Locale.
* setlogmask: (libc)setlogmask.
* setmntent: (libc)mtab.
* setnetent: (libc)Networks Database.
* setnetgrent: (libc)Lookup Netgroup.
* setpgid: (libc)Process Group Functions.
* setpgrp: (libc)Process Group Functions.
* setpriority: (libc)Traditional Scheduling Functions.
* setprotoent: (libc)Protocols Database.
* setpwent: (libc)Scanning All Users.
* setregid: (libc)Setting Groups.
* setreuid: (libc)Setting User ID.
* setrlimit64: (libc)Limits on Resources.
* setrlimit: (libc)Limits on Resources.
* setservent: (libc)Services Database.
* setsid: (libc)Process Group Functions.
* setsockopt: (libc)Socket Option Functions.
* setstate: (libc)BSD Random.
* setstate_r: (libc)BSD Random.
* settimeofday: (libc)High-Resolution Calendar.
* setuid: (libc)Setting User ID.
* setutent: (libc)Manipulating the Database.
* setutxent: (libc)XPG Functions.
* setvbuf: (libc)Controlling Buffering.
* shutdown: (libc)Closing a Socket.
* sigaction: (libc)Advanced Signal Handling.
* sigaddset: (libc)Signal Sets.
* sigaltstack: (libc)Signal Stack.
* sigblock: (libc)Blocking in BSD.
* sigdelset: (libc)Signal Sets.
* sigemptyset: (libc)Signal Sets.
* sigfillset: (libc)Signal Sets.
* siginterrupt: (libc)BSD Handler.
* sigismember: (libc)Signal Sets.
* siglongjmp: (libc)Non-Local Exits and Signals.
* sigmask: (libc)Blocking in BSD.
* signal: (libc)Basic Signal Handling.
* signbit: (libc)FP Bit Twiddling.
* significand: (libc)Normalization Functions.
* significandf: (libc)Normalization Functions.
* significandl: (libc)Normalization Functions.
* sigpause: (libc)Blocking in BSD.
* sigpending: (libc)Checking for Pending Signals.
* sigprocmask: (libc)Process Signal Mask.
* sigsetjmp: (libc)Non-Local Exits and Signals.
* sigsetmask: (libc)Blocking in BSD.
* sigstack: (libc)Signal Stack.
* sigsuspend: (libc)Sigsuspend.
* sigvec: (libc)BSD Handler.
* sin: (libc)Trig Functions.
* sincos: (libc)Trig Functions.
* sincosf: (libc)Trig Functions.
* sincosl: (libc)Trig Functions.
* sinf: (libc)Trig Functions.
* sinh: (libc)Hyperbolic Functions.
* sinhf: (libc)Hyperbolic Functions.
* sinhl: (libc)Hyperbolic Functions.
* sinl: (libc)Trig Functions.
* sleep: (libc)Sleeping.
* snprintf: (libc)Formatted Output Functions.
* socket: (libc)Creating a Socket.
* socketpair: (libc)Socket Pairs.
* sprintf: (libc)Formatted Output Functions.
* sqrt: (libc)Exponents and Logarithms.
* sqrtf: (libc)Exponents and Logarithms.
* sqrtl: (libc)Exponents and Logarithms.
* srand48: (libc)SVID Random.
* srand48_r: (libc)SVID Random.
* srand: (libc)ISO Random.
* srandom: (libc)BSD Random.
* srandom_r: (libc)BSD Random.
* sscanf: (libc)Formatted Input Functions.
* ssignal: (libc)Basic Signal Handling.
* stat64: (libc)Reading Attributes.
* stat: (libc)Reading Attributes.
* stime: (libc)Simple Calendar Time.
* stpcpy: (libc)Copying and Concatenation.
* stpncpy: (libc)Copying and Concatenation.
* strcasecmp: (libc)String/Array Comparison.
* strcasestr: (libc)Search Functions.
* strcat: (libc)Copying and Concatenation.
* strchr: (libc)Search Functions.
* strchrnul: (libc)Search Functions.
* strcmp: (libc)String/Array Comparison.
* strcoll: (libc)Collation Functions.
* strcpy: (libc)Copying and Concatenation.
* strcspn: (libc)Search Functions.
* strdup: (libc)Copying and Concatenation.
* strdupa: (libc)Copying and Concatenation.
* strerror: (libc)Error Messages.
* strerror_r: (libc)Error Messages.
* strfmon: (libc)Formatting Numbers.
* strfry: (libc)strfry.
* strftime: (libc)Formatting Calendar Time.
* strlen: (libc)String Length.
* strncasecmp: (libc)String/Array Comparison.
* strncat: (libc)Copying and Concatenation.
* strncmp: (libc)String/Array Comparison.
* strncpy: (libc)Copying and Concatenation.
* strndup: (libc)Copying and Concatenation.
* strndupa: (libc)Copying and Concatenation.
* strnlen: (libc)String Length.
* strpbrk: (libc)Search Functions.
* strptime: (libc)Low-Level Time String Parsing.
* strrchr: (libc)Search Functions.
* strsep: (libc)Finding Tokens in a String.
* strsignal: (libc)Signal Messages.
* strspn: (libc)Search Functions.
* strstr: (libc)Search Functions.
* strtod: (libc)Parsing of Floats.
* strtof: (libc)Parsing of Floats.
* strtoimax: (libc)Parsing of Integers.
* strtok: (libc)Finding Tokens in a String.
* strtok_r: (libc)Finding Tokens in a String.
* strtol: (libc)Parsing of Integers.
* strtold: (libc)Parsing of Floats.
* strtoll: (libc)Parsing of Integers.
* strtoq: (libc)Parsing of Integers.
* strtoul: (libc)Parsing of Integers.
* strtoull: (libc)Parsing of Integers.
* strtoumax: (libc)Parsing of Integers.
* strtouq: (libc)Parsing of Integers.
* strverscmp: (libc)String/Array Comparison.
* strxfrm: (libc)Collation Functions.
* stty: (libc)BSD Terminal Modes.
* swapcontext: (libc)System V contexts.
* swprintf: (libc)Formatted Output Functions.
* swscanf: (libc)Formatted Input Functions.
* symlink: (libc)Symbolic Links.
* sync: (libc)Synchronizing I/O.
* syscall: (libc)System Calls.
* sysconf: (libc)Sysconf Definition.
* sysctl: (libc)System Parameters.
* syslog: (libc)syslog; vsyslog.
* system: (libc)Running a Command.
* sysv_signal: (libc)Basic Signal Handling.
* tan: (libc)Trig Functions.
* tanf: (libc)Trig Functions.
* tanh: (libc)Hyperbolic Functions.
* tanhf: (libc)Hyperbolic Functions.
* tanhl: (libc)Hyperbolic Functions.
* tanl: (libc)Trig Functions.
* tcdrain: (libc)Line Control.
* tcflow: (libc)Line Control.
* tcflush: (libc)Line Control.
* tcgetattr: (libc)Mode Functions.
* tcgetpgrp: (libc)Terminal Access Functions.
* tcgetsid: (libc)Terminal Access Functions.
* tcsendbreak: (libc)Line Control.
* tcsetattr: (libc)Mode Functions.
* tcsetpgrp: (libc)Terminal Access Functions.
* tdelete: (libc)Tree Search Function.
* tdestroy: (libc)Tree Search Function.
* tempnam: (libc)Temporary Files.
* textdomain: (libc)Locating gettext catalog.
* tfind: (libc)Tree Search Function.
* tgamma: (libc)Special Functions.
* tgammaf: (libc)Special Functions.
* tgammal: (libc)Special Functions.
* time: (libc)Simple Calendar Time.
* timegm: (libc)Broken-down Time.
* timelocal: (libc)Broken-down Time.
* times: (libc)Processor Time.
* tmpfile64: (libc)Temporary Files.
* tmpfile: (libc)Temporary Files.
* tmpnam: (libc)Temporary Files.
* tmpnam_r: (libc)Temporary Files.
* toascii: (libc)Case Conversion.
* tolower: (libc)Case Conversion.
* toupper: (libc)Case Conversion.
* towctrans: (libc)Wide Character Case Conversion.
* towlower: (libc)Wide Character Case Conversion.
* towupper: (libc)Wide Character Case Conversion.
* trunc: (libc)Rounding Functions.
* truncate64: (libc)File Size.
* truncate: (libc)File Size.
* truncf: (libc)Rounding Functions.
* truncl: (libc)Rounding Functions.
* tsearch: (libc)Tree Search Function.
* ttyname: (libc)Is It a Terminal.
* ttyname_r: (libc)Is It a Terminal.
* twalk: (libc)Tree Search Function.
* tzset: (libc)Time Zone Functions.
* ulimit: (libc)Limits on Resources.
* umask: (libc)Setting Permissions.
* umount2: (libc)Mount-Unmount-Remount.
* umount: (libc)Mount-Unmount-Remount.
* uname: (libc)Platform Type.
* ungetc: (libc)How Unread.
* ungetwc: (libc)How Unread.
* unlink: (libc)Deleting Files.
* unlockpt: (libc)Allocation.
* unsetenv: (libc)Environment Access.
* updwtmp: (libc)Manipulating the Database.
* utime: (libc)File Times.
* utimes: (libc)File Times.
* utmpname: (libc)Manipulating the Database.
* utmpxname: (libc)XPG Functions.
* va_arg: (libc)Argument Macros.
* va_end: (libc)Argument Macros.
* va_start: (libc)Argument Macros.
* va_start: (libc)Old Varargs.
* valloc: (libc)Aligned Memory Blocks.
* vasprintf: (libc)Variable Arguments Output.
* verr: (libc)Error Messages.
* verrx: (libc)Error Messages.
* versionsort64: (libc)Scanning Directory Content.
* versionsort: (libc)Scanning Directory Content.
* vfork: (libc)Creating a Process.
* vfprintf: (libc)Variable Arguments Output.
* vfscanf: (libc)Variable Arguments Input.
* vfwprintf: (libc)Variable Arguments Output.
* vfwscanf: (libc)Variable Arguments Input.
* vlimit: (libc)Limits on Resources.
* vprintf: (libc)Variable Arguments Output.
* vscanf: (libc)Variable Arguments Input.
* vsnprintf: (libc)Variable Arguments Output.
* vsprintf: (libc)Variable Arguments Output.
* vsscanf: (libc)Variable Arguments Input.
* vswprintf: (libc)Variable Arguments Output.
* vswscanf: (libc)Variable Arguments Input.
* vsyslog: (libc)syslog; vsyslog.
* vtimes: (libc)Resource Usage.
* vwarn: (libc)Error Messages.
* vwarnx: (libc)Error Messages.
* vwprintf: (libc)Variable Arguments Output.
* vwscanf: (libc)Variable Arguments Input.
* wait3: (libc)BSD Wait Functions.
* wait4: (libc)Process Completion.
* wait: (libc)Process Completion.
* waitpid: (libc)Process Completion.
* warn: (libc)Error Messages.
* warnx: (libc)Error Messages.
* wcpcpy: (libc)Copying and Concatenation.
* wcpncpy: (libc)Copying and Concatenation.
* wcrtomb: (libc)Converting a Character.
* wcscasecmp: (libc)String/Array Comparison.
* wcscat: (libc)Copying and Concatenation.
* wcschr: (libc)Search Functions.
* wcschrnul: (libc)Search Functions.
* wcscmp: (libc)String/Array Comparison.
* wcscoll: (libc)Collation Functions.
* wcscpy: (libc)Copying and Concatenation.
* wcscspn: (libc)Search Functions.
* wcsdup: (libc)Copying and Concatenation.
* wcsftime: (libc)Formatting Calendar Time.
* wcslen: (libc)String Length.
* wcsncasecmp: (libc)String/Array Comparison.
* wcsncat: (libc)Copying and Concatenation.
* wcsncmp: (libc)String/Array Comparison.
* wcsncpy: (libc)Copying and Concatenation.
* wcsnlen: (libc)String Length.
* wcsnrtombs: (libc)Converting Strings.
* wcspbrk: (libc)Search Functions.
* wcsrchr: (libc)Search Functions.
* wcsrtombs: (libc)Converting Strings.
* wcsspn: (libc)Search Functions.
* wcsstr: (libc)Search Functions.
* wcstod: (libc)Parsing of Floats.
* wcstof: (libc)Parsing of Floats.
* wcstoimax: (libc)Parsing of Integers.
* wcstok: (libc)Finding Tokens in a String.
* wcstol: (libc)Parsing of Integers.
* wcstold: (libc)Parsing of Floats.
* wcstoll: (libc)Parsing of Integers.
* wcstombs: (libc)Non-reentrant String Conversion.
* wcstoq: (libc)Parsing of Integers.
* wcstoul: (libc)Parsing of Integers.
* wcstoull: (libc)Parsing of Integers.
* wcstoumax: (libc)Parsing of Integers.
* wcstouq: (libc)Parsing of Integers.
* wcswcs: (libc)Search Functions.
* wcsxfrm: (libc)Collation Functions.
* wctob: (libc)Converting a Character.
* wctomb: (libc)Non-reentrant Character Conversion.
* wctrans: (libc)Wide Character Case Conversion.
* wctype: (libc)Classification of Wide Characters.
* wmemchr: (libc)Search Functions.
* wmemcmp: (libc)String/Array Comparison.
* wmemcpy: (libc)Copying and Concatenation.
* wmemmove: (libc)Copying and Concatenation.
* wmempcpy: (libc)Copying and Concatenation.
* wmemset: (libc)Copying and Concatenation.
* wordexp: (libc)Calling Wordexp.
* wordfree: (libc)Calling Wordexp.
* wprintf: (libc)Formatted Output Functions.
* write: (libc)I/O Primitives.
* writev: (libc)Scatter-Gather.
* wscanf: (libc)Formatted Input Functions.
* y0: (libc)Special Functions.
* y0f: (libc)Special Functions.
* y0l: (libc)Special Functions.
* y1: (libc)Special Functions.
* y1f: (libc)Special Functions.
* y1l: (libc)Special Functions.
* yn: (libc)Special Functions.
* ynf: (libc)Special Functions.
* ynl: (libc)Special Functions.
END-INFO-DIR-ENTRY

   This file documents the GNU C library.

   This is Edition 0.10, last updated 2001-07-06, of `The GNU C Library
Reference Manual', for Version 2.3.x.

   Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2001, 2002,
2003 Free Software Foundation, Inc.

   Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1 or
any later version published by the Free Software Foundation; with the
Invariant Sections being "Free Software Needs Free Documentation" and
"GNU Lesser General Public License", the Front-Cover texts being (a)
(see below), and with the Back-Cover Texts being (b) (see below).  A
copy of the license is included in the section entitled "GNU Free
Documentation License".

   (a) The FSF's Front-Cover Text is:

   A GNU Manual

   (b) The FSF's Back-Cover Text is:

   You have freedom to copy and modify this GNU Manual, like GNU
software.  Copies published by the Free Software Foundation raise
funds for GNU development.


File: libc.info,  Node: Free Manuals,  Next: Copying,  Prev: Contributors,  Up: Top

Free Software Needs Free Documentation
**************************************

The biggest deficiency in the free software community today is not in
the software--it is the lack of good free documentation that we can
include with the free software.  Many of our most important programs do
not come with free reference manuals and free introductory texts.
Documentation is an essential part of any software package; when an
important free software package does not come with a free manual and a
free tutorial, that is a major gap.  We have many such gaps today.

   Consider Perl, for instance.  The tutorial manuals that people
normally use are non-free.  How did this come about?  Because the
authors of those manuals published them with restrictive terms--no
copying, no modification, source files not available--which exclude
them from the free software world.

   That wasn't the first time this sort of thing happened, and it was
far from the last.  Many times we have heard a GNU user eagerly
describe a manual that he is writing, his intended contribution to the
community, only to learn that he had ruined everything by signing a
publication contract to make it non-free.

   Free documentation, like free software, is a matter of freedom, not
price.  The problem with the non-free manual is not that publishers
charge a price for printed copies--that in itself is fine.  (The Free
Software Foundation sells printed copies of manuals, too.)  The problem
is the restrictions on the use of the manual.  Free manuals are
available in source code form, and give you permission to copy and
modify.  Non-free manuals do not allow this.

   The criteria of freedom for a free manual are roughly the same as for
free software.  Redistribution (including the normal kinds of
commercial redistribution) must be permitted, so that the manual can
accompany every copy of the program, both on-line and on paper.

   Permission for modification of the technical content is crucial too.
When people modify the software, adding or changing features, if they
are conscientious they will change the manual too--so they can provide
accurate and clear documentation for the modified program.  A manual
that leaves you no choice but to write a new manual to document a
changed version of the program is not really available to our community.

   Some kinds of limits on the way modification is handled are
acceptable.  For example, requirements to preserve the original
author's copyright notice, the distribution terms, or the list of
authors, are ok.  It is also no problem to require modified versions to
include notice that they were modified.  Even entire sections that may
not be deleted or changed are acceptable, as long as they deal with
nontechnical topics (like this one).  These kinds of restrictions are
acceptable because they don't obstruct the community's normal use of
the manual.

   However, it must be possible to modify all the _technical_ content
of the manual, and then distribute the result in all the usual media,
through all the usual channels.  Otherwise, the restrictions obstruct
the use of the manual, it is not free, and we need another manual to
replace it.

   Please spread the word about this issue.  Our community continues to
lose manuals to proprietary publishing.  If we spread the word that
free software needs free reference manuals and free tutorials, perhaps
the next person who wants to contribute by writing documentation will
realize, before it is too late, that only free manuals contribute to
the free software community.

   If you are writing documentation, please insist on publishing it
under the GNU Free Documentation License or another free documentation
license.  Remember that this decision requires your approval--you don't
have to let the publisher decide.  Some commercial publishers will use
a free license if you insist, but they will not propose the option; it
is up to you to raise the issue and say firmly that this is what you
want.  If the publisher you are dealing with refuses, please try other
publishers.  If you're not sure whether a proposed license is free,
write to <licensing@gnu.org>.

   You can encourage commercial publishers to sell more free, copylefted
manuals and tutorials by buying them, and particularly by buying copies
from the publishers that paid for their writing or for major
improvements.  Meanwhile, try to avoid buying non-free documentation at
all.  Check the distribution terms of a manual before you buy it, and
insist that whoever seeks your business must respect your freedom.
Check the history of the book, and try reward the publishers that have
paid or pay the authors to work on it.

   The Free Software Foundation maintains a list of free documentation
published by other publishers, at
<http://www.fsf.org/doc/other-free-books.html>.


File: libc.info,  Node: Copying,  Next: Documentation License,  Prev: Free Manuals,  Up: Top

GNU Lesser General Public License
*********************************

                      Version 2.1, February 1999
     Copyright (C) 1991, 1999 Free Software Foundation, Inc.
     59 Temple Place -- Suite 330, Boston, MA 02111-1307, USA
     
     Everyone is permitted to copy and distribute verbatim copies
     of this license document, but changing it is not allowed.
     
     [This is the first released version of the Lesser GPL.  It also counts
     as the successor of the GNU Library Public License, version 2, hence the
     version number 2.1.]

Preamble
--------

The licenses for most software are designed to take away your freedom
to share and change it.  By contrast, the GNU General Public Licenses
are intended to guarantee your freedom to share and change free
software--to make sure the software is free for all its users.

   This license, the Lesser General Public License, applies to some
specially designated software--typically libraries--of the Free
Software Foundation and other authors who decide to use it.  You can use
it too, but we suggest you first think carefully about whether this
license or the ordinary General Public License is the better strategy to
use in any particular case, based on the explanations below.

   When we speak of free software, we are referring to freedom of use,
not price.  Our General Public Licenses are designed to make sure that
you have the freedom to distribute copies of free software (and charge
for this service if you wish); that you receive source code or can get
it if you want it; that you can change the software and use pieces of it
in new free programs; and that you are informed that you can do these
things.

   To protect your rights, we need to make restrictions that forbid
distributors to deny you these rights or to ask you to surrender these
rights.  These restrictions translate to certain responsibilities for
you if you distribute copies of the library or if you modify it.

   For example, if you distribute copies of the library, whether gratis
or for a fee, you must give the recipients all the rights that we gave
you.  You must make sure that they, too, receive or can get the source
code.  If you link other code with the library, you must provide
complete object files to the recipients, so that they can relink them
with the library after making changes to the library and recompiling
it.  And you must show them these terms so they know their rights.

   We protect your rights with a two-step method: (1) we copyright the
library, and (2) we offer you this license, which gives you legal
permission to copy, distribute and/or modify the library.

   To protect each distributor, we want to make it very clear that
there is no warranty for the free library.  Also, if the library is
modified by someone else and passed on, the recipients should know that
what they have is not the original version, so that the original
author's reputation will not be affected by problems that might be
introduced by others.

   Finally, software patents pose a constant threat to the existence of
any free program.  We wish to make sure that a company cannot
effectively restrict the users of a free program by obtaining a
restrictive license from a patent holder.  Therefore, we insist that
any patent license obtained for a version of the library must be
consistent with the full freedom of use specified in this license.

   Most GNU software, including some libraries, is covered by the
ordinary GNU General Public License.  This license, the GNU Lesser
General Public License, applies to certain designated libraries, and is
quite different from the ordinary General Public License.  We use this
license for certain libraries in order to permit linking those
libraries into non-free programs.

   When a program is linked with a library, whether statically or using
a shared library, the combination of the two is legally speaking a
combined work, a derivative of the original library.  The ordinary
General Public License therefore permits such linking only if the
entire combination fits its criteria of freedom.  The Lesser General
Public License permits more lax criteria for linking other code with
the library.

   We call this license the "Lesser" General Public License because it
does _Less_ to protect the user's freedom than the ordinary General
Public License.  It also provides other free software developers Less
of an advantage over competing non-free programs.  These disadvantages
are the reason we use the ordinary General Public License for many
libraries.  However, the Lesser license provides advantages in certain
special circumstances.

   For example, on rare occasions, there may be a special need to
encourage the widest possible use of a certain library, so that it
becomes a de-facto standard.  To achieve this, non-free programs must be
allowed to use the library.  A more frequent case is that a free
library does the same job as widely used non-free libraries.  In this
case, there is little to gain by limiting the free library to free
software only, so we use the Lesser General Public License.

   In other cases, permission to use a particular library in non-free
programs enables a greater number of people to use a large body of free
software.  For example, permission to use the GNU C Library in non-free
programs enables many more people to use the whole GNU operating
system, as well as its variant, the GNU/Linux operating system.

   Although the Lesser General Public License is Less protective of the
users' freedom, it does ensure that the user of a program that is
linked with the Library has the freedom and the wherewithal to run that
program using a modified version of the Library.

   The precise terms and conditions for copying, distribution and
modification follow.  Pay close attention to the difference between a
"work based on the library" and a "work that uses the library".  The
former contains code derived from the library, whereas the latter must
be combined with the library in order to run.

                   GNU LESSER GENERAL PUBLIC LICENSE
    TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
  0. This License Agreement applies to any software library or other
     program which contains a notice placed by the copyright holder or
     other authorized party saying it may be distributed under the
     terms of this Lesser General Public License (also called "this
     License").  Each licensee is addressed as "you".

     A "library" means a collection of software functions and/or data
     prepared so as to be conveniently linked with application programs
     (which use some of those functions and data) to form executables.

     The "Library", below, refers to any such software library or work
     which has been distributed under these terms.  A "work based on the
     Library" means either the Library or any derivative work under
     copyright law: that is to say, a work containing the Library or a
     portion of it, either verbatim or with modifications and/or
     translated straightforwardly into another language.  (Hereinafter,
     translation is included without limitation in the term
     "modification".)

     "Source code" for a work means the preferred form of the work for
     making modifications to it.  For a library, complete source code
     means all the source code for all modules it contains, plus any
     associated interface definition files, plus the scripts used to
     control compilation and installation of the library.

     Activities other than copying, distribution and modification are
     not covered by this License; they are outside its scope.  The act
     of running a program using the Library is not restricted, and
     output from such a program is covered only if its contents
     constitute a work based on the Library (independent of the use of
     the Library in a tool for writing it).  Whether that is true
     depends on what the Library does and what the program that uses
     the Library does.

  1. You may copy and distribute verbatim copies of the Library's
     complete source code as you receive it, in any medium, provided
     that you conspicuously and appropriately publish on each copy an
     appropriate copyright notice and disclaimer of warranty; keep
     intact all the notices that refer to this License and to the
     absence of any warranty; and distribute a copy of this License
     along with the Library.

     You may charge a fee for the physical act of transferring a copy,
     and you may at your option offer warranty protection in exchange
     for a fee.

  2. You may modify your copy or copies of the Library or any portion
     of it, thus forming a work based on the Library, and copy and
     distribute such modifications or work under the terms of Section 1
     above, provided that you also meet all of these conditions:

       a. The modified work must itself be a software library.

       b. You must cause the files modified to carry prominent notices
          stating that you changed the files and the date of any change.

       c. You must cause the whole of the work to be licensed at no
          charge to all third parties under the terms of this License.

       d. If a facility in the modified Library refers to a function or
          a table of data to be supplied by an application program that
          uses the facility, other than as an argument passed when the
          facility is invoked, then you must make a good faith effort
          to ensure that, in the event an application does not supply
          such function or table, the facility still operates, and
          performs whatever part of its purpose remains meaningful.

          (For example, a function in a library to compute square roots
          has a purpose that is entirely well-defined independent of the
          application.  Therefore, Subsection 2d requires that any
          application-supplied function or table used by this function
          must be optional: if the application does not supply it, the
          square root function must still compute square roots.)

     These requirements apply to the modified work as a whole.  If
     identifiable sections of that work are not derived from the
     Library, and can be reasonably considered independent and separate
     works in themselves, then this License, and its terms, do not
     apply to those sections when you distribute them as separate
     works.  But when you distribute the same sections as part of a
     whole which is a work based on the Library, the distribution of
     the whole must be on the terms of this License, whose permissions
     for other licensees extend to the entire whole, and thus to each
     and every part regardless of who wrote it.

     Thus, it is not the intent of this section to claim rights or
     contest your rights to work written entirely by you; rather, the
     intent is to exercise the right to control the distribution of
     derivative or collective works based on the Library.

     In addition, mere aggregation of another work not based on the
     Library with the Library (or with a work based on the Library) on
     a volume of a storage or distribution medium does not bring the
     other work under the scope of this License.

  3. You may opt to apply the terms of the ordinary GNU General Public
     License instead of this License to a given copy of the Library.
     To do this, you must alter all the notices that refer to this
     License, so that they refer to the ordinary GNU General Public
     License, version 2, instead of to this License.  (If a newer
     version than version 2 of the ordinary GNU General Public License
     has appeared, then you can specify that version instead if you
     wish.)  Do not make any other change in these notices.

     Once this change is made in a given copy, it is irreversible for
     that copy, so the ordinary GNU General Public License applies to
     all subsequent copies and derivative works made from that copy.

     This option is useful when you wish to copy part of the code of
     the Library into a program that is not a library.

  4. You may copy and distribute the Library (or a portion or
     derivative of it, under Section 2) in object code or executable
     form under the terms of Sections 1 and 2 above provided that you
     accompany it with the complete corresponding machine-readable
     source code, which must be distributed under the terms of Sections
     1 and 2 above on a medium customarily used for software
     interchange.

     If distribution of object code is made by offering access to copy
     from a designated place, then offering equivalent access to copy
     the source code from the same place satisfies the requirement to
     distribute the source code, even though third parties are not
     compelled to copy the source along with the object code.

  5. A program that contains no derivative of any portion of the
     Library, but is designed to work with the Library by being
     compiled or linked with it, is called a "work that uses the
     Library".  Such a work, in isolation, is not a derivative work of
     the Library, and therefore falls outside the scope of this License.

     However, linking a "work that uses the Library" with the Library
     creates an executable that is a derivative of the Library (because
     it contains portions of the Library), rather than a "work that
     uses the library".  The executable is therefore covered by this
     License.  Section 6 states terms for distribution of such
     executables.

     When a "work that uses the Library" uses material from a header
     file that is part of the Library, the object code for the work may
     be a derivative work of the Library even though the source code is
     not.  Whether this is true is especially significant if the work
     can be linked without the Library, or if the work is itself a
     library.  The threshold for this to be true is not precisely
     defined by law.

     If such an object file uses only numerical parameters, data
     structure layouts and accessors, and small macros and small inline
     functions (ten lines or less in length), then the use of the object
     file is unrestricted, regardless of whether it is legally a
     derivative work.  (Executables containing this object code plus
     portions of the Library will still fall under Section 6.)

     Otherwise, if the work is a derivative of the Library, you may
     distribute the object code for the work under the terms of Section
     6.  Any executables containing that work also fall under Section 6,
     whether or not they are linked directly with the Library itself.

  6. As an exception to the Sections above, you may also combine or
     link a "work that uses the Library" with the Library to produce a
     work containing portions of the Library, and distribute that work
     under terms of your choice, provided that the terms permit
     modification of the work for the customer's own use and reverse
     engineering for debugging such modifications.

     You must give prominent notice with each copy of the work that the
     Library is used in it and that the Library and its use are covered
     by this License.  You must supply a copy of this License.  If the
     work during execution displays copyright notices, you must include
     the copyright notice for the Library among them, as well as a
     reference directing the user to the copy of this License.  Also,
     you must do one of these things:

       a. Accompany the work with the complete corresponding
          machine-readable source code for the Library including
          whatever changes were used in the work (which must be
          distributed under Sections 1 and 2 above); and, if the work
          is an executable linked with the Library, with the complete
          machine-readable "work that uses the Library", as object code
          and/or source code, so that the user can modify the Library
          and then relink to produce a modified executable containing
          the modified Library.  (It is understood that the user who
          changes the contents of definitions files in the Library will
          not necessarily be able to recompile the application to use
          the modified definitions.)

       b. Use a suitable shared library mechanism for linking with the
          Library.  A suitable mechanism is one that (1) uses at run
          time a copy of the library already present on the user's
          computer system, rather than copying library functions into
          the executable, and (2) will operate properly with a modified
          version of the library, if the user installs one, as long as
          the modified version is interface-compatible with the version
          that the work was made with.

       c. Accompany the work with a written offer, valid for at least
          three years, to give the same user the materials specified in
          Subsection 6a, above, for a charge no more than the cost of
          performing this distribution.

       d. If distribution of the work is made by offering access to copy
          from a designated place, offer equivalent access to copy the
          above specified materials from the same place.

       e. Verify that the user has already received a copy of these
          materials or that you have already sent this user a copy.

     For an executable, the required form of the "work that uses the
     Library" must include any data and utility programs needed for
     reproducing the executable from it.  However, as a special
     exception, the materials to be distributed need not include
     anything that is normally distributed (in either source or binary
     form) with the major components (compiler, kernel, and so on) of
     the operating system on which the executable runs, unless that
     component itself accompanies the executable.

     It may happen that this requirement contradicts the license
     restrictions of other proprietary libraries that do not normally
     accompany the operating system.  Such a contradiction means you
     cannot use both them and the Library together in an executable
     that you distribute.

  7. You may place library facilities that are a work based on the
     Library side-by-side in a single library together with other
     library facilities not covered by this License, and distribute
     such a combined library, provided that the separate distribution
     of the work based on the Library and of the other library
     facilities is otherwise permitted, and provided that you do these
     two things:

       a. Accompany the combined library with a copy of the same work
          based on the Library, uncombined with any other library
          facilities.  This must be distributed under the terms of the
          Sections above.

       b. Give prominent notice with the combined library of the fact
          that part of it is a work based on the Library, and explaining
          where to find the accompanying uncombined form of the same
          work.

  8. You may not copy, modify, sublicense, link with, or distribute the
     Library except as expressly provided under this License.  Any
     attempt otherwise to copy, modify, sublicense, link with, or
     distribute the Library is void, and will automatically terminate
     your rights under this License.  However, parties who have
     received copies, or rights, from you under this License will not
     have their licenses terminated so long as such parties remain in
     full compliance.

  9. You are not required to accept this License, since you have not
     signed it.  However, nothing else grants you permission to modify
     or distribute the Library or its derivative works.  These actions
     are prohibited by law if you do not accept this License.
     Therefore, by modifying or distributing the Library (or any work
     based on the Library), you indicate your acceptance of this
     License to do so, and all its terms and conditions for copying,
     distributing or modifying the Library or works based on it.

 10. Each time you redistribute the Library (or any work based on the
     Library), the recipient automatically receives a license from the
     original licensor to copy, distribute, link with or modify the
     Library subject to these terms and conditions.  You may not impose
     any further restrictions on the recipients' exercise of the rights
     granted herein.  You are not responsible for enforcing compliance
     by third parties with this License.

 11. If, as a consequence of a court judgment or allegation of patent
     infringement or for any other reason (not limited to patent
     issues), conditions are imposed on you (whether by court order,
     agreement or otherwise) that contradict the conditions of this
     License, they do not excuse you from the conditions of this
     License.  If you cannot distribute so as to satisfy simultaneously
     your obligations under this License and any other pertinent
     obligations, then as a consequence you may not distribute the
     Library at all.  For example, if a patent license would not permit
     royalty-free redistribution of the Library by all those who
     receive copies directly or indirectly through you, then the only
     way you could satisfy both it and this License would be to refrain
     entirely from distribution of the Library.

     If any portion of this section is held invalid or unenforceable
     under any particular circumstance, the balance of the section is
     intended to apply, and the section as a whole is intended to apply
     in other circumstances.

     It is not the purpose of this section to induce you to infringe any
     patents or other property right claims or to contest validity of
     any such claims; this section has the sole purpose of protecting
     the integrity of the free software distribution system which is
     implemented by public license practices.  Many people have made
     generous contributions to the wide range of software distributed
     through that system in reliance on consistent application of that
     system; it is up to the author/donor to decide if he or she is
     willing to distribute software through any other system and a
     licensee cannot impose that choice.

     This section is intended to make thoroughly clear what is believed
     to be a consequence of the rest of this License.

 12. If the distribution and/or use of the Library is restricted in
     certain countries either by patents or by copyrighted interfaces,
     the original copyright holder who places the Library under this
     License may add an explicit geographical distribution limitation
     excluding those countries, so that distribution is permitted only
     in or among countries not thus excluded.  In such case, this
     License incorporates the limitation as if written in the body of
     this License.

 13. The Free Software Foundation may publish revised and/or new
     versions of the Lesser General Public License from time to time.
     Such new versions will be similar in spirit to the present version,
     but may differ in detail to address new problems or concerns.

     Each version is given a distinguishing version number.  If the
     Library specifies a version number of this License which applies
     to it and "any later version", you have the option of following
     the terms and conditions either of that version or of any later
     version published by the Free Software Foundation.  If the Library
     does not specify a license version number, you may choose any
     version ever published by the Free Software Foundation.

 14. If you wish to incorporate parts of the Library into other free
     programs whose distribution conditions are incompatible with these,
     write to the author to ask for permission.  For software which is
     copyrighted by the Free Software Foundation, write to the Free
     Software Foundation; we sometimes make exceptions for this.  Our
     decision will be guided by the two goals of preserving the free
     status of all derivatives of our free software and of promoting
     the sharing and reuse of software generally.

                                NO WARRANTY

 15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO
     WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE
     LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
     HOLDERS AND/OR OTHER PARTIES PROVIDE THE LIBRARY "AS IS" WITHOUT
     WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT
     NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
     FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE
     QUALITY AND PERFORMANCE OF THE LIBRARY IS WITH YOU.  SHOULD THE
     LIBRARY PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY
     SERVICING, REPAIR OR CORRECTION.

 16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN
     WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY
     MODIFY AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE
     LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL,
     INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR
     INABILITY TO USE THE LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF
     DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU
     OR THIRD PARTIES OR A FAILURE OF THE LIBRARY TO OPERATE WITH ANY
     OTHER SOFTWARE), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN
     ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.

                      END OF TERMS AND CONDITIONS

How to Apply These Terms to Your New Libraries
----------------------------------------------

If you develop a new library, and you want it to be of the greatest
possible use to the public, we recommend making it free software that
everyone can redistribute and change.  You can do so by permitting
redistribution under these terms (or, alternatively, under the terms of
the ordinary General Public License).

   To apply these terms, attach the following notices to the library.
It is safest to attach them to the start of each source file to most
effectively convey the exclusion of warranty; and each file should have
at least the "copyright" line and a pointer to where the full notice is
found.

     ONE LINE TO GIVE THE LIBRARY'S NAME AND AN IDEA OF WHAT IT DOES.
     Copyright (C) YEAR  NAME OF AUTHOR
     
     This library is free software; you can redistribute it and/or modify it
     under the terms of the GNU Lesser General Public License as published by
     the Free Software Foundation; either version 2.1 of the License, or (at
     your option) any later version.
     
     This library is distributed in the hope that it will be useful, but
     WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     Lesser General Public License for more details.
     
     You should have received a copy of the GNU Lesser General Public
     License along with this library; if not, write to the Free Software
     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
     USA.

   Also add information on how to contact you by electronic and paper
mail.

   You should also get your employer (if you work as a programmer) or
your school, if any, to sign a "copyright disclaimer" for the library,
if necessary.  Here is a sample; alter the names:

     Yoyodyne, Inc., hereby disclaims all copyright interest in the library
     `Frob' (a library for tweaking knobs) written by James Random Hacker.
     
     SIGNATURE OF TY COON, 1 April 1990
     Ty Coon, President of Vice

   That's all there is to it!


File: libc.info,  Node: Documentation License,  Next: Concept Index,  Prev: Copying,  Up: Top

GNU Free Documentation License
******************************

                        Version 1.1, March 2000
     Copyright (C) 2000 Free Software Foundation, Inc.
     59 Temple Place, Suite 330, Boston, MA  02111-1307, USA
     
     Everyone is permitted to copy and distribute verbatim copies
     of this license document, but changing it is not allowed.

  0. PREAMBLE

     The purpose of this License is to make a manual, textbook, or other
     written document "free" in the sense of freedom: to assure everyone
     the effective freedom to copy and redistribute it, with or without
     modifying it, either commercially or noncommercially.  Secondarily,
     this License preserves for the author and publisher a way to get
     credit for their work, while not being considered responsible for
     modifications made by others.

     This License is a kind of "copyleft", which means that derivative
     works of the document must themselves be free in the same sense.
     It complements the GNU General Public License, which is a copyleft
     license designed for free software.

     We have designed this License in order to use it for manuals for
     free software, because free software needs free documentation: a
     free program should come with manuals providing the same freedoms
     that the software does.  But this License is not limited to
     software manuals; it can be used for any textual work, regardless
     of subject matter or whether it is published as a printed book.
     We recommend this License principally for works whose purpose is
     instruction or reference.

  1. APPLICABILITY AND DEFINITIONS

     This License applies to any manual or other work that contains a
     notice placed by the copyright holder saying it can be distributed
     under the terms of this License.  The "Document", below, refers to
     any such manual or work.  Any member of the public is a licensee,
     and is addressed as "you".

     A "Modified Version" of the Document means any work containing the
     Document or a portion of it, either copied verbatim, or with
     modifications and/or translated into another language.

     A "Secondary Section" is a named appendix or a front-matter
     section of the Document that deals exclusively with the
     relationship of the publishers or authors of the Document to the
     Document's overall subject (or to related matters) and contains
     nothing that could fall directly within that overall subject.
     (For example, if the Document is in part a textbook of
     mathematics, a Secondary Section may not explain any mathematics.)
     The relationship could be a matter of historical connection with
     the subject or with related matters, or of legal, commercial,
     philosophical, ethical or political position regarding them.

     The "Invariant Sections" are certain Secondary Sections whose
     titles are designated, as being those of Invariant Sections, in
     the notice that says that the Document is released under this
     License.

     The "Cover Texts" are certain short passages of text that are
     listed, as Front-Cover Texts or Back-Cover Texts, in the notice
     that says that the Document is released under this License.

     A "Transparent" copy of the Document means a machine-readable copy,
     represented in a format whose specification is available to the
     general public, whose contents can be viewed and edited directly
     and straightforwardly with generic text editors or (for images
     composed of pixels) generic paint programs or (for drawings) some
     widely available drawing editor, and that is suitable for input to
     text formatters or for automatic translation to a variety of
     formats suitable for input to text formatters.  A copy made in an
     otherwise Transparent file format whose markup has been designed
     to thwart or discourage subsequent modification by readers is not
     Transparent.  A copy that is not "Transparent" is called "Opaque".

     Examples of suitable formats for Transparent copies include plain
     ASCII without markup, Texinfo input format, LaTeX input format,
     SGML or XML using a publicly available DTD, and
     standard-conforming simple HTML designed for human modification.
     Opaque formats include PostScript, PDF, proprietary formats that
     can be read and edited only by proprietary word processors, SGML
     or XML for which the DTD and/or processing tools are not generally
     available, and the machine-generated HTML produced by some word
     processors for output purposes only.

     The "Title Page" means, for a printed book, the title page itself,
     plus such following pages as are needed to hold, legibly, the
     material this License requires to appear in the title page.  For
     works in formats which do not have any title page as such, "Title
     Page" means the text near the most prominent appearance of the
     work's title, preceding the beginning of the body of the text.

  2. VERBATIM COPYING

     You may copy and distribute the Document in any medium, either
     commercially or noncommercially, provided that this License, the
     copyright notices, and the license notice saying this License
     applies to the Document are reproduced in all copies, and that you
     add no other conditions whatsoever to those of this License.  You
     may not use technical measures to obstruct or control the reading
     or further copying of the copies you make or distribute.  However,
     you may accept compensation in exchange for copies.  If you
     distribute a large enough number of copies you must also follow
     the conditions in section 3.

     You may also lend copies, under the same conditions stated above,
     and you may publicly display copies.

  3. COPYING IN QUANTITY

     If you publish printed copies of the Document numbering more than
     100, and the Document's license notice requires Cover Texts, you
     must enclose the copies in covers that carry, clearly and legibly,
     all these Cover Texts: Front-Cover Texts on the front cover, and
     Back-Cover Texts on the back cover.  Both covers must also clearly
     and legibly identify you as the publisher of these copies.  The
     front cover must present the full title with all words of the
     title equally prominent and visible.  You may add other material
     on the covers in addition.  Copying with changes limited to the
     covers, as long as they preserve the title of the Document and
     satisfy these conditions, can be treated as verbatim copying in
     other respects.

     If the required texts for either cover are too voluminous to fit
     legibly, you should put the first ones listed (as many as fit
     reasonably) on the actual cover, and continue the rest onto
     adjacent pages.

     If you publish or distribute Opaque copies of the Document
     numbering more than 100, you must either include a
     machine-readable Transparent copy along with each Opaque copy, or
     state in or with each Opaque copy a publicly-accessible
     computer-network location containing a complete Transparent copy
     of the Document, free of added material, which the general
     network-using public has access to download anonymously at no
     charge using public-standard network protocols.  If you use the
     latter option, you must take reasonably prudent steps, when you
     begin distribution of Opaque copies in quantity, to ensure that
     this Transparent copy will remain thus accessible at the stated
     location until at least one year after the last time you
     distribute an Opaque copy (directly or through your agents or
     retailers) of that edition to the public.

     It is requested, but not required, that you contact the authors of
     the Document well before redistributing any large number of
     copies, to give them a chance to provide you with an updated
     version of the Document.

  4. MODIFICATIONS

     You may copy and distribute a Modified Version of the Document
     under the conditions of sections 2 and 3 above, provided that you
     release the Modified Version under precisely this License, with
     the Modified Version filling the role of the Document, thus
     licensing distribution and modification of the Modified Version to
     whoever possesses a copy of it.  In addition, you must do these
     things in the Modified Version:

       A. Use in the Title Page (and on the covers, if any) a title
          distinct from that of the Document, and from those of
          previous versions (which should, if there were any, be listed
          in the History section of the Document).  You may use the
          same title as a previous version if the original publisher of
          that version gives permission.

       B. List on the Title Page, as authors, one or more persons or
          entities responsible for authorship of the modifications in
          the Modified Version, together with at least five of the
          principal authors of the Document (all of its principal
          authors, if it has less than five).

       C. State on the Title page the name of the publisher of the
          Modified Version, as the publisher.

       D. Preserve all the copyright notices of the Document.

       E. Add an appropriate copyright notice for your modifications
          adjacent to the other copyright notices.

       F. Include, immediately after the copyright notices, a license
          notice giving the public permission to use the Modified
          Version under the terms of this License, in the form shown in
          the Addendum below.

       G. Preserve in that license notice the full lists of Invariant
          Sections and required Cover Texts given in the Document's
          license notice.

       H. Include an unaltered copy of this License.

       I. Preserve the section entitled "History", and its title, and
          add to it an item stating at least the title, year, new
          authors, and publisher of the Modified Version as given on
          the Title Page.  If there is no section entitled "History" in
          the Document, create one stating the title, year, authors,
          and publisher of the Document as given on its Title Page,
          then add an item describing the Modified Version as stated in
          the previous sentence.

       J. Preserve the network location, if any, given in the Document
          for public access to a Transparent copy of the Document, and
          likewise the network locations given in the Document for
          previous versions it was based on.  These may be placed in
          the "History" section.  You may omit a network location for a
          work that was published at least four years before the
          Document itself, or if the original publisher of the version
          it refers to gives permission.

       K. In any section entitled "Acknowledgments" or "Dedications",
          preserve the section's title, and preserve in the section all
          the substance and tone of each of the contributor
          acknowledgments and/or dedications given therein.

       L. Preserve all the Invariant Sections of the Document,
          unaltered in their text and in their titles.  Section numbers
          or the equivalent are not considered part of the section
          titles.

       M. Delete any section entitled "Endorsements".  Such a section
          may not be included in the Modified Version.

       N. Do not retitle any existing section as "Endorsements" or to
          conflict in title with any Invariant Section.

     If the Modified Version includes new front-matter sections or
     appendices that qualify as Secondary Sections and contain no
     material copied from the Document, you may at your option
     designate some or all of these sections as invariant.  To do this,
     add their titles to the list of Invariant Sections in the Modified
     Version's license notice.  These titles must be distinct from any
     other section titles.

     You may add a section entitled "Endorsements", provided it contains
     nothing but endorsements of your Modified Version by various
     parties--for example, statements of peer review or that the text
     has been approved by an organization as the authoritative
     definition of a standard.

     You may add a passage of up to five words as a Front-Cover Text,
     and a passage of up to 25 words as a Back-Cover Text, to the end
     of the list of Cover Texts in the Modified Version.  Only one
     passage of Front-Cover Text and one of Back-Cover Text may be
     added by (or through arrangements made by) any one entity.  If the
     Document already includes a cover text for the same cover,
     previously added by you or by arrangement made by the same entity
     you are acting on behalf of, you may not add another; but you may
     replace the old one, on explicit permission from the previous
     publisher that added the old one.

     The author(s) and publisher(s) of the Document do not by this
     License give permission to use their names for publicity for or to
     assert or imply endorsement of any Modified Version.

  5. COMBINING DOCUMENTS

     You may combine the Document with other documents released under
     this License, under the terms defined in section 4 above for
     modified versions, provided that you include in the combination
     all of the Invariant Sections of all of the original documents,
     unmodified, and list them all as Invariant Sections of your
     combined work in its license notice.

     The combined work need only contain one copy of this License, and
     multiple identical Invariant Sections may be replaced with a single
     copy.  If there are multiple Invariant Sections with the same name
     but different contents, make the title of each such section unique
     by adding at the end of it, in parentheses, the name of the
     original author or publisher of that section if known, or else a
     unique number.  Make the same adjustment to the section titles in
     the list of Invariant Sections in the license notice of the
     combined work.

     In the combination, you must combine any sections entitled
     "History" in the various original documents, forming one section
     entitled "History"; likewise combine any sections entitled
     "Acknowledgments", and any sections entitled "Dedications".  You
     must delete all sections entitled "Endorsements."

  6. COLLECTIONS OF DOCUMENTS

     You may make a collection consisting of the Document and other
     documents released under this License, and replace the individual
     copies of this License in the various documents with a single copy
     that is included in the collection, provided that you follow the
     rules of this License for verbatim copying of each of the
     documents in all other respects.

     You may extract a single document from such a collection, and
     distribute it individually under this License, provided you insert
     a copy of this License into the extracted document, and follow
     this License in all other respects regarding verbatim copying of
     that document.

  7. AGGREGATION WITH INDEPENDENT WORKS

     A compilation of the Document or its derivatives with other
     separate and independent documents or works, in or on a volume of
     a storage or distribution medium, does not as a whole count as a
     Modified Version of the Document, provided no compilation
     copyright is claimed for the compilation.  Such a compilation is
     called an "aggregate", and this License does not apply to the
     other self-contained works thus compiled with the Document, on
     account of their being thus compiled, if they are not themselves
     derivative works of the Document.

     If the Cover Text requirement of section 3 is applicable to these
     copies of the Document, then if the Document is less than one
     quarter of the entire aggregate, the Document's Cover Texts may be
     placed on covers that surround only the Document within the
     aggregate.  Otherwise they must appear on covers around the whole
     aggregate.

  8. TRANSLATION

     Translation is considered a kind of modification, so you may
     distribute translations of the Document under the terms of section
     4.  Replacing Invariant Sections with translations requires special
     permission from their copyright holders, but you may include
     translations of some or all Invariant Sections in addition to the
     original versions of these Invariant Sections.  You may include a
     translation of this License provided that you also include the
     original English version of this License.  In case of a
     disagreement between the translation and the original English
     version of this License, the original English version will prevail.

  9. TERMINATION

     You may not copy, modify, sublicense, or distribute the Document
     except as expressly provided for under this License.  Any other
     attempt to copy, modify, sublicense or distribute the Document is
     void, and will automatically terminate your rights under this
     License.  However, parties who have received copies, or rights,
     from you under this License will not have their licenses
     terminated so long as such parties remain in full compliance.

 10. FUTURE REVISIONS OF THIS LICENSE

     The Free Software Foundation may publish new, revised versions of
     the GNU Free Documentation License from time to time.  Such new
     versions will be similar in spirit to the present version, but may
     differ in detail to address new problems or concerns.  See
     `http://www.gnu.org/copyleft/'.

     Each version of the License is given a distinguishing version
     number.  If the Document specifies that a particular numbered
     version of this License "or any later version" applies to it, you
     have the option of following the terms and conditions either of
     that specified version or of any later version that has been
     published (not as a draft) by the Free Software Foundation.  If
     the Document does not specify a version number of this License,
     you may choose any version ever published (not as a draft) by the
     Free Software Foundation.

ADDENDUM: How to use this License for your documents
----------------------------------------------------

To use this License in a document you have written, include a copy of
the License in the document and put the following copyright and license
notices just after the title page:

       Copyright (C)  YEAR  YOUR NAME.
       Permission is granted to copy, distribute and/or modify this document
       under the terms of the GNU Free Documentation License, Version 1.1
       or any later version published by the Free Software Foundation;
       with the Invariant Sections being LIST THEIR TITLES, with the
       Front-Cover Texts being LIST, and with the Back-Cover Texts being LIST.
       A copy of the license is included in the section entitled ``GNU
       Free Documentation License''.

   If you have no Invariant Sections, write "with no Invariant Sections"
instead of saying which ones are invariant.  If you have no Front-Cover
Texts, write "no Front-Cover Texts" instead of "Front-Cover Texts being
LIST"; likewise for Back-Cover Texts.

   If your document contains nontrivial examples of program code, we
recommend releasing these examples in parallel under your choice of
free software license, such as the GNU General Public License, to
permit their use in free software.


File: libc.info,  Node: Concept Index,  Next: Type Index,  Prev: Documentation License,  Up: Top

Concept Index
*************

* Menu:

* /etc/hostname:                         Host Identification.
* /etc/nsswitch.conf:                    NSS Configuration File.
* 4.N BSD Unix:                          Berkeley Unix.
* __va_copy:                             Copying and Concatenation.
* _POSIX_OPTION_ORDER environment variable.: Standard Environment.
* _POSIX_SAVED_IDS:                      How Change Persona.
* abort signal:                          Program Error Signals.
* aborting a program:                    Aborting a Program.
* absolute file name:                    File Name Resolution.
* absolute priority:                     Absolute Priority.
* absolute value functions:              Absolute Value.
* accepting connections:                 Accepting Connections.
* access permission for a file:          Access Permission.
* access, testing for:                   Testing File Access.
* accessing directories:                 Accessing Directories.
* address of socket:                     Socket Addresses.
* address space <1>:                     Program Basics.
* address space:                         Memory Subsystem.
* alarm signal:                          Alarm Signals.
* alarms, setting:                       Setting an Alarm.
* alignment (in obstacks):               Obstacks Data Alignment.
* alignment (with malloc):               Aligned Memory Blocks.
* alloca disadvantages:                  Disadvantages of Alloca.
* alloca function:                       Variable Size Automatic.
* allocating pseudo-terminals:           Allocation.
* allocation (obstacks):                 Allocation in an Obstack.
* allocation debugging:                  Allocation Debugging.
* allocation hooks, for malloc:          Hooks for Malloc.
* allocation of memory with malloc:      Basic Allocation.
* allocation size of string:             Representation of Strings.
* allocation statistics:                 Statistics of Malloc.
* alphabetic character <1>:              Classification of Wide Characters.
* alphabetic character:                  Classification of Characters.
* alphanumeric character <1>:            Classification of Wide Characters.
* alphanumeric character:                Classification of Characters.
* append-access files:                   File Position.
* argc (program argument count):         Program Arguments.
* argp (program argument parser):        Argp.
* argp parser functions:                 Argp Parser Functions.
* ARGP_HELP_FMT environment variable:    Argp User Customization.
* argument parsing with argp:            Argp.
* argument promotion:                    Calling Variadics.
* argument vectors, null-character separated: Argz and Envz Vectors.
* arguments (variadic functions):        Receiving Arguments.
* arguments, how many:                   How Many Arguments.
* arguments, to program:                 Program Arguments.
* argv (program argument vector):        Program Arguments.
* argz vectors (string vectors):         Argz and Envz Vectors.
* arithmetic expansion:                  Expansion Stages.
* array comparison functions:            String/Array Comparison.
* array copy functions:                  Copying and Concatenation.
* array search function:                 Array Search Function.
* array sort function:                   Array Sort Function.
* ASCII character:                       Classification of Characters.
* assertions:                            Consistency Checking.
* attributes of a file:                  Attribute Meanings.
* automatic freeing:                     Variable Size Automatic.
* automatic memory allocation:           Memory Allocation and C.
* automatic storage class:               Memory Allocation and C.
* automatic storage with variable size:  Variable Size Automatic.
* background job:                        Concepts of Job Control.
* background job, launching:             Foreground and Background.
* backtrace:                             Backtraces.
* backtrace_fd:                          Backtraces.
* backtrace_symbols:                     Backtraces.
* base (of floating point number):       Floating Point Concepts.
* baud rate:                             Line Speed.
* Berkeley Unix:                         Berkeley Unix.
* Bessel functions:                      Special Functions.
* bias (of floating point number exponent): Floating Point Concepts.
* big-endian:                            Byte Order.
* binary I/O to a stream:                Block Input/Output.
* binary search function (for arrays):   Array Search Function.
* binary stream:                         Binary Streams.
* binding a socket address:              Socket Addresses.
* blank character <1>:                   Classification of Wide Characters.
* blank character:                       Classification of Characters.
* block I/O to a stream:                 Block Input/Output.
* blocked signals:                       Delivery of Signal.
* blocked signals, checking for:         Checking for Pending Signals.
* blocking signals:                      Blocking Signals.
* blocking signals, in a handler:        Blocking for Handler.
* bootstrapping, and services:           Actions in the NSS configuration.
* break condition, detecting:            Input Modes.
* break condition, generating:           Line Control.
* breaking a string into tokens:         Finding Tokens in a String.
* broken pipe signal:                    Operation Error Signals.
* broken-down time <1>:                  Broken-down Time.
* broken-down time:                      Calendar Time.
* BSD compatibility library:             Process Group Functions.
* BSD compatibility library.:            Feature Test Macros.
* BSD Unix:                              Berkeley Unix.
* buffering of streams:                  Stream Buffering.
* buffering, controlling:                Controlling Buffering.
* bugs, reporting:                       Reporting Bugs.
* bus error:                             Program Error Signals.
* butterfly:                             Misc FP Arithmetic.
* byte order conversion, for socket:     Byte Order.
* byte stream:                           Socket Concepts.
* C++ streams:                           Streams and I18N.
* calendar time:                         Time Basics.
* calendar time and broken-down time:    Broken-down Time.
* calendar, Gregorian:                   Calendar Time.
* calling variadic functions:            Calling Variadics.
* canonical input processing:            Canonical or Not.
* capacity limits, POSIX:                General Limits.
* carrier detect:                        Control Modes.
* case conversion of characters:         Case Conversion.
* catching signals:                      Delivery of Signal.
* categories for locales:                Locale Categories.
* change working directory:              Working Directory.
* changing the locale:                   Setting the Locale.
* changing the size of a block (malloc): Changing Block Size.
* changing the size of a block (obstacks): Growing Objects.
* channels:                              Stream/Descriptor Precautions.
* character case conversion:             Case Conversion.
* character predicates:                  Classification of Characters.
* character testing:                     Classification of Characters.
* checking for pending signals:          Checking for Pending Signals.
* child process <1>:                     Process Creation Concepts.
* child process <2>:                     Processes.
* child process:                         Processor Time.
* child process signal:                  Job Control Signals.
* chunks:                                Obstack Chunks.
* classes, floating-point:               Floating Point Classes.
* classification of characters:          Classification of Characters.
* cleaning up a stream:                  Linked Channels.
* clearing terminal input queue:         Line Control.
* client:                                Connections.
* clock ticks:                           Processor And CPU Time.
* clock, high accuracy:                  High Accuracy Clock.
* close-on-exec (file descriptor flag):  Descriptor Flags.
* closing a file descriptor:             Opening and Closing Files.
* closing a socket:                      Closing a Socket.
* closing a stream:                      Closing Streams.
* collating strings:                     Collation Functions.
* combining locales:                     Choosing Locale.
* command argument syntax:               Argument Syntax.
* command arguments, parsing:            Parsing Program Arguments.
* command line arguments:                Program Arguments.
* command substitution:                  Expansion Stages.
* communication style (of a socket):     Socket Concepts.
* comparing strings and arrays:          String/Array Comparison.
* Comparison Function:                   Comparison Functions.
* compiling:                             Configuring and compiling.
* complex exponentiation functions:      Exponents and Logarithms.
* complex logarithm functions:           Exponents and Logarithms.
* complex numbers:                       Complex Numbers.
* complex trigonometric functions:       Trig Functions.
* concatenating strings:                 Copying and Concatenation.
* configuring:                           Configuring and compiling.
* conjugate complex numbers:             Operations on Complex.
* connecting a socket:                   Connecting.
* connection:                            Connections.
* consistency checking:                  Consistency Checking.
* consistency checking, of heap:         Heap Consistency Checking.
* constants <1>:                         Mathematical Constants.
* constants:                             Memory Concepts.
* continue signal:                       Job Control Signals.
* control character <1>:                 Classification of Wide Characters.
* control character:                     Classification of Characters.
* control operations on files:           Control Operations.
* controlling process:                   Controlling Terminal.
* controlling terminal:                  Concepts of Job Control.
* controlling terminal, access to:       Access to the Terminal.
* controlling terminal, determining:     Identifying the Terminal.
* controlling terminal, setting:         Open-time Flags.
* conversion specifications (printf):    Formatted Output Basics.
* conversion specifications (scanf):     Formatted Input Basics.
* converting byte order:                 Byte Order.
* converting case of characters:         Case Conversion.
* converting file descriptor to stream:  Descriptors and Streams.
* converting floats to integers:         Rounding Functions.
* converting group ID to group name:     Lookup Group.
* converting group name to group ID:     Lookup Group.
* converting host address to name:       Host Names.
* converting host name to address:       Host Names.
* converting network name to network number: Networks Database.
* converting network number to network name: Networks Database.
* converting port number to service name: Services Database.
* converting service name to port number: Services Database.
* converting string to collation order:  Collation Functions.
* converting strings to numbers:         Parsing of Numbers.
* converting user ID to user name:       Lookup User.
* converting user name to user ID:       Lookup User.
* cookie, for custom stream:             Streams and Cookies.
* copy-on-write page fault:              Locked Memory Details.
* copying strings and arrays:            Copying and Concatenation.
* cpu priority:                          Priority.
* CPU time <1>:                          Processor Time.
* CPU time <2>:                          Processor And CPU Time.
* CPU time:                              Time Basics.
* create on open (file status flag):     Open-time Flags.
* creating a directory:                  Creating Directories.
* creating a FIFO special file:          FIFO Special Files.
* creating a pipe:                       Creating a Pipe.
* creating a pipe to a subprocess:       Pipe to a Subprocess.
* creating a process:                    Process Creation Concepts.
* creating a socket:                     Creating a Socket.
* creating a socket pair:                Socket Pairs.
* creating special files:                Making Special Files.
* cube root function:                    Exponents and Logarithms.
* currency symbols:                      Currency Symbol.
* current limit:                         Limits on Resources.
* current working directory:             Working Directory.
* custom streams:                        Custom Streams.
* customizing printf:                    Customizing Printf.
* data loss on sockets:                  Socket Concepts.
* databases:                             Name Service Switch.
* datagram socket:                       Datagrams.
* datagrams, transmitting:               Sending Datagrams.
* date:                                  Time Basics.
* Daylight Saving Time:                  Broken-down Time.
* decimal digit character:               Classification of Characters.
* decimal-point separator:               General Numeric.
* declaration (compared to definition):  Header Files.
* declaring variadic functions:          Calling Variadics.
* decompose complex numbers:             Operations on Complex.
* default action (for a signal):         Delivery of Signal.
* default action for a signal:           Basic Signal Handling.
* default argument promotions:           Calling Variadics.
* default value, and NSS:                Notes on NSS Configuration File.
* defining new printf conversions:       Customizing Printf.
* definition (compared to declaration):  Header Files.
* delayed suspend character:             Signal Characters.
* deleting a directory:                  Deleting Files.
* deleting a file:                       Deleting Files.
* delivery of signals:                   Delivery of Signal.
* descriptors and streams:               Stream/Descriptor Precautions.
* digit character <1>:                   Classification of Wide Characters.
* digit character:                       Classification of Characters.
* directories, accessing:                Accessing Directories.
* directories, creating:                 Creating Directories.
* directories, deleting:                 Deleting Files.
* directory:                             Directories.
* directory entry:                       Directories.
* directory hierarchy:                   Working with Directory Trees.
* directory stream:                      Accessing Directories.
* disadvantages of alloca:               Disadvantages of Alloca.
* DISCARD character:                     Other Special.
* division by zero:                      FP Exceptions.
* DNS:                                   Host Identification.
* DNS server unavailable:                Actions in the NSS configuration.
* domain (of socket):                    Socket Concepts.
* domain error:                          Math Error Reporting.
* domain name:                           Host Identification.
* Domain Name System:                    Host Identification.
* dot notation, for Internet addresses:  Abstract Host Addresses.
* DSUSP character:                       Signal Characters.
* duplicating file descriptors:          Duplicating Descriptors.
* dynamic memory allocation:             Memory Allocation and C.
* EBCDIC:                                Extended Char Intro.
* echo of terminal input:                Local Modes.
* effective group ID:                    Process Persona.
* effective user ID:                     Process Persona.
* efficiency and malloc:                 Efficiency and Malloc.
* efficiency and obstacks:               Extra Fast Growing.
* efficiency of chunks:                  Obstack Chunks.
* EINTR, and restarting interrupted primitives: Interrupted Primitives.
* elapsed time <1>:                      Elapsed Time.
* elapsed time:                          Time Basics.
* encryption:                            Trivial Encryption.
* end of file, on a stream:              EOF and Errors.
* end-of-file, on a file descriptor:     I/O Primitives.
* environment:                           Environment Variables.
* environment access:                    Environment Access.
* environment representation:            Environment Access.
* environment variable:                  Environment Variables.
* environment vectors, null-character separated: Argz and Envz Vectors.
* envz vectors (environment vectors):    Argz and Envz Vectors.
* EOF character:                         Editing Characters.
* EOL character:                         Editing Characters.
* EOL2 character:                        Editing Characters.
* epoch:                                 Simple Calendar Time.
* ERASE character:                       Editing Characters.
* errno:                                 System Calls.
* error codes:                           Error Reporting.
* error messages, in argp:               Argp Helper Functions.
* error reporting:                       Error Reporting.
* errors, mathematical:                  Math Error Reporting.
* establishing a handler:                Signal Actions.
* ethers:                                NSS Basics.
* EUC:                                   Extended Char Intro.
* EUC-JP:                                glibc iconv Implementation.
* exception <1>:                         Program Error Signals.
* exception:                             FP Exceptions.
* exclusive lock:                        File Locks.
* exec functions:                        Executing a File.
* execing a program:                     Memory Concepts.
* executable:                            Memory Concepts.
* executing a file:                      Executing a File.
* exit status:                           Exit Status.
* exit status value:                     Program Termination.
* exiting a program:                     Memory Concepts.
* expansion of shell words:              Word Expansion.
* exponent (of floating point number):   Floating Point Concepts.
* exponentiation functions:              Exponents and Logarithms.
* extending printf:                      Customizing Printf.
* extracting file descriptor from stream: Descriptors and Streams.
* fcntl function:                        Control Operations.
* FDL, GNU Free Documentation License:   Documentation License.
* feature test macros:                   Feature Test Macros.
* field splitting:                       Expansion Stages.
* FIFO special file:                     Pipes and FIFOs.
* file access permission:                Access Permission.
* file access time:                      File Times.
* file attribute modification time:      File Times.
* file attributes:                       Attribute Meanings.
* file creation mask:                    Setting Permissions.
* file descriptor flags:                 Descriptor Flags.
* file descriptor sets, for select:      Waiting for I/O.
* file descriptors, standard:            Descriptors and Streams.
* file locks:                            File Locks.
* file modification time:                File Times.
* file name:                             File Names.
* file name component:                   Directories.
* file name errors:                      File Name Errors.
* file name resolution:                  File Name Resolution.
* file name translation flags:           Open-time Flags.
* file names, multiple:                  Hard Links.
* file owner:                            File Owner.
* file permission bits:                  Permission Bits.
* file pointer:                          Streams.
* file position:                         File Position.
* file positioning on a file descriptor: File Position Primitive.
* file positioning on a stream:          File Positioning.
* file status flags:                     File Status Flags.
* files, accessing:                      Memory Concepts.
* filtering i/o through subprocess:      Pipe to a Subprocess.
* flag character (printf):               Output Conversion Syntax.
* flag character (scanf):                Input Conversion Syntax.
* flags for sigaction:                   Flags for Sigaction.
* flags, file name translation:          Open-time Flags.
* flags, open-time action:               Open-time Flags.
* floating point:                        Floating Point Numbers.
* floating point, IEEE:                  IEEE Floating Point.
* floating type measurements:            Floating Type Macros.
* floating-point classes:                Floating Point Classes.
* floating-point exception:              Program Error Signals.
* flow control, terminal:                Line Control.
* flushing a stream:                     Flushing Buffers.
* flushing terminal output queue:        Line Control.
* foreground job:                        Concepts of Job Control.
* foreground job, launching:             Foreground and Background.
* forking a process:                     Process Creation Concepts.
* format string, for printf:             Formatted Output.
* format string, for scanf:              Formatted Input.
* formatted input from a stream:         Formatted Input.
* formatted messages:                    Formatted Messages.
* formatted output to a stream:          Formatted Output.
* FP arithmetic:                         FP Bit Twiddling.
* FQDN:                                  Host Identification.
* frame, real memory:                    Memory Concepts.
* free documentation:                    Free Manuals.
* freeing (obstacks):                    Freeing Obstack Objects.
* freeing memory:                        Memory Concepts.
* freeing memory allocated with malloc:  Freeing after Malloc.
* fully buffered stream:                 Buffering Concepts.
* function prototypes (variadic):        Variadic Prototypes.
* gamma function:                        Special Functions.
* gcvt_r:                                System V Number Conversion.
* gencat:                                The gencat program.
* generation of signals:                 Signal Generation.
* generic i/o control operations:        IOCTLs.
* globbing:                              Globbing.
* graphic character <1>:                 Classification of Wide Characters.
* graphic character:                     Classification of Characters.
* Gregorian calendar:                    Calendar Time.
* group:                                 NSS Basics.
* group database:                        Group Database.
* group ID:                              User and Group IDs.
* group name:                            User and Group IDs.
* group owner of a file:                 File Owner.
* grouping of digits:                    General Numeric.
* growing objects (in obstacks):         Growing Objects.
* handling multiple signals:             Merged Signals.
* hangup signal:                         Termination Signals.
* hard limit:                            Limits on Resources.
* hard link:                             Hard Links.
* header files:                          Header Files.
* heap consistency checking:             Heap Consistency Checking.
* heap, dynamic allocation from:         Unconstrained Allocation.
* heap, freeing memory from:             Freeing after Malloc.
* hexadecimal digit character <1>:       Classification of Wide Characters.
* hexadecimal digit character:           Classification of Characters.
* hidden bit (of floating point number mantissa): Floating Point Concepts.
* hierarchy, directory:                  Working with Directory Trees.
* high-priority data:                    Out-of-Band Data.
* high-resolution time:                  Calendar Time.
* holes in files:                        File Position Primitive.
* home directory:                        Standard Environment.
* HOME environment variable:             Standard Environment.
* hook functions (of custom streams):    Hook Functions.
* host address, Internet:                Abstract Host Addresses.
* host name:                             Host Identification.
* hostname:                              Host Identification.
* hosts:                                 NSS Basics.
* hosts database:                        Host Names.
* how many arguments:                    How Many Arguments.
* hyperbolic functions:                  Hyperbolic Functions.
* identifying terminals:                 Is It a Terminal.
* IEEE 754:                              Floating Point Numbers.
* IEEE floating point:                   Floating Point Numbers.
* IEEE floating point representation:    IEEE Floating Point.
* IEEE Std 1003.1:                       POSIX.
* IEEE Std 1003.2:                       POSIX.
* ignore action for a signal:            Basic Signal Handling.
* illegal instruction:                   Program Error Signals.
* impossible events:                     Consistency Checking.
* independent channels:                  Independent Channels.
* inexact exception:                     FP Exceptions.
* infinity:                              Infinity and NaN.
* initial signal actions:                Initial Signal Actions.
* inode number:                          Attribute Meanings.
* input available signal:                Asynchronous I/O Signals.
* input conversions, for scanf:          Table of Input Conversions.
* input from multiple files:             Waiting for I/O.
* installation tools:                    Tools for Compilation.
* installing:                            Running make install.
* integer:                               Integers.
* integer division functions:            Integer Division.
* integer type range:                    Range of Type.
* integer type width:                    Width of Type.
* interactive signals, from terminal:    Local Modes.
* interactive stop signal:               Job Control Signals.
* internal representation:               Extended Char Intro.
* internationalization:                  Locales.
* Internet host address:                 Abstract Host Addresses.
* Internet namespace, for sockets:       Internet Namespace.
* interprocess communication, with FIFO: FIFO Special Files.
* interprocess communication, with pipes: Creating a Pipe.
* interprocess communication, with signals: Kill Example.
* interprocess communication, with sockets: Sockets.
* interrupt character:                   Signal Characters.
* interrupt signal:                      Termination Signals.
* interrupt-driven input:                Interrupt Input.
* interrupting primitives:               Interrupted Primitives.
* interval:                              Time Basics.
* interval timer, setting:               Setting an Alarm.
* INTR character:                        Signal Characters.
* invalid exception:                     FP Exceptions.
* inverse complex hyperbolic functions:  Hyperbolic Functions.
* inverse complex trigonometric functions: Inverse Trig Functions.
* inverse hyperbolic functions:          Hyperbolic Functions.
* inverse trigonometric functions:       Inverse Trig Functions.
* invocation of program:                 Program Arguments.
* IOCTLs:                                IOCTLs.
* ISO 10646:                             Extended Char Intro.
* ISO 2022:                              Extended Char Intro.
* ISO 6937:                              Extended Char Intro.
* ISO C:                                 ISO C.
* ISO-2022-JP:                           glibc iconv Implementation.
* ISO/IEC 9945-1:                        POSIX.
* ISO/IEC 9945-2:                        POSIX.
* job:                                   Job Control.
* job control:                           Job Control.
* job control functions:                 Functions for Job Control.
* job control is optional:               Job Control is Optional.
* job control signals:                   Job Control Signals.
* job control, enabling:                 Initializing the Shell.
* Kermit the frog:                       Search/Sort Example.
* kernel call:                           System Calls.
* kernel header files:                   Linux.
* KILL character:                        Editing Characters.
* kill signal:                           Termination Signals.
* killing a process:                     Signaling Another Process.
* Korn Shell:                            Wildcard Matching.
* LANG environment variable <1>:         Standard Environment.
* LANG environment variable:             The catgets Functions.
* launching jobs:                        Launching Jobs.
* LC_ALL environment variable <1>:       Standard Environment.
* LC_ALL environment variable:           The catgets Functions.
* LC_COLLATE environment variable:       Standard Environment.
* LC_CTYPE environment variable:         Standard Environment.
* LC_MESSAGES environment variable <1>:  Standard Environment.
* LC_MESSAGES environment variable:      The catgets Functions.
* LC_MONETARY environment variable:      Standard Environment.
* LC_NUMERIC environment variable:       Standard Environment.
* LC_TIME environment variable:          Standard Environment.
* leap second:                           Broken-down Time.
* length of string:                      Representation of Strings.
* level, for socket options:             Socket Options.
* LGPL, Lesser General Public License:   Copying.
* library:                               Introduction.
* limit:                                 Limits on Resources.
* limits on resource usage:              Limits on Resources.
* limits, file name length:              Limits for Files.
* limits, floating types:                Floating Type Macros.
* limits, integer types:                 Range of Type.
* limits, link count of files:           Limits for Files.
* limits, number of open files:          General Limits.
* limits, number of processes:           General Limits.
* limits, number of supplementary group IDs: General Limits.
* limits, pipe buffer size:              Limits for Files.
* limits, POSIX:                         General Limits.
* limits, program argument size:         General Limits.
* limits, terminal input queue:          Limits for Files.
* limits, time zone name length:         General Limits.
* line buffered stream:                  Buffering Concepts.
* line speed:                            Line Speed.
* lines (in a text file):                Binary Streams.
* link:                                  Directories.
* link, hard:                            Hard Links.
* link, soft:                            Symbolic Links.
* link, symbolic:                        Symbolic Links.
* linked channels:                       Linked Channels.
* listening (sockets):                   Listening.
* literals:                              Memory Concepts.
* little-endian:                         Byte Order.
* LNEXT character:                       Other Special.
* load average:                          Processor Resources.
* local namespace, for sockets:          Local Namespace.
* local network address number:          Abstract Host Addresses.
* local time:                            Calendar Time.
* locale categories:                     Locale Categories.
* locale, changing:                      Setting the Locale.
* locales:                               Locales.
* locking pages:                         Locking Pages.
* logarithm functions:                   Exponents and Logarithms.
* login name:                            User and Group IDs.
* login name, determining:               Who Logged In.
* LOGNAME environment variable:          Standard Environment.
* long jumps:                            Non-Local Exits.
* long-named options:                    Argument Syntax.
* longjmp:                               Advantages of Alloca.
* loss of data on sockets:               Socket Concepts.
* lost resource signal:                  Operation Error Signals.
* lower-case character <1>:              Classification of Wide Characters.
* lower-case character:                  Classification of Characters.
* macros:                                Obstack Functions.
* main function:                         Program Arguments.
* malloc debugger:                       Allocation Debugging.
* malloc function:                       Unconstrained Allocation.
* mantissa (of floating point number):   Floating Point Concepts.
* matching failure, in scanf:            Formatted Input Basics.
* math errors:                           Errors in Math Functions.
* mathematical constants:                Mathematical Constants.
* maximum:                               Misc FP Arithmetic.
* maximum field width (scanf):           Input Conversion Syntax.
* maximum limit:                         Limits on Resources.
* maximum possible integer:              Integers.
* measurements of floating types:        Floating Type Macros.
* memory allocation:                     Memory.
* memory lock:                           Locking Pages.
* memory mapped file:                    Memory Concepts.
* memory mapped I/O:                     Memory Concepts.
* memory page:                           Memory Subsystem.
* merging of signals:                    Merged Signals.
* MIN termios slot:                      Noncanonical Input.
* minimum:                               Misc FP Arithmetic.
* minimum field width (printf):          Output Conversion Syntax.
* minimum possible integer:              Integers.
* mixing descriptors and streams:        Stream/Descriptor Precautions.
* modem disconnect:                      Control Modes.
* modem status lines:                    Control Modes.
* monetary value formatting:             The Lame Way to Locale Data.
* multi-threaded application:            Streams and Threads.
* multibyte character:                   Extended Char Intro.
* multibyte character string:            Representation of Strings.
* multibyte string:                      Representation of Strings.
* multiple names for one file:           Hard Links.
* multiplexing input:                    Waiting for I/O.
* multiply-add:                          Misc FP Arithmetic.
* name of running program:               Error Messages.
* name of socket:                        Socket Addresses.
* Name Service Switch:                   Name Service Switch.
* name space:                            Reserved Names.
* names of signals:                      Standard Signals.
* namespace (of socket):                 Socket Concepts.
* NaN <1>:                               FP Bit Twiddling.
* NaN:                                   Infinity and NaN.
* Netgroup:                              Netgroup Data.
* netgroup:                              NSS Basics.
* network byte order:                    Byte Order.
* network number:                        Abstract Host Addresses.
* network protocol:                      Socket Concepts.
* networks:                              NSS Basics.
* networks database:                     Networks Database.
* NIS:                                   Host Identification.
* NIS domain name:                       Host Identification.
* nisplus, and booting:                  Actions in the NSS configuration.
* nisplus, and completeness:             Actions in the NSS configuration.
* NLSPATH environment variable <1>:      Standard Environment.
* NLSPATH environment variable:          The catgets Functions.
* non-blocking open:                     Open-time Flags.
* non-local exit, from signal handler:   Longjmp in Handler.
* non-local exits:                       Non-Local Exits.
* noncanonical input processing:         Canonical or Not.
* normalization functions (floating-point): Normalization Functions.
* normalized floating point number:      Floating Point Concepts.
* not a number:                          Infinity and NaN.
* NSS:                                   Name Service Switch.
* nsswitch.conf:                         NSS Configuration File.
* null character:                        Representation of Strings.
* null pointer constant:                 Null Pointer Constant.
* null wide character:                   Representation of Strings.
* number of arguments passed:            How Many Arguments.
* number syntax, parsing:                Parsing of Numbers.
* numeric value formatting:              The Lame Way to Locale Data.
* obstack status:                        Status of an Obstack.
* obstacks:                              Obstacks.
* open-time action flags:                Open-time Flags.
* opening a file:                        I/O Concepts.
* opening a file descriptor:             Opening and Closing Files.
* opening a pipe:                        Creating a Pipe.
* opening a pseudo-terminal pair:        Pseudo-Terminal Pairs.
* opening a socket:                      Creating a Socket.
* opening a socket pair:                 Socket Pairs.
* opening a stream:                      Opening Streams.
* Optimization:                          FP Function Optimizations.
* optimizing NSS:                        Notes on NSS Configuration File.
* option parsing with argp:              Argp.
* optional arguments:                    Variadic Functions.
* optional POSIX features:               System Options.
* orientation, stream <1>:               Streams and I18N.
* orientation, stream:                   Opening Streams.
* orphaned process group:                Orphaned Process Groups.
* out-of-band data:                      Out-of-Band Data.
* output conversions, for printf:        Table of Output Conversions.
* output possible signal:                Asynchronous I/O Signals.
* overflow exception:                    FP Exceptions.
* owner of a file:                       File Owner.
* packet:                                Socket Concepts.
* page boundary:                         Aligned Memory Blocks.
* page fault:                            Memory Concepts.
* page fault, copy-on-write:             Locked Memory Details.
* page frame:                            Memory Concepts.
* page, memory:                          Memory Subsystem.
* page, virtual memory:                  Memory Concepts.
* paging <1>:                            Locking Pages.
* paging:                                Memory Concepts.
* parameter promotion:                   String/Array Conventions.
* parent directory:                      File Name Resolution.
* parent process <1>:                    Process Creation Concepts.
* parent process:                        Processes.
* parity checking:                       Input Modes.
* parsing a template string:             Parsing a Template String.
* parsing numbers (in formatted input):  Parsing of Numbers.
* parsing program arguments:             Parsing Program Arguments.
* parsing tokens from a string:          Finding Tokens in a String.
* passwd:                                NSS Basics.
* password database:                     User Database.
* PATH environment variable:             Standard Environment.
* pause function:                        Waiting for a Signal.
* peeking at input:                      Unreading.
* pending signals:                       Delivery of Signal.
* pending signals, checking for:         Checking for Pending Signals.
* period of time:                        Time Basics.
* permission to access a file:           Access Permission.
* persona:                               Process Persona.
* physical address:                      Memory Subsystem.
* physical memory:                       Memory Subsystem.
* pi (trigonometric constant):           Trig Functions.
* pipe:                                  Pipes and FIFOs.
* pipe signal:                           Operation Error Signals.
* pipe to a subprocess:                  Pipe to a Subprocess.
* port number:                           Ports.
* positioning a file descriptor:         File Position Primitive.
* positioning a stream:                  File Positioning.
* positive difference:                   Misc FP Arithmetic.
* POSIX:                                 POSIX.
* POSIX capacity limits:                 General Limits.
* POSIX optional features:               System Options.
* POSIX.1:                               POSIX.
* POSIX.2:                               POSIX.
* power functions:                       Exponents and Logarithms.
* precision (of floating point number):  Floating Point Concepts.
* precision (printf):                    Output Conversion Syntax.
* predicates on arrays:                  String/Array Comparison.
* predicates on characters:              Classification of Characters.
* predicates on strings:                 String/Array Comparison.
* preemptive scheduling:                 Absolute Priority.
* primitives, interrupting:              Interrupted Primitives.
* printing character <1>:                Classification of Wide Characters.
* printing character:                    Classification of Characters.
* priority of a process:                 Priority.
* priority, absolute:                    Absolute Priority.
* process <1>:                           Processes.
* process:                               Program Basics.
* process completion:                    Process Completion.
* process group functions:               Functions for Job Control.
* process group ID:                      Launching Jobs.
* process group leader:                  Launching Jobs.
* process groups:                        Job Control.
* process ID:                            Process Creation Concepts.
* process image:                         Process Creation Concepts.
* process lifetime:                      Process Creation Concepts.
* process priority:                      Priority.
* process signal mask:                   Process Signal Mask.
* process termination:                   Program Termination.
* processor time <1>:                    Processor Time.
* processor time:                        Time Basics.
* profiling alarm signal:                Alarm Signals.
* profiling timer:                       Setting an Alarm.
* program:                               Program Basics.
* program argument syntax:               Argument Syntax.
* program arguments:                     Program Arguments.
* program arguments, parsing:            Parsing Program Arguments.
* program error signals:                 Program Error Signals.
* program name:                          Error Messages.
* program startup:                       Program Arguments.
* program termination:                   Program Termination.
* program termination signals:           Termination Signals.
* programming your own streams:          Custom Streams.
* project complex numbers:               Operations on Complex.
* protocol (of socket):                  Socket Concepts.
* protocol family:                       Socket Concepts.
* protocols:                             NSS Basics.
* protocols database:                    Protocols Database.
* prototypes for variadic functions:     Variadic Prototypes.
* pseudo-random numbers:                 Pseudo-Random Numbers.
* pseudo-terminals:                      Pseudo-Terminals.
* punctuation character <1>:             Classification of Wide Characters.
* punctuation character:                 Classification of Characters.
* pushing input back:                    Unreading.
* quick sort function (for arrays):      Array Sort Function.
* QUIT character:                        Signal Characters.
* quit signal:                           Termination Signals.
* quote removal:                         Expansion Stages.
* race conditions, relating to job control: Launching Jobs.
* race conditions, relating to signals:  Signals in Handler.
* radix (of floating point number):      Floating Point Concepts.
* raising signals:                       Generating Signals.
* random numbers:                        Pseudo-Random Numbers.
* random-access files:                   File Position.
* range error:                           Math Error Reporting.
* range of integer type:                 Range of Type.
* read lock:                             File Locks.
* reading from a directory:              Accessing Directories.
* reading from a file descriptor:        I/O Primitives.
* reading from a socket:                 Transferring Data.
* reading from a stream, by blocks:      Block Input/Output.
* reading from a stream, by characters:  Character Input.
* reading from a stream, formatted:      Formatted Input.
* ready to run:                          Absolute Priority.
* real group ID:                         Process Persona.
* real user ID:                          Process Persona.
* real-time timer:                       Setting an Alarm.
* realtime CPU scheduling:               Absolute Priority.
* realtime processing:                   Why Lock Pages.
* realtime scheduling:                   Realtime Scheduling.
* receiving datagrams:                   Receiving Datagrams.
* record locking:                        File Locks.
* redirecting input and output:          Duplicating Descriptors.
* reentrant functions:                   Nonreentrancy.
* reentrant NSS functions:               NSS Module Names.
* relative file name:                    File Name Resolution.
* removal of quotes:                     Expansion Stages.
* removing a file:                       Deleting Files.
* removing macros that shadow functions: Macro Definitions.
* renaming a file:                       Renaming Files.
* reporting bugs:                        Reporting Bugs.
* reporting errors:                      Error Reporting.
* REPRINT character:                     Editing Characters.
* reserved names:                        Reserved Names.
* resource limits:                       Limits on Resources.
* restarting interrupted primitives:     Interrupted Primitives.
* restrictions on signal handler functions: Nonreentrancy.
* root directory:                        File Name Resolution.
* Rot13:                                 Trivial Encryption.
* rpc:                                   NSS Basics.
* runnable process:                      Absolute Priority.
* running a command:                     Running a Command.
* saved set-group-ID:                    How Change Persona.
* saved set-user-ID:                     How Change Persona.
* scanning the group list:               Scanning All Groups.
* scanning the user list:                Scanning All Users.
* scatter-gather:                        Scatter-Gather.
* scheduling, traditional:               Traditional Scheduling.
* search function (for arrays):          Array Search Function.
* search functions (for strings):        Search Functions.
* seed (for random numbers):             Pseudo-Random Numbers.
* seeking on a file descriptor:          File Position Primitive.
* seeking on a stream:                   File Positioning.
* segmentation violation:                Program Error Signals.
* sending a datagram:                    Sending Datagrams.
* sending signals:                       Generating Signals.
* sequential-access files:               File Position.
* server:                                Connections.
* services:                              NSS Basics.
* services database:                     Services Database.
* session <1>:                           Concepts of Job Control.
* session:                               Job Control.
* session leader:                        Concepts of Job Control.
* setting an alarm:                      Setting an Alarm.
* setuid programs:                       How Change Persona.
* setuid programs and file access:       Testing File Access.
* severity class <1>:                    Adding Severity Classes.
* severity class:                        Printing Formatted Messages.
* sgettext:                              GUI program problems.
* shadow:                                NSS Basics.
* shadowing functions with macros:       Macro Definitions.
* shared lock:                           File Locks.
* shared memory:                         Memory Subsystem.
* shell:                                 Concepts of Job Control.
* shift state:                           Keeping the state.
* Shift_JIS:                             Extended Char Intro.
* shrinking objects:                     Growing Objects.
* shutting down a socket:                Closing a Socket.
* sigaction flags:                       Flags for Sigaction.
* sigaction function:                    Advanced Signal Handling.
* SIGCHLD, handling of:                  Stopped and Terminated Jobs.
* sign (of floating point number):       Floating Point Concepts.
* signal <1>:                            Signal Handling.
* signal:                                FP Exceptions.
* signal action:                         Delivery of Signal.
* signal actions:                        Signal Actions.
* signal flags:                          Flags for Sigaction.
* signal function:                       Basic Signal Handling.
* signal handler function:               Defining Handlers.
* signal mask:                           Process Signal Mask.
* signal messages:                       Signal Messages.
* signal names:                          Standard Signals.
* signal number:                         Standard Signals.
* signal set:                            Signal Sets.
* signals, generating:                   Generating Signals.
* signedness:                            Integers.
* significand (of floating point number): Floating Point Concepts.
* SIGTTIN, from background job:          Access to the Terminal.
* SIGTTOU, from background job:          Access to the Terminal.
* simple time:                           Calendar Time.
* single-byte string:                    Representation of Strings.
* size of string:                        Representation of Strings.
* SJIS:                                  Extended Char Intro.
* socket:                                Sockets.
* socket address (name) binding:         Socket Addresses.
* socket domain:                         Socket Concepts.
* socket namespace:                      Socket Concepts.
* socket option level:                   Socket Options.
* socket options:                        Socket Options.
* socket pair:                           Socket Pairs.
* socket protocol:                       Socket Concepts.
* socket shutdown:                       Closing a Socket.
* socket, client actions:                Connecting.
* socket, closing:                       Closing a Socket.
* socket, connecting:                    Connecting.
* socket, creating:                      Creating a Socket.
* socket, initiating a connection:       Connecting.
* sockets, accepting connections:        Accepting Connections.
* sockets, listening:                    Listening.
* sockets, server actions:               Listening.
* soft limit:                            Limits on Resources.
* soft link:                             Symbolic Links.
* sort function (for arrays):            Array Sort Function.
* sparse files:                          File Position Primitive.
* special files:                         Making Special Files.
* special functions:                     Special Functions.
* specified action (for a signal):       Delivery of Signal.
* speed of execution:                    Why Lock Pages.
* square root function:                  Exponents and Logarithms.
* stable sorting:                        Array Sort Function.
* standard dot notation, for Internet addresses: Abstract Host Addresses.
* standard environment variables:        Standard Environment.
* standard error file descriptor:        Descriptors and Streams.
* standard error stream:                 Standard Streams.
* standard file descriptors:             Descriptors and Streams.
* standard input file descriptor:        Descriptors and Streams.
* standard input stream:                 Standard Streams.
* standard output file descriptor:       Descriptors and Streams.
* standard output stream:                Standard Streams.
* standard streams:                      Standard Streams.
* standards:                             Standards and Portability.
* START character:                       Start/Stop Characters.
* startup of program:                    Program Arguments.
* stateful <1>:                          glibc iconv Implementation.
* stateful <2>:                          iconv Examples.
* stateful <3>:                          Generic Conversion Interface.
* stateful <4>:                          Converting Strings.
* stateful <5>:                          Converting a Character.
* stateful:                              Keeping the state.
* static memory allocation:              Memory Allocation and C.
* static storage class:                  Memory Allocation and C.
* STATUS character:                      Other Special.
* status codes:                          Error Reporting.
* status of a file:                      Attribute Meanings.
* status of obstack:                     Status of an Obstack.
* sticky bit:                            Permission Bits.
* STOP character:                        Start/Stop Characters.
* stop signal:                           Job Control Signals.
* stopped job:                           Concepts of Job Control.
* stopped jobs, continuing:              Continuing Stopped Jobs.
* stopped jobs, detecting:               Stopped and Terminated Jobs.
* storage allocation:                    Memory.
* stream (sockets):                      Socket Concepts.
* stream orientation <1>:                Streams and I18N.
* stream orientation:                    Opening Streams.
* stream, for I/O to a string:           String Streams.
* streams and descriptors:               Stream/Descriptor Precautions.
* streams, and file descriptors:         Descriptors and Streams.
* streams, C++:                          Streams and I18N.
* streams, standard:                     Standard Streams.
* string:                                Representation of Strings.
* string allocation:                     Representation of Strings.
* string collation functions:            Collation Functions.
* string comparison functions:           String/Array Comparison.
* string concatenation functions:        Copying and Concatenation.
* string copy functions:                 Copying and Concatenation.
* string length:                         Representation of Strings.
* string literal:                        Representation of Strings.
* string search functions:               Search Functions.
* string stream:                         String Streams.
* string vectors, null-character separated: Argz and Envz Vectors.
* string, representation of:             Representation of Strings.
* style of communication (of a socket):  Socket Concepts.
* subshell:                              Initializing the Shell.
* substitution of variables and commands: Expansion Stages.
* successive signals:                    Merged Signals.
* summer time:                           Broken-down Time.
* SunOS:                                 Berkeley Unix.
* supplementary group IDs:               Process Persona.
* SUSP character:                        Signal Characters.
* suspend character:                     Signal Characters.
* SVID:                                  SVID.
* swap space:                            Memory Concepts.
* symbolic link:                         Symbolic Links.
* symbolic link, opening:                Open-time Flags.
* synchronizing <1>:                     Synchronizing AIO Operations.
* synchronizing:                         Synchronizing I/O.
* syntax error messages, in argp:        Argp Helper Functions.
* syntax, for program arguments:         Argument Syntax.
* syntax, for reading numbers:           Parsing of Numbers.
* sysconf <1>:                           Processor Resources.
* sysconf:                               Query Memory Parameters.
* system call:                           System Calls.
* system call number:                    System Calls.
* System V Unix:                         SVID.
* TCP (Internet protocol):               Protocols Database.
* template, for printf:                  Formatted Output.
* template, for scanf:                   Formatted Input.
* TERM environment variable:             Standard Environment.
* terminal flow control:                 Line Control.
* terminal identification:               Is It a Terminal.
* terminal input queue:                  I/O Queues.
* terminal input queue, clearing:        Line Control.
* terminal input signal:                 Job Control Signals.
* terminal line control functions:       Line Control.
* terminal line speed:                   Line Speed.
* terminal mode data types:              Mode Data Types.
* terminal mode functions:               Mode Functions.
* terminal modes, BSD:                   BSD Terminal Modes.
* terminal output queue:                 I/O Queues.
* terminal output queue, flushing:       Line Control.
* terminal output signal:                Job Control Signals.
* terminated jobs, detecting:            Stopped and Terminated Jobs.
* termination signal:                    Termination Signals.
* testing access permission:             Testing File Access.
* testing exit status of child process:  Process Completion.
* text stream:                           Binary Streams.
* thrashing:                             Memory Subsystem.
* thread of control:                     Program Basics.
* threads:                               Streams and Threads.
* ticks, clock:                          Processor And CPU Time.
* tilde expansion:                       Expansion Stages.
* time:                                  Time Basics.
* TIME termios slot:                     Noncanonical Input.
* time zone:                             TZ Variable.
* time zone database:                    TZ Variable.
* time, elapsed:                         Time Basics.
* time, high precision:                  High Accuracy Clock.
* timer, profiling:                      Setting an Alarm.
* timer, real-time:                      Setting an Alarm.
* timer, virtual:                        Setting an Alarm.
* timers, setting:                       Setting an Alarm.
* timespec:                              Elapsed Time.
* timeval:                               Elapsed Time.
* timing error in signal handling:       Remembering a Signal.
* TMPDIR environment variable:           Temporary Files.
* tokenizing strings:                    Finding Tokens in a String.
* tools, for installing library:         Tools for Compilation.
* transmitting datagrams:                Sending Datagrams.
* tree, directory:                       Working with Directory Trees.
* triangulation:                         glibc iconv Implementation.
* trigonometric functions:               Trig Functions.
* type measurements, floating:           Floating Type Macros.
* type measurements, integer:            Width of Type.
* type modifier character (printf):      Output Conversion Syntax.
* type modifier character (scanf):       Input Conversion Syntax.
* typeahead buffer:                      I/O Queues.
* TZ environment variable:               Standard Environment.
* UCS-2:                                 Extended Char Intro.
* UCS-4:                                 Extended Char Intro.
* ulps:                                  Errors in Math Functions.
* umask:                                 Setting Permissions.
* unbuffered stream:                     Buffering Concepts.
* unconstrained memory allocation:       Unconstrained Allocation.
* undefining macros that shadow functions: Macro Definitions.
* underflow exception:                   FP Exceptions.
* Unicode:                               Extended Char Intro.
* Unix, Berkeley:                        Berkeley Unix.
* Unix, System V:                        SVID.
* unlinking a file:                      Deleting Files.
* unordered comparison:                  FP Comparison Functions.
* unreading characters:                  Unreading.
* upgrading from libc5:                  Linux.
* upper-case character <1>:              Classification of Wide Characters.
* upper-case character:                  Classification of Characters.
* urgent data signal:                    Asynchronous I/O Signals.
* urgent socket condition:               Out-of-Band Data.
* usage limits:                          Limits on Resources.
* usage messages, in argp:               Argp Helper Functions.
* user accounting database:              User Accounting Database.
* user database:                         User Database.
* user ID:                               User and Group IDs.
* user ID, determining:                  Who Logged In.
* user name:                             User and Group IDs.
* user signals:                          Miscellaneous Signals.
* usual file name errors:                File Name Errors.
* UTF-16:                                Extended Char Intro.
* UTF-7:                                 Extended Char Intro.
* UTF-8:                                 Extended Char Intro.
* va_copy:                               Copying and Concatenation.
* variable number of arguments:          Variadic Functions.
* variable substitution:                 Expansion Stages.
* variable-sized arrays:                 GNU C Variable-Size Arrays.
* variadic function argument access:     Receiving Arguments.
* variadic function prototypes:          Variadic Prototypes.
* variadic functions:                    Variadic Functions.
* variadic functions, calling:           Calling Variadics.
* virtual time alarm signal:             Alarm Signals.
* virtual timer:                         Setting an Alarm.
* volatile declarations:                 Nonreentrancy.
* waiting for a signal:                  Waiting for a Signal.
* waiting for completion of child process: Process Completion.
* waiting for input or output:           Waiting for I/O.
* WERASE character:                      Editing Characters.
* whitespace character <1>:              Classification of Wide Characters.
* whitespace character:                  Classification of Characters.
* wide character:                        Extended Char Intro.
* wide character string:                 Representation of Strings.
* width of integer type:                 Width of Type.
* wildcard expansion:                    Expansion Stages.
* wint_t:                                String/Array Conventions.
* word expansion:                        Word Expansion.
* working directory:                     Working Directory.
* write lock:                            File Locks.
* writing to a file descriptor:          I/O Primitives.
* writing to a socket:                   Transferring Data.
* writing to a stream, by blocks:        Block Input/Output.
* writing to a stream, by characters:    Simple Output.
* writing to a stream, formatted:        Formatted Output.
* YP:                                    Host Identification.
* YP domain name:                        Host Identification.
* zero divide:                           FP Exceptions.


File: libc.info,  Node: Type Index,  Next: Function Index,  Prev: Concept Index,  Up: Top

Type Index
**********

* Menu:

* __ftw64_func_t:                        Working with Directory Trees.
* __ftw_func_t:                          Working with Directory Trees.
* __nftw64_func_t:                       Working with Directory Trees.
* __nftw_func_t:                         Working with Directory Trees.
* blkcnt64_t:                            Attribute Meanings.
* blkcnt_t:                              Attribute Meanings.
* cc_t:                                  Mode Data Types.
* clock_t:                               CPU Time.
* comparison_fn_t:                       Comparison Functions.
* cookie_close_function:                 Hook Functions.
* cookie_io_functions_t:                 Streams and Cookies.
* cookie_read_function:                  Hook Functions.
* cookie_seek_function:                  Hook Functions.
* cookie_write_function:                 Hook Functions.
* cpu_set_t:                             CPU Affinity.
* dev_t:                                 Attribute Meanings.
* DIR:                                   Opening a Directory.
* div_t:                                 Integer Division.
* enum mcheck_status:                    Heap Consistency Checking.
* fd_set:                                Waiting for I/O.
* FILE:                                  Streams.
* fpos64_t:                              Portable Positioning.
* fpos_t:                                Portable Positioning.
* gid_t:                                 Reading Persona.
* glob64_t:                              Calling Glob.
* glob_t:                                Calling Glob.
* iconv_t:                               Generic Conversion Interface.
* imaxdiv_t:                             Integer Division.
* ino64_t:                               Attribute Meanings.
* ino_t:                                 Attribute Meanings.
* jmp_buf:                               Non-Local Details.
* ldiv_t:                                Integer Division.
* lldiv_t:                               Integer Division.
* mbstate_t:                             Keeping the state.
* mode_t:                                Attribute Meanings.
* nlink_t:                               Attribute Meanings.
* off64_t:                               File Position Primitive.
* off_t:                                 File Position Primitive.
* pid_t:                                 Process Identification.
* printf_arginfo_function:               Defining the Output Handler.
* printf_function:                       Defining the Output Handler.
* ptrdiff_t:                             Important Data Types.
* regex_t:                               POSIX Regexp Compilation.
* regmatch_t:                            Regexp Subexpressions.
* regoff_t:                              Regexp Subexpressions.
* sig_atomic_t:                          Atomic Types.
* sighandler_t:                          Basic Signal Handling.
* sigjmp_buf:                            Non-Local Exits and Signals.
* sigset_t:                              Signal Sets.
* size_t:                                Important Data Types.
* speed_t:                               Line Speed.
* ssize_t:                               I/O Primitives.
* stack_t:                               Signal Stack.
* struct __gconv_step:                   glibc iconv Implementation.
* struct __gconv_step_data:              glibc iconv Implementation.
* struct aiocb:                          Asynchronous I/O.
* struct aiocb64:                        Asynchronous I/O.
* struct aioinit:                        Configuration of AIO.
* struct argp:                           Argp Parsers.
* struct argp_child:                     Argp Children.
* struct argp_option:                    Argp Option Vectors.
* struct argp_state:                     Argp Parsing State.
* struct dirent:                         Directory Entries.
* struct ENTRY:                          Hash Search Function.
* struct exit_status:                    Manipulating the Database.
* struct flock:                          File Locks.
* struct fstab:                          fstab.
* struct FTW:                            Working with Directory Trees.
* struct group:                          Group Data Structure.
* struct hostent:                        Host Names.
* struct if_nameindex:                   Interface Naming.
* struct in6_addr:                       Host Address Data Type.
* struct in_addr:                        Host Address Data Type.
* struct iovec:                          Scatter-Gather.
* struct itimerval:                      Setting an Alarm.
* struct lconv:                          The Lame Way to Locale Data.
* struct linger:                         Socket-Level Options.
* struct mallinfo:                       Statistics of Malloc.
* struct mntent:                         mtab.
* struct netent:                         Networks Database.
* struct ntptimeval:                     High Accuracy Clock.
* struct obstack:                        Creating Obstacks.
* struct option:                         Getopt Long Options.
* struct passwd:                         User Data Structure.
* struct printf_info:                    Conversion Specifier Options.
* struct protoent:                       Protocols Database.
* struct random_data:                    BSD Random.
* struct rlimit:                         Limits on Resources.
* struct rlimit64:                       Limits on Resources.
* struct rusage:                         Resource Usage.
* struct sched_param:                    Basic Scheduling Functions.
* struct servent:                        Services Database.
* struct sgttyb:                         BSD Terminal Modes.
* struct sigaction:                      Advanced Signal Handling.
* struct sigstack:                       Signal Stack.
* struct sigvec:                         BSD Handler.
* struct sockaddr:                       Address Formats.
* struct sockaddr_in:                    Internet Address Formats.
* struct sockaddr_in6:                   Internet Address Formats.
* struct sockaddr_un:                    Local Namespace Details.
* struct stat:                           Attribute Meanings.
* struct stat64:                         Attribute Meanings.
* struct termios:                        Mode Data Types.
* struct timespec:                       Elapsed Time.
* struct timeval:                        Elapsed Time.
* struct timex:                          High Accuracy Clock.
* struct timezone:                       High-Resolution Calendar.
* struct tm:                             Broken-down Time.
* struct tms:                            Processor Time.
* struct utimbuf:                        File Times.
* struct utmp:                           Manipulating the Database.
* struct utmpx:                          XPG Functions.
* struct utsname:                        Platform Type.
* struct vtimes:                         Resource Usage.
* tcflag_t:                              Mode Data Types.
* time_t:                                Simple Calendar Time.
* ucontext_t:                            System V contexts.
* uid_t:                                 Reading Persona.
* union wait:                            BSD Wait Functions.
* va_list:                               Argument Macros.
* VISIT:                                 Tree Search Function.
* wchar_t:                               Extended Char Intro.
* wctrans_t:                             Wide Character Case Conversion.
* wctype_t:                              Classification of Wide Characters.
* wint_t:                                Extended Char Intro.
* wordexp_t:                             Calling Wordexp.


File: libc.info,  Node: Function Index,  Next: Variable Index,  Prev: Type Index,  Up: Top

Function and Macro Index
************************

* Menu:

* *sbrk:                                 Resizing the Data Segment.
* __fbufsize:                            Controlling Buffering.
* __flbf:                                Controlling Buffering.
* __fpending:                            Controlling Buffering.
* __fpurge:                              Flushing Buffers.
* __freadable:                           Opening Streams.
* __freading:                            Opening Streams.
* __fsetlocking:                         Streams and Threads.
* __fwritable:                           Opening Streams.
* __fwriting:                            Opening Streams.
* __va_copy:                             Argument Macros.
* _Exit:                                 Termination Internals.
* _exit:                                 Termination Internals.
* _flushlbf:                             Flushing Buffers.
* _tolower:                              Case Conversion.
* _toupper:                              Case Conversion.
* a64l:                                  Encode Binary Data.
* abort:                                 Aborting a Program.
* abs:                                   Absolute Value.
* accept:                                Accepting Connections.
* access:                                Testing File Access.
* acos:                                  Inverse Trig Functions.
* acosf:                                 Inverse Trig Functions.
* acosh:                                 Hyperbolic Functions.
* acoshf:                                Hyperbolic Functions.
* acoshl:                                Hyperbolic Functions.
* acosl:                                 Inverse Trig Functions.
* addmntent:                             mtab.
* addseverity:                           Adding Severity Classes.
* adjtime:                               High-Resolution Calendar.
* adjtimex:                              High-Resolution Calendar.
* aio_cancel:                            Cancel AIO Operations.
* aio_cancel64:                          Cancel AIO Operations.
* aio_error:                             Status of AIO Operations.
* aio_error64:                           Status of AIO Operations.
* aio_fsync:                             Synchronizing AIO Operations.
* aio_fsync64:                           Synchronizing AIO Operations.
* aio_init:                              Configuration of AIO.
* aio_read:                              Asynchronous Reads/Writes.
* aio_read64:                            Asynchronous Reads/Writes.
* aio_return:                            Status of AIO Operations.
* aio_return64:                          Status of AIO Operations.
* aio_suspend:                           Synchronizing AIO Operations.
* aio_suspend64:                         Synchronizing AIO Operations.
* aio_write:                             Asynchronous Reads/Writes.
* aio_write64:                           Asynchronous Reads/Writes.
* alarm:                                 Setting an Alarm.
* alloca:                                Variable Size Automatic.
* alphasort:                             Scanning Directory Content.
* alphasort64:                           Scanning Directory Content.
* argp_error:                            Argp Helper Functions.
* argp_failure:                          Argp Helper Functions.
* argp_help:                             Argp Help.
* argp_parse:                            Argp.
* argp_state_help:                       Argp Helper Functions.
* argp_usage:                            Argp Helper Functions.
* argz_add:                              Argz Functions.
* argz_add_sep:                          Argz Functions.
* argz_append:                           Argz Functions.
* argz_count:                            Argz Functions.
* argz_create:                           Argz Functions.
* argz_create_sep:                       Argz Functions.
* argz_delete:                           Argz Functions.
* argz_extract:                          Argz Functions.
* argz_insert:                           Argz Functions.
* argz_next:                             Argz Functions.
* argz_replace:                          Argz Functions.
* argz_stringify:                        Argz Functions.
* asctime:                               Formatting Calendar Time.
* asctime_r:                             Formatting Calendar Time.
* asin:                                  Inverse Trig Functions.
* asinf:                                 Inverse Trig Functions.
* asinh:                                 Hyperbolic Functions.
* asinhf:                                Hyperbolic Functions.
* asinhl:                                Hyperbolic Functions.
* asinl:                                 Inverse Trig Functions.
* asprintf:                              Dynamic Output.
* assert:                                Consistency Checking.
* assert_perror:                         Consistency Checking.
* atan:                                  Inverse Trig Functions.
* atan2:                                 Inverse Trig Functions.
* atan2f:                                Inverse Trig Functions.
* atan2l:                                Inverse Trig Functions.
* atanf:                                 Inverse Trig Functions.
* atanh:                                 Hyperbolic Functions.
* atanhf:                                Hyperbolic Functions.
* atanhl:                                Hyperbolic Functions.
* atanl:                                 Inverse Trig Functions.
* atexit:                                Cleanups on Exit.
* atof:                                  Parsing of Floats.
* atoi:                                  Parsing of Integers.
* atol:                                  Parsing of Integers.
* atoll:                                 Parsing of Integers.
* backtrace:                             Backtraces.
* backtrace_symbols:                     Backtraces.
* backtrace_symbols_fd:                  Backtraces.
* basename:                              Finding Tokens in a String.
* bcmp:                                  String/Array Comparison.
* bcopy:                                 Copying and Concatenation.
* bind:                                  Setting Address.
* bind_textdomain_codeset:               Charset conversion in gettext.
* bindtextdomain:                        Locating gettext catalog.
* brk:                                   Resizing the Data Segment.
* bsearch:                               Array Search Function.
* btowc:                                 Converting a Character.
* bzero:                                 Copying and Concatenation.
* cabs:                                  Absolute Value.
* cabsf:                                 Absolute Value.
* cabsl:                                 Absolute Value.
* cacos:                                 Inverse Trig Functions.
* cacosf:                                Inverse Trig Functions.
* cacosh:                                Hyperbolic Functions.
* cacoshf:                               Hyperbolic Functions.
* cacoshl:                               Hyperbolic Functions.
* cacosl:                                Inverse Trig Functions.
* calloc:                                Allocating Cleared Space.
* canonicalize_file_name:                Symbolic Links.
* carg:                                  Operations on Complex.
* cargf:                                 Operations on Complex.
* cargl:                                 Operations on Complex.
* casin:                                 Inverse Trig Functions.
* casinf:                                Inverse Trig Functions.
* casinh:                                Hyperbolic Functions.
* casinhf:                               Hyperbolic Functions.
* casinhl:                               Hyperbolic Functions.
* casinl:                                Inverse Trig Functions.
* catan:                                 Inverse Trig Functions.
* catanf:                                Inverse Trig Functions.
* catanh:                                Hyperbolic Functions.
* catanhf:                               Hyperbolic Functions.
* catanhl:                               Hyperbolic Functions.
* catanl:                                Inverse Trig Functions.
* catclose:                              The catgets Functions.
* catgets:                               The catgets Functions.
* catopen:                               The catgets Functions.
* cbc_crypt:                             DES Encryption.
* cbrt:                                  Exponents and Logarithms.
* cbrtf:                                 Exponents and Logarithms.
* cbrtl:                                 Exponents and Logarithms.
* ccos:                                  Trig Functions.
* ccosf:                                 Trig Functions.
* ccosh:                                 Hyperbolic Functions.
* ccoshf:                                Hyperbolic Functions.
* ccoshl:                                Hyperbolic Functions.
* ccosl:                                 Trig Functions.
* ceil:                                  Rounding Functions.
* ceilf:                                 Rounding Functions.
* ceill:                                 Rounding Functions.
* cexp:                                  Exponents and Logarithms.
* cexpf:                                 Exponents and Logarithms.
* cexpl:                                 Exponents and Logarithms.
* cfgetispeed:                           Line Speed.
* cfgetospeed:                           Line Speed.
* cfmakeraw:                             Noncanonical Input.
* cfree:                                 Freeing after Malloc.
* cfsetispeed:                           Line Speed.
* cfsetospeed:                           Line Speed.
* cfsetspeed:                            Line Speed.
* chdir:                                 Working Directory.
* chmod:                                 Setting Permissions.
* chown:                                 File Owner.
* cimag:                                 Operations on Complex.
* cimagf:                                Operations on Complex.
* cimagl:                                Operations on Complex.
* clearenv:                              Environment Access.
* clearerr:                              Error Recovery.
* clearerr_unlocked:                     Error Recovery.
* clock:                                 CPU Time.
* clog:                                  Exponents and Logarithms.
* clog10:                                Exponents and Logarithms.
* clog10f:                               Exponents and Logarithms.
* clog10l:                               Exponents and Logarithms.
* clogf:                                 Exponents and Logarithms.
* clogl:                                 Exponents and Logarithms.
* close:                                 Opening and Closing Files.
* closedir:                              Reading/Closing Directory.
* closelog:                              closelog.
* confstr:                               String Parameters.
* conj:                                  Operations on Complex.
* conjf:                                 Operations on Complex.
* conjl:                                 Operations on Complex.
* connect:                               Connecting.
* copysign:                              FP Bit Twiddling.
* copysignf:                             FP Bit Twiddling.
* copysignl:                             FP Bit Twiddling.
* cos:                                   Trig Functions.
* cosf:                                  Trig Functions.
* cosh:                                  Hyperbolic Functions.
* coshf:                                 Hyperbolic Functions.
* coshl:                                 Hyperbolic Functions.
* cosl:                                  Trig Functions.
* cpow:                                  Exponents and Logarithms.
* cpowf:                                 Exponents and Logarithms.
* cpowl:                                 Exponents and Logarithms.
* cproj:                                 Operations on Complex.
* cprojf:                                Operations on Complex.
* cprojl:                                Operations on Complex.
* CPU_CLR:                               CPU Affinity.
* CPU_ISSET:                             CPU Affinity.
* CPU_SET:                               CPU Affinity.
* CPU_ZERO:                              CPU Affinity.
* creal:                                 Operations on Complex.
* crealf:                                Operations on Complex.
* creall:                                Operations on Complex.
* creat:                                 Opening and Closing Files.
* creat64:                               Opening and Closing Files.
* crypt:                                 crypt.
* crypt_r:                               crypt.
* csin:                                  Trig Functions.
* csinf:                                 Trig Functions.
* csinh:                                 Hyperbolic Functions.
* csinhf:                                Hyperbolic Functions.
* csinhl:                                Hyperbolic Functions.
* csinl:                                 Trig Functions.
* csqrt:                                 Exponents and Logarithms.
* csqrtf:                                Exponents and Logarithms.
* csqrtl:                                Exponents and Logarithms.
* ctan:                                  Trig Functions.
* ctanf:                                 Trig Functions.
* ctanh:                                 Hyperbolic Functions.
* ctanhf:                                Hyperbolic Functions.
* ctanhl:                                Hyperbolic Functions.
* ctanl:                                 Trig Functions.
* ctermid:                               Identifying the Terminal.
* ctime:                                 Formatting Calendar Time.
* ctime_r:                               Formatting Calendar Time.
* cuserid:                               Who Logged In.
* dcgettext:                             Translation with gettext.
* dcngettext:                            Advanced gettext functions.
* DES_FAILED:                            DES Encryption.
* des_setparity:                         DES Encryption.
* dgettext:                              Translation with gettext.
* difftime:                              Elapsed Time.
* dirfd:                                 Opening a Directory.
* dirname:                               Finding Tokens in a String.
* div:                                   Integer Division.
* dngettext:                             Advanced gettext functions.
* drand48:                               SVID Random.
* drand48_r:                             SVID Random.
* drem:                                  Remainder Functions.
* dremf:                                 Remainder Functions.
* dreml:                                 Remainder Functions.
* DTTOIF:                                Directory Entries.
* dup:                                   Duplicating Descriptors.
* dup2:                                  Duplicating Descriptors.
* ecb_crypt:                             DES Encryption.
* ecvt:                                  System V Number Conversion.
* ecvt_r:                                System V Number Conversion.
* encrypt:                               DES Encryption.
* encrypt_r:                             DES Encryption.
* endfsent:                              fstab.
* endgrent:                              Scanning All Groups.
* endhostent:                            Host Names.
* endmntent:                             mtab.
* endnetent:                             Networks Database.
* endnetgrent:                           Lookup Netgroup.
* endprotoent:                           Protocols Database.
* endpwent:                              Scanning All Users.
* endservent:                            Services Database.
* endutent:                              Manipulating the Database.
* endutxent:                             XPG Functions.
* envz_add:                              Envz Functions.
* envz_entry:                            Envz Functions.
* envz_get:                              Envz Functions.
* envz_merge:                            Envz Functions.
* envz_strip:                            Envz Functions.
* erand48:                               SVID Random.
* erand48_r:                             SVID Random.
* erf:                                   Special Functions.
* erfc:                                  Special Functions.
* erfcf:                                 Special Functions.
* erfcl:                                 Special Functions.
* erff:                                  Special Functions.
* erfl:                                  Special Functions.
* err:                                   Error Messages.
* error:                                 Error Messages.
* error_at_line:                         Error Messages.
* errx:                                  Error Messages.
* execl:                                 Executing a File.
* execle:                                Executing a File.
* execlp:                                Executing a File.
* execv:                                 Executing a File.
* execve:                                Executing a File.
* execvp:                                Executing a File.
* exit:                                  Normal Termination.
* exp:                                   Exponents and Logarithms.
* exp10:                                 Exponents and Logarithms.
* exp10f:                                Exponents and Logarithms.
* exp10l:                                Exponents and Logarithms.
* exp2:                                  Exponents and Logarithms.
* exp2f:                                 Exponents and Logarithms.
* exp2l:                                 Exponents and Logarithms.
* expf:                                  Exponents and Logarithms.
* expl:                                  Exponents and Logarithms.
* expm1:                                 Exponents and Logarithms.
* expm1f:                                Exponents and Logarithms.
* expm1l:                                Exponents and Logarithms.
* fabs:                                  Absolute Value.
* fabsf:                                 Absolute Value.
* fabsl:                                 Absolute Value.
* fchdir:                                Working Directory.
* fchmod:                                Setting Permissions.
* fchown:                                File Owner.
* fclean:                                Cleaning Streams.
* fclose:                                Closing Streams.
* fcloseall:                             Closing Streams.
* fcntl:                                 Control Operations.
* fcvt:                                  System V Number Conversion.
* fcvt_r:                                System V Number Conversion.
* FD_CLR:                                Waiting for I/O.
* FD_ISSET:                              Waiting for I/O.
* FD_SET:                                Waiting for I/O.
* FD_ZERO:                               Waiting for I/O.
* fdatasync:                             Synchronizing I/O.
* fdim:                                  Misc FP Arithmetic.
* fdimf:                                 Misc FP Arithmetic.
* fdiml:                                 Misc FP Arithmetic.
* fdopen:                                Descriptors and Streams.
* fdopendir:                             Opening a Directory.
* feclearexcept:                         Status bit operations.
* fedisableexcept:                       Control Functions.
* feenableexcept:                        Control Functions.
* fegetenv:                              Control Functions.
* fegetexcept:                           Control Functions.
* fegetexceptflag:                       Status bit operations.
* fegetround:                            Rounding.
* feholdexcept:                          Control Functions.
* feof:                                  EOF and Errors.
* feof_unlocked:                         EOF and Errors.
* feraiseexcept:                         Status bit operations.
* ferror:                                EOF and Errors.
* ferror_unlocked:                       EOF and Errors.
* fesetenv:                              Control Functions.
* fesetexceptflag:                       Status bit operations.
* fesetround:                            Rounding.
* fetestexcept:                          Status bit operations.
* feupdateenv:                           Control Functions.
* fflush:                                Flushing Buffers.
* fflush_unlocked:                       Flushing Buffers.
* fgetc:                                 Character Input.
* fgetc_unlocked:                        Character Input.
* fgetgrent:                             Scanning All Groups.
* fgetgrent_r:                           Scanning All Groups.
* fgetpos:                               Portable Positioning.
* fgetpos64:                             Portable Positioning.
* fgetpwent:                             Scanning All Users.
* fgetpwent_r:                           Scanning All Users.
* fgets:                                 Line Input.
* fgets_unlocked:                        Line Input.
* fgetwc:                                Character Input.
* fgetwc_unlocked:                       Character Input.
* fgetws:                                Line Input.
* fgetws_unlocked:                       Line Input.
* fileno:                                Descriptors and Streams.
* fileno_unlocked:                       Descriptors and Streams.
* finite:                                Floating Point Classes.
* finitef:                               Floating Point Classes.
* finitel:                               Floating Point Classes.
* flockfile:                             Streams and Threads.
* floor:                                 Rounding Functions.
* floorf:                                Rounding Functions.
* floorl:                                Rounding Functions.
* fma:                                   Misc FP Arithmetic.
* fmaf:                                  Misc FP Arithmetic.
* fmal:                                  Misc FP Arithmetic.
* fmax:                                  Misc FP Arithmetic.
* fmaxf:                                 Misc FP Arithmetic.
* fmaxl:                                 Misc FP Arithmetic.
* fmemopen:                              String Streams.
* fmin:                                  Misc FP Arithmetic.
* fminf:                                 Misc FP Arithmetic.
* fminl:                                 Misc FP Arithmetic.
* fmod:                                  Remainder Functions.
* fmodf:                                 Remainder Functions.
* fmodl:                                 Remainder Functions.
* fmtmsg:                                Printing Formatted Messages.
* fnmatch:                               Wildcard Matching.
* fopen:                                 Opening Streams.
* fopen64:                               Opening Streams.
* fopencookie:                           Streams and Cookies.
* fork:                                  Creating a Process.
* forkpty:                               Pseudo-Terminal Pairs.
* fpathconf:                             Pathconf.
* fpclassify:                            Floating Point Classes.
* fprintf:                               Formatted Output Functions.
* fputc:                                 Simple Output.
* fputc_unlocked:                        Simple Output.
* fputs:                                 Simple Output.
* fputs_unlocked:                        Simple Output.
* fputwc:                                Simple Output.
* fputwc_unlocked:                       Simple Output.
* fputws:                                Simple Output.
* fputws_unlocked:                       Simple Output.
* fread:                                 Block Input/Output.
* fread_unlocked:                        Block Input/Output.
* free:                                  Freeing after Malloc.
* freopen:                               Opening Streams.
* freopen64:                             Opening Streams.
* frexp:                                 Normalization Functions.
* frexpf:                                Normalization Functions.
* frexpl:                                Normalization Functions.
* fscanf:                                Formatted Input Functions.
* fseek:                                 File Positioning.
* fseeko:                                File Positioning.
* fseeko64:                              File Positioning.
* fsetpos:                               Portable Positioning.
* fsetpos64:                             Portable Positioning.
* fstat:                                 Reading Attributes.
* fstat64:                               Reading Attributes.
* fsync:                                 Synchronizing I/O.
* ftell:                                 File Positioning.
* ftello:                                File Positioning.
* ftello64:                              File Positioning.
* ftruncate:                             File Size.
* ftruncate64:                           File Size.
* ftrylockfile:                          Streams and Threads.
* ftw:                                   Working with Directory Trees.
* ftw64:                                 Working with Directory Trees.
* funlockfile:                           Streams and Threads.
* futimes:                               File Times.
* fwide:                                 Streams and I18N.
* fwprintf:                              Formatted Output Functions.
* fwrite:                                Block Input/Output.
* fwrite_unlocked:                       Block Input/Output.
* fwscanf:                               Formatted Input Functions.
* gamma:                                 Special Functions.
* gammaf:                                Special Functions.
* gammal:                                Special Functions.
* gcvt:                                  System V Number Conversion.
* get_avphys_pages:                      Query Memory Parameters.
* get_current_dir_name:                  Working Directory.
* get_nprocs:                            Processor Resources.
* get_nprocs_conf:                       Processor Resources.
* get_phys_pages:                        Query Memory Parameters.
* getc:                                  Character Input.
* getc_unlocked:                         Character Input.
* getchar:                               Character Input.
* getchar_unlocked:                      Character Input.
* getcontext:                            System V contexts.
* getcwd:                                Working Directory.
* getdate:                               General Time String Parsing.
* getdate_r:                             General Time String Parsing.
* getdelim:                              Line Input.
* getdomainnname:                        Host Identification.
* getegid:                               Reading Persona.
* getenv:                                Environment Access.
* geteuid:                               Reading Persona.
* getfsent:                              fstab.
* getfsfile:                             fstab.
* getfsspec:                             fstab.
* getgid:                                Reading Persona.
* getgrent:                              Scanning All Groups.
* getgrent_r:                            Scanning All Groups.
* getgrgid:                              Lookup Group.
* getgrgid_r:                            Lookup Group.
* getgrnam:                              Lookup Group.
* getgrnam_r:                            Lookup Group.
* getgrouplist:                          Setting Groups.
* getgroups:                             Reading Persona.
* gethostbyaddr:                         Host Names.
* gethostbyaddr_r:                       Host Names.
* gethostbyname:                         Host Names.
* gethostbyname2:                        Host Names.
* gethostbyname2_r:                      Host Names.
* gethostbyname_r:                       Host Names.
* gethostent:                            Host Names.
* gethostid:                             Host Identification.
* gethostname:                           Host Identification.
* getitimer:                             Setting an Alarm.
* getline:                               Line Input.
* getloadavg:                            Processor Resources.
* getlogin:                              Who Logged In.
* getmntent:                             mtab.
* getmntent_r:                           mtab.
* getnetbyaddr:                          Networks Database.
* getnetbyname:                          Networks Database.
* getnetent:                             Networks Database.
* getnetgrent:                           Lookup Netgroup.
* getnetgrent_r:                         Lookup Netgroup.
* getopt:                                Using Getopt.
* getopt_long:                           Getopt Long Options.
* getopt_long_only:                      Getopt Long Options.
* getpagesize:                           Query Memory Parameters.
* getpass:                               getpass.
* getpeername:                           Who is Connected.
* getpgid:                               Process Group Functions.
* getpgrp:                               Process Group Functions.
* getpid:                                Process Identification.
* getppid:                               Process Identification.
* getpriority:                           Traditional Scheduling Functions.
* getprotobyname:                        Protocols Database.
* getprotobynumber:                      Protocols Database.
* getprotoent:                           Protocols Database.
* getpt:                                 Allocation.
* getpwent:                              Scanning All Users.
* getpwent_r:                            Scanning All Users.
* getpwnam:                              Lookup User.
* getpwnam_r:                            Lookup User.
* getpwuid:                              Lookup User.
* getpwuid_r:                            Lookup User.
* getrlimit:                             Limits on Resources.
* getrlimit64:                           Limits on Resources.
* getrusage:                             Resource Usage.
* gets:                                  Line Input.
* getservbyname:                         Services Database.
* getservbyport:                         Services Database.
* getservent:                            Services Database.
* getsid:                                Process Group Functions.
* getsockname:                           Reading Address.
* getsockopt:                            Socket Option Functions.
* getsubopt:                             Suboptions.
* gettext:                               Translation with gettext.
* gettimeofday:                          High-Resolution Calendar.
* getuid:                                Reading Persona.
* getumask:                              Setting Permissions.
* getutent:                              Manipulating the Database.
* getutent_r:                            Manipulating the Database.
* getutid:                               Manipulating the Database.
* getutid_r:                             Manipulating the Database.
* getutline:                             Manipulating the Database.
* getutline_r:                           Manipulating the Database.
* getutmp:                               XPG Functions.
* getutmpx:                              XPG Functions.
* getutxent:                             XPG Functions.
* getutxid:                              XPG Functions.
* getutxline:                            XPG Functions.
* getw:                                  Character Input.
* getwc:                                 Character Input.
* getwc_unlocked:                        Character Input.
* getwchar:                              Character Input.
* getwchar_unlocked:                     Character Input.
* getwd:                                 Working Directory.
* glob:                                  Calling Glob.
* glob64:                                Calling Glob.
* globfree:                              More Flags for Globbing.
* globfree64:                            More Flags for Globbing.
* gmtime:                                Broken-down Time.
* gmtime_r:                              Broken-down Time.
* grantpt:                               Allocation.
* gsignal:                               Signaling Yourself.
* gtty:                                  BSD Terminal Modes.
* hasmntopt:                             mtab.
* hcreate:                               Hash Search Function.
* hcreate_r:                             Hash Search Function.
* hdestroy:                              Hash Search Function.
* hdestroy_r:                            Hash Search Function.
* hsearch:                               Hash Search Function.
* hsearch_r:                             Hash Search Function.
* htonl:                                 Byte Order.
* htons:                                 Byte Order.
* hypot:                                 Exponents and Logarithms.
* hypotf:                                Exponents and Logarithms.
* hypotl:                                Exponents and Logarithms.
* iconv:                                 Generic Conversion Interface.
* iconv_close:                           Generic Conversion Interface.
* iconv_open:                            Generic Conversion Interface.
* if_freenameindex:                      Interface Naming.
* if_indextoname:                        Interface Naming.
* if_nameindex:                          Interface Naming.
* if_nametoindex:                        Interface Naming.
* IFTODT:                                Directory Entries.
* ilogb:                                 Exponents and Logarithms.
* ilogbf:                                Exponents and Logarithms.
* ilogbl:                                Exponents and Logarithms.
* imaxabs:                               Absolute Value.
* imaxdiv:                               Integer Division.
* index:                                 Search Functions.
* inet_addr:                             Host Address Functions.
* inet_aton:                             Host Address Functions.
* inet_lnaof:                            Host Address Functions.
* inet_makeaddr:                         Host Address Functions.
* inet_netof:                            Host Address Functions.
* inet_network:                          Host Address Functions.
* inet_ntoa:                             Host Address Functions.
* inet_ntop:                             Host Address Functions.
* inet_pton:                             Host Address Functions.
* initgroups:                            Setting Groups.
* initstate:                             BSD Random.
* initstate_r:                           BSD Random.
* innetgr:                               Netgroup Membership.
* int:                                   Random Access Directory.
* ioctl:                                 IOCTLs.
* isalnum:                               Classification of Characters.
* isalpha:                               Classification of Characters.
* isascii:                               Classification of Characters.
* isatty:                                Is It a Terminal.
* isblank:                               Classification of Characters.
* iscntrl:                               Classification of Characters.
* isdigit:                               Classification of Characters.
* isfinite:                              Floating Point Classes.
* isgraph:                               Classification of Characters.
* isgreater:                             FP Comparison Functions.
* isgreaterequal:                        FP Comparison Functions.
* isinf:                                 Floating Point Classes.
* isinff:                                Floating Point Classes.
* isinfl:                                Floating Point Classes.
* isless:                                FP Comparison Functions.
* islessequal:                           FP Comparison Functions.
* islessgreater:                         FP Comparison Functions.
* islower:                               Classification of Characters.
* isnan:                                 Floating Point Classes.
* isnanf:                                Floating Point Classes.
* isnanl:                                Floating Point Classes.
* isnormal:                              Floating Point Classes.
* isprint:                               Classification of Characters.
* ispunct:                               Classification of Characters.
* isspace:                               Classification of Characters.
* isunordered:                           FP Comparison Functions.
* isupper:                               Classification of Characters.
* iswalnum:                              Classification of Wide Characters.
* iswalpha:                              Classification of Wide Characters.
* iswblank:                              Classification of Wide Characters.
* iswcntrl:                              Classification of Wide Characters.
* iswctype:                              Classification of Wide Characters.
* iswdigit:                              Classification of Wide Characters.
* iswgraph:                              Classification of Wide Characters.
* iswlower:                              Classification of Wide Characters.
* iswprint:                              Classification of Wide Characters.
* iswpunct:                              Classification of Wide Characters.
* iswspace:                              Classification of Wide Characters.
* iswupper:                              Classification of Wide Characters.
* iswxdigit:                             Classification of Wide Characters.
* isxdigit:                              Classification of Characters.
* j0:                                    Special Functions.
* j0f:                                   Special Functions.
* j0l:                                   Special Functions.
* j1:                                    Special Functions.
* j1f:                                   Special Functions.
* j1l:                                   Special Functions.
* jn:                                    Special Functions.
* jnf:                                   Special Functions.
* jnl:                                   Special Functions.
* jrand48:                               SVID Random.
* jrand48_r:                             SVID Random.
* kill:                                  Signaling Another Process.
* killpg:                                Signaling Another Process.
* l64a:                                  Encode Binary Data.
* labs:                                  Absolute Value.
* lcong48:                               SVID Random.
* lcong48_r:                             SVID Random.
* ldexp:                                 Normalization Functions.
* ldexpf:                                Normalization Functions.
* ldexpl:                                Normalization Functions.
* ldiv:                                  Integer Division.
* lfind:                                 Array Search Function.
* lgamma:                                Special Functions.
* lgamma_r:                              Special Functions.
* lgammaf:                               Special Functions.
* lgammaf_r:                             Special Functions.
* lgammal:                               Special Functions.
* lgammal_r:                             Special Functions.
* link:                                  Hard Links.
* lio_listio:                            Asynchronous Reads/Writes.
* lio_listio64:                          Asynchronous Reads/Writes.
* listen:                                Listening.
* llabs:                                 Absolute Value.
* lldiv:                                 Integer Division.
* llrint:                                Rounding Functions.
* llrintf:                               Rounding Functions.
* llrintl:                               Rounding Functions.
* llround:                               Rounding Functions.
* llroundf:                              Rounding Functions.
* llroundl:                              Rounding Functions.
* localeconv:                            The Lame Way to Locale Data.
* localtime:                             Broken-down Time.
* localtime_r:                           Broken-down Time.
* log:                                   Exponents and Logarithms.
* log10:                                 Exponents and Logarithms.
* log10f:                                Exponents and Logarithms.
* log10l:                                Exponents and Logarithms.
* log1p:                                 Exponents and Logarithms.
* log1pf:                                Exponents and Logarithms.
* log1pl:                                Exponents and Logarithms.
* log2:                                  Exponents and Logarithms.
* log2f:                                 Exponents and Logarithms.
* log2l:                                 Exponents and Logarithms.
* logb:                                  Exponents and Logarithms.
* logbf:                                 Exponents and Logarithms.
* logbl:                                 Exponents and Logarithms.
* logf:                                  Exponents and Logarithms.
* login:                                 Logging In and Out.
* login_tty:                             Logging In and Out.
* logl:                                  Exponents and Logarithms.
* logout:                                Logging In and Out.
* logwtmp:                               Logging In and Out.
* longjmp:                               Non-Local Details.
* lrand48:                               SVID Random.
* lrand48_r:                             SVID Random.
* lrint:                                 Rounding Functions.
* lrintf:                                Rounding Functions.
* lrintl:                                Rounding Functions.
* lround:                                Rounding Functions.
* lroundf:                               Rounding Functions.
* lroundl:                               Rounding Functions.
* lsearch:                               Array Search Function.
* lseek:                                 File Position Primitive.
* lseek64:                               File Position Primitive.
* lstat:                                 Reading Attributes.
* lstat64:                               Reading Attributes.
* lutimes:                               File Times.
* madvise:                               Memory-mapped I/O.
* main:                                  Program Arguments.
* makecontext:                           System V contexts.
* mallinfo:                              Statistics of Malloc.
* malloc:                                Basic Allocation.
* mallopt:                               Malloc Tunable Parameters.
* matherr:                               FP Exceptions.
* mblen:                                 Non-reentrant Character Conversion.
* mbrlen:                                Converting a Character.
* mbrtowc:                               Converting a Character.
* mbsinit:                               Keeping the state.
* mbsnrtowcs:                            Converting Strings.
* mbsrtowcs:                             Converting Strings.
* mbstowcs:                              Non-reentrant String Conversion.
* mbtowc:                                Non-reentrant Character Conversion.
* mcheck:                                Heap Consistency Checking.
* memalign:                              Aligned Memory Blocks.
* memccpy:                               Copying and Concatenation.
* memchr:                                Search Functions.
* memcmp:                                String/Array Comparison.
* memcpy:                                Copying and Concatenation.
* memfrob:                               Trivial Encryption.
* memmem:                                Search Functions.
* memmove:                               Copying and Concatenation.
* mempcpy:                               Copying and Concatenation.
* memrchr:                               Search Functions.
* memset:                                Copying and Concatenation.
* mkdir:                                 Creating Directories.
* mkdtemp:                               Temporary Files.
* mkfifo:                                FIFO Special Files.
* mknod:                                 Making Special Files.
* mkstemp:                               Temporary Files.
* mktemp:                                Temporary Files.
* mktime:                                Broken-down Time.
* mlock:                                 Page Lock Functions.
* mlockall:                              Page Lock Functions.
* mmap:                                  Memory-mapped I/O.
* mmap64:                                Memory-mapped I/O.
* modf:                                  Rounding Functions.
* modff:                                 Rounding Functions.
* modfl:                                 Rounding Functions.
* mount:                                 Mount-Unmount-Remount.
* mprobe:                                Heap Consistency Checking.
* mrand48:                               SVID Random.
* mrand48_r:                             SVID Random.
* mremap:                                Memory-mapped I/O.
* msync:                                 Memory-mapped I/O.
* mtrace:                                Tracing malloc.
* munlock:                               Page Lock Functions.
* munlockall:                            Page Lock Functions.
* munmap:                                Memory-mapped I/O.
* muntrace:                              Tracing malloc.
* nan:                                   FP Bit Twiddling.
* nanf:                                  FP Bit Twiddling.
* nanl:                                  FP Bit Twiddling.
* nanosleep:                             Sleeping.
* nearbyint:                             Rounding Functions.
* nearbyintf:                            Rounding Functions.
* nearbyintl:                            Rounding Functions.
* nextafter:                             FP Bit Twiddling.
* nextafterf:                            FP Bit Twiddling.
* nextafterl:                            FP Bit Twiddling.
* nexttoward:                            FP Bit Twiddling.
* nexttowardf:                           FP Bit Twiddling.
* nexttowardl:                           FP Bit Twiddling.
* nftw:                                  Working with Directory Trees.
* nftw64:                                Working with Directory Trees.
* ngettext:                              Advanced gettext functions.
* nice:                                  Traditional Scheduling Functions.
* nl_langinfo:                           The Elegant and Fast Way.
* notfound:                              Actions in the NSS configuration.
* nrand48:                               SVID Random.
* nrand48_r:                             SVID Random.
* ntohl:                                 Byte Order.
* ntohs:                                 Byte Order.
* ntp_adjtime:                           High Accuracy Clock.
* ntp_gettime:                           High Accuracy Clock.
* obstack_1grow:                         Growing Objects.
* obstack_1grow_fast:                    Extra Fast Growing.
* obstack_alignment_mask:                Obstacks Data Alignment.
* obstack_alloc:                         Allocation in an Obstack.
* obstack_base:                          Status of an Obstack.
* obstack_blank:                         Growing Objects.
* obstack_blank_fast:                    Extra Fast Growing.
* obstack_chunk_alloc:                   Preparing for Obstacks.
* obstack_chunk_free:                    Preparing for Obstacks.
* obstack_chunk_size:                    Obstack Chunks.
* obstack_copy:                          Allocation in an Obstack.
* obstack_copy0:                         Allocation in an Obstack.
* obstack_finish:                        Growing Objects.
* obstack_free:                          Freeing Obstack Objects.
* obstack_grow:                          Growing Objects.
* obstack_grow0:                         Growing Objects.
* obstack_init:                          Preparing for Obstacks.
* obstack_int_grow:                      Growing Objects.
* obstack_int_grow_fast:                 Extra Fast Growing.
* obstack_next_free:                     Status of an Obstack.
* obstack_object_size <1>:               Status of an Obstack.
* obstack_object_size:                   Growing Objects.
* obstack_printf:                        Dynamic Output.
* obstack_ptr_grow:                      Growing Objects.
* obstack_ptr_grow_fast:                 Extra Fast Growing.
* obstack_room:                          Extra Fast Growing.
* obstack_vprintf:                       Variable Arguments Output.
* offsetof:                              Structure Measurement.
* on_exit:                               Cleanups on Exit.
* open:                                  Opening and Closing Files.
* open64:                                Opening and Closing Files.
* open_memstream:                        String Streams.
* open_obstack_stream:                   Obstack Streams.
* opendir:                               Opening a Directory.
* openlog:                               openlog.
* openpty:                               Pseudo-Terminal Pairs.
* parse_printf_format:                   Parsing a Template String.
* pathconf:                              Pathconf.
* pause:                                 Using Pause.
* pclose:                                Pipe to a Subprocess.
* perror:                                Error Messages.
* pipe:                                  Creating a Pipe.
* popen:                                 Pipe to a Subprocess.
* posix_memalign:                        Aligned Memory Blocks.
* pow:                                   Exponents and Logarithms.
* pow10:                                 Exponents and Logarithms.
* pow10f:                                Exponents and Logarithms.
* pow10l:                                Exponents and Logarithms.
* powf:                                  Exponents and Logarithms.
* powl:                                  Exponents and Logarithms.
* pread:                                 I/O Primitives.
* pread64:                               I/O Primitives.
* printf:                                Formatted Output Functions.
* printf_size:                           Predefined Printf Handlers.
* printf_size_info:                      Predefined Printf Handlers.
* psignal:                               Signal Messages.
* ptsname:                               Allocation.
* ptsname_r:                             Allocation.
* putc:                                  Simple Output.
* putc_unlocked:                         Simple Output.
* putchar:                               Simple Output.
* putchar_unlocked:                      Simple Output.
* putenv:                                Environment Access.
* putpwent:                              Writing a User Entry.
* puts:                                  Simple Output.
* pututline:                             Manipulating the Database.
* pututxline:                            XPG Functions.
* putw:                                  Simple Output.
* putwc:                                 Simple Output.
* putwc_unlocked:                        Simple Output.
* putwchar:                              Simple Output.
* putwchar_unlocked:                     Simple Output.
* pwrite:                                I/O Primitives.
* pwrite64:                              I/O Primitives.
* qecvt:                                 System V Number Conversion.
* qecvt_r:                               System V Number Conversion.
* qfcvt:                                 System V Number Conversion.
* qfcvt_r:                               System V Number Conversion.
* qgcvt:                                 System V Number Conversion.
* qsort:                                 Array Sort Function.
* raise:                                 Signaling Yourself.
* rand:                                  ISO Random.
* rand_r:                                ISO Random.
* random:                                BSD Random.
* random_r:                              BSD Random.
* rawmemchr:                             Search Functions.
* read:                                  I/O Primitives.
* readdir:                               Reading/Closing Directory.
* readdir64:                             Reading/Closing Directory.
* readdir64_r:                           Reading/Closing Directory.
* readdir_r:                             Reading/Closing Directory.
* readlink:                              Symbolic Links.
* readv:                                 Scatter-Gather.
* realloc:                               Changing Block Size.
* realpath:                              Symbolic Links.
* recv:                                  Receiving Data.
* recvfrom:                              Receiving Datagrams.
* regcomp:                               POSIX Regexp Compilation.
* regerror:                              Regexp Cleanup.
* regexec:                               Matching POSIX Regexps.
* regfree:                               Regexp Cleanup.
* register_printf_function:              Registering New Conversions.
* remainder:                             Remainder Functions.
* remainderf:                            Remainder Functions.
* remainderl:                            Remainder Functions.
* remove:                                Deleting Files.
* rename:                                Renaming Files.
* rewind:                                File Positioning.
* rewinddir:                             Random Access Directory.
* rindex:                                Search Functions.
* rint:                                  Rounding Functions.
* rintf:                                 Rounding Functions.
* rintl:                                 Rounding Functions.
* rmdir:                                 Deleting Files.
* round:                                 Rounding Functions.
* roundf:                                Rounding Functions.
* roundl:                                Rounding Functions.
* rpmatch:                               Yes-or-No Questions.
* S_ISBLK:                               Testing File Type.
* S_ISCHR:                               Testing File Type.
* S_ISDIR:                               Testing File Type.
* S_ISFIFO:                              Testing File Type.
* S_ISLNK:                               Testing File Type.
* S_ISREG:                               Testing File Type.
* S_ISSOCK:                              Testing File Type.
* S_TYPEISMQ:                            Testing File Type.
* S_TYPEISSEM:                           Testing File Type.
* S_TYPEISSHM:                           Testing File Type.
* scalb:                                 Normalization Functions.
* scalbf:                                Normalization Functions.
* scalbl:                                Normalization Functions.
* scalbln:                               Normalization Functions.
* scalblnf:                              Normalization Functions.
* scalblnl:                              Normalization Functions.
* scalbn:                                Normalization Functions.
* scalbnf:                               Normalization Functions.
* scalbnl:                               Normalization Functions.
* scandir:                               Scanning Directory Content.
* scandir64:                             Scanning Directory Content.
* scanf:                                 Formatted Input Functions.
* sched_get_priority_max:                Basic Scheduling Functions.
* sched_get_priority_min:                Basic Scheduling Functions.
* sched_getaffinity:                     CPU Affinity.
* sched_getparam:                        Basic Scheduling Functions.
* sched_getscheduler:                    Basic Scheduling Functions.
* sched_rr_get_interval:                 Basic Scheduling Functions.
* sched_setaffinity:                     CPU Affinity.
* sched_setparam:                        Basic Scheduling Functions.
* sched_setscheduler:                    Basic Scheduling Functions.
* sched_yield:                           Basic Scheduling Functions.
* seed48:                                SVID Random.
* seed48_r:                              SVID Random.
* seekdir:                               Random Access Directory.
* select:                                Waiting for I/O.
* send:                                  Sending Data.
* sendto:                                Sending Datagrams.
* setbuf:                                Controlling Buffering.
* setbuffer:                             Controlling Buffering.
* setcontext:                            System V contexts.
* setdomainname:                         Host Identification.
* setegid:                               Setting Groups.
* setenv:                                Environment Access.
* seteuid:                               Setting User ID.
* setfsent:                              fstab.
* setgid:                                Setting Groups.
* setgrent:                              Scanning All Groups.
* setgroups:                             Setting Groups.
* sethostent:                            Host Names.
* sethostid:                             Host Identification.
* sethostname:                           Host Identification.
* setitimer:                             Setting an Alarm.
* setjmp:                                Non-Local Details.
* setkey:                                DES Encryption.
* setkey_r:                              DES Encryption.
* setlinebuf:                            Controlling Buffering.
* setlocale:                             Setting the Locale.
* setlogmask:                            setlogmask.
* setmntent:                             mtab.
* setnetent:                             Networks Database.
* setnetgrent:                           Lookup Netgroup.
* setpgid:                               Process Group Functions.
* setpgrp:                               Process Group Functions.
* setpriority:                           Traditional Scheduling Functions.
* setprotoent:                           Protocols Database.
* setpwent:                              Scanning All Users.
* setregid:                              Setting Groups.
* setreuid:                              Setting User ID.
* setrlimit:                             Limits on Resources.
* setrlimit64:                           Limits on Resources.
* setservent:                            Services Database.
* setsid:                                Process Group Functions.
* setsockopt:                            Socket Option Functions.
* setstate:                              BSD Random.
* setstate_r:                            BSD Random.
* settimeofday:                          High-Resolution Calendar.
* setuid:                                Setting User ID.
* setutent:                              Manipulating the Database.
* setutxent:                             XPG Functions.
* setvbuf:                               Controlling Buffering.
* shutdown:                              Closing a Socket.
* sigaction:                             Advanced Signal Handling.
* sigaddset:                             Signal Sets.
* sigaltstack:                           Signal Stack.
* sigblock:                              Blocking in BSD.
* sigdelset:                             Signal Sets.
* sigemptyset:                           Signal Sets.
* sigfillset:                            Signal Sets.
* siginterrupt:                          BSD Handler.
* sigismember:                           Signal Sets.
* siglongjmp:                            Non-Local Exits and Signals.
* sigmask:                               Blocking in BSD.
* signal:                                Basic Signal Handling.
* signbit:                               FP Bit Twiddling.
* significand:                           Normalization Functions.
* significandf:                          Normalization Functions.
* significandl:                          Normalization Functions.
* sigpause:                              Blocking in BSD.
* sigpending:                            Checking for Pending Signals.
* sigprocmask:                           Process Signal Mask.
* sigsetjmp:                             Non-Local Exits and Signals.
* sigsetmask:                            Blocking in BSD.
* sigstack:                              Signal Stack.
* sigsuspend:                            Sigsuspend.
* sigvec:                                BSD Handler.
* sin:                                   Trig Functions.
* sincos:                                Trig Functions.
* sincosf:                               Trig Functions.
* sincosl:                               Trig Functions.
* sinf:                                  Trig Functions.
* sinh:                                  Hyperbolic Functions.
* sinhf:                                 Hyperbolic Functions.
* sinhl:                                 Hyperbolic Functions.
* sinl:                                  Trig Functions.
* sleep:                                 Sleeping.
* snprintf:                              Formatted Output Functions.
* socket:                                Creating a Socket.
* socketpair:                            Socket Pairs.
* sprintf:                               Formatted Output Functions.
* sqrt:                                  Exponents and Logarithms.
* sqrtf:                                 Exponents and Logarithms.
* sqrtl:                                 Exponents and Logarithms.
* srand:                                 ISO Random.
* srand48:                               SVID Random.
* srand48_r:                             SVID Random.
* srandom:                               BSD Random.
* srandom_r:                             BSD Random.
* sscanf:                                Formatted Input Functions.
* ssignal:                               Basic Signal Handling.
* stat:                                  Reading Attributes.
* stat64:                                Reading Attributes.
* stime:                                 Simple Calendar Time.
* stpcpy:                                Copying and Concatenation.
* stpncpy:                               Copying and Concatenation.
* strcasecmp:                            String/Array Comparison.
* strcasestr:                            Search Functions.
* strcat:                                Copying and Concatenation.
* strchr:                                Search Functions.
* strchrnul:                             Search Functions.
* strcmp:                                String/Array Comparison.
* strcoll:                               Collation Functions.
* strcpy:                                Copying and Concatenation.
* strcspn:                               Search Functions.
* strdup:                                Copying and Concatenation.
* strdupa:                               Copying and Concatenation.
* strerror:                              Error Messages.
* strerror_r:                            Error Messages.
* strfmon:                               Formatting Numbers.
* strfry:                                strfry.
* strftime:                              Formatting Calendar Time.
* strlen:                                String Length.
* strncasecmp:                           String/Array Comparison.
* strncat:                               Copying and Concatenation.
* strncmp:                               String/Array Comparison.
* strncpy:                               Copying and Concatenation.
* strndup:                               Copying and Concatenation.
* strndupa:                              Copying and Concatenation.
* strnlen:                               String Length.
* strpbrk:                               Search Functions.
* strptime:                              Low-Level Time String Parsing.
* strrchr:                               Search Functions.
* strsep:                                Finding Tokens in a String.
* strsignal:                             Signal Messages.
* strspn:                                Search Functions.
* strstr:                                Search Functions.
* strtod:                                Parsing of Floats.
* strtof:                                Parsing of Floats.
* strtoimax:                             Parsing of Integers.
* strtok:                                Finding Tokens in a String.
* strtok_r:                              Finding Tokens in a String.
* strtol:                                Parsing of Integers.
* strtold:                               Parsing of Floats.
* strtoll:                               Parsing of Integers.
* strtoq:                                Parsing of Integers.
* strtoul:                               Parsing of Integers.
* strtoull:                              Parsing of Integers.
* strtoumax:                             Parsing of Integers.
* strtouq:                               Parsing of Integers.
* strverscmp:                            String/Array Comparison.
* strxfrm:                               Collation Functions.
* stty:                                  BSD Terminal Modes.
* success:                               Actions in the NSS configuration.
* SUN_LEN:                               Local Namespace Details.
* swapcontext:                           System V contexts.
* swprintf:                              Formatted Output Functions.
* swscanf:                               Formatted Input Functions.
* symlink:                               Symbolic Links.
* sync:                                  Synchronizing I/O.
* syscall:                               System Calls.
* sysconf:                               Sysconf Definition.
* sysctl:                                System Parameters.
* syslog:                                syslog; vsyslog.
* system:                                Running a Command.
* sysv_signal:                           Basic Signal Handling.
* tan:                                   Trig Functions.
* tanf:                                  Trig Functions.
* tanh:                                  Hyperbolic Functions.
* tanhf:                                 Hyperbolic Functions.
* tanhl:                                 Hyperbolic Functions.
* tanl:                                  Trig Functions.
* tcdrain:                               Line Control.
* tcflow:                                Line Control.
* tcflush:                               Line Control.
* tcgetattr:                             Mode Functions.
* tcgetpgrp:                             Terminal Access Functions.
* tcgetsid:                              Terminal Access Functions.
* tcsendbreak:                           Line Control.
* tcsetattr:                             Mode Functions.
* tcsetpgrp:                             Terminal Access Functions.
* tdelete:                               Tree Search Function.
* tdestroy:                              Tree Search Function.
* TEMP_FAILURE_RETRY:                    Interrupted Primitives.
* tempnam:                               Temporary Files.
* textdomain:                            Locating gettext catalog.
* tfind:                                 Tree Search Function.
* tgamma:                                Special Functions.
* tgammaf:                               Special Functions.
* tgammal:                               Special Functions.
* time:                                  Simple Calendar Time.
* timegm:                                Broken-down Time.
* timelocal:                             Broken-down Time.
* times:                                 Processor Time.
* tmpfile:                               Temporary Files.
* tmpfile64:                             Temporary Files.
* tmpnam:                                Temporary Files.
* tmpnam_r:                              Temporary Files.
* toascii:                               Case Conversion.
* tolower:                               Case Conversion.
* toupper:                               Case Conversion.
* towctrans:                             Wide Character Case Conversion.
* towlower:                              Wide Character Case Conversion.
* towupper:                              Wide Character Case Conversion.
* trunc:                                 Rounding Functions.
* truncate:                              File Size.
* truncate64:                            File Size.
* truncf:                                Rounding Functions.
* truncl:                                Rounding Functions.
* tryagain:                              Actions in the NSS configuration.
* tsearch:                               Tree Search Function.
* ttyname:                               Is It a Terminal.
* ttyname_r:                             Is It a Terminal.
* twalk:                                 Tree Search Function.
* tzset:                                 Time Zone Functions.
* ulimit:                                Limits on Resources.
* umask:                                 Setting Permissions.
* umount:                                Mount-Unmount-Remount.
* umount2:                               Mount-Unmount-Remount.
* uname:                                 Platform Type.
* unavail:                               Actions in the NSS configuration.
* ungetc:                                How Unread.
* ungetwc:                               How Unread.
* unlink:                                Deleting Files.
* unlockpt:                              Allocation.
* unsetenv:                              Environment Access.
* updwtmp:                               Manipulating the Database.
* utime:                                 File Times.
* utimes:                                File Times.
* utmpname:                              Manipulating the Database.
* utmpxname:                             XPG Functions.
* va_alist:                              Old Varargs.
* va_arg:                                Argument Macros.
* va_dcl:                                Old Varargs.
* va_end:                                Argument Macros.
* va_start <1>:                          Old Varargs.
* va_start:                              Argument Macros.
* valloc:                                Aligned Memory Blocks.
* vasprintf:                             Variable Arguments Output.
* verr:                                  Error Messages.
* verrx:                                 Error Messages.
* versionsort:                           Scanning Directory Content.
* versionsort64:                         Scanning Directory Content.
* vfork:                                 Creating a Process.
* vfprintf:                              Variable Arguments Output.
* vfscanf:                               Variable Arguments Input.
* vfwprintf:                             Variable Arguments Output.
* vfwscanf:                              Variable Arguments Input.
* vlimit:                                Limits on Resources.
* vprintf:                               Variable Arguments Output.
* vscanf:                                Variable Arguments Input.
* vsnprintf:                             Variable Arguments Output.
* vsprintf:                              Variable Arguments Output.
* vsscanf:                               Variable Arguments Input.
* vswprintf:                             Variable Arguments Output.
* vswscanf:                              Variable Arguments Input.
* vsyslog:                               syslog; vsyslog.
* vtimes:                                Resource Usage.
* vwarn:                                 Error Messages.
* vwarnx:                                Error Messages.
* vwprintf:                              Variable Arguments Output.
* vwscanf:                               Variable Arguments Input.
* wait:                                  Process Completion.
* wait3:                                 BSD Wait Functions.
* wait4:                                 Process Completion.
* waitpid:                               Process Completion.
* warn:                                  Error Messages.
* warnx:                                 Error Messages.
* WCOREDUMP:                             Process Completion Status.
* wcpcpy:                                Copying and Concatenation.
* wcpncpy:                               Copying and Concatenation.
* wcrtomb:                               Converting a Character.
* wcscasecmp:                            String/Array Comparison.
* wcscat:                                Copying and Concatenation.
* wcschr:                                Search Functions.
* wcschrnul:                             Search Functions.
* wcscmp:                                String/Array Comparison.
* wcscoll:                               Collation Functions.
* wcscpy:                                Copying and Concatenation.
* wcscspn:                               Search Functions.
* wcsdup:                                Copying and Concatenation.
* wcsftime:                              Formatting Calendar Time.
* wcslen:                                String Length.
* wcsncasecmp:                           String/Array Comparison.
* wcsncat:                               Copying and Concatenation.
* wcsncmp:                               String/Array Comparison.
* wcsncpy:                               Copying and Concatenation.
* wcsnlen:                               String Length.
* wcsnrtombs:                            Converting Strings.
* wcspbrk:                               Search Functions.
* wcsrchr:                               Search Functions.
* wcsrtombs:                             Converting Strings.
* wcsspn:                                Search Functions.
* wcsstr:                                Search Functions.
* wcstod:                                Parsing of Floats.
* wcstof:                                Parsing of Floats.
* wcstoimax:                             Parsing of Integers.
* wcstok:                                Finding Tokens in a String.
* wcstol:                                Parsing of Integers.
* wcstold:                               Parsing of Floats.
* wcstoll:                               Parsing of Integers.
* wcstombs:                              Non-reentrant String Conversion.
* wcstoq:                                Parsing of Integers.
* wcstoul:                               Parsing of Integers.
* wcstoull:                              Parsing of Integers.
* wcstoumax:                             Parsing of Integers.
* wcstouq:                               Parsing of Integers.
* wcswcs:                                Search Functions.
* wcsxfrm:                               Collation Functions.
* wctob:                                 Converting a Character.
* wctomb:                                Non-reentrant Character Conversion.
* wctrans:                               Wide Character Case Conversion.
* wctype:                                Classification of Wide Characters.
* WEXITSTATUS:                           Process Completion Status.
* WIFEXITED:                             Process Completion Status.
* WIFSIGNALED:                           Process Completion Status.
* WIFSTOPPED:                            Process Completion Status.
* wmemchr:                               Search Functions.
* wmemcmp:                               String/Array Comparison.
* wmemcpy:                               Copying and Concatenation.
* wmemmove:                              Copying and Concatenation.
* wmempcpy:                              Copying and Concatenation.
* wmemset:                               Copying and Concatenation.
* wordexp:                               Calling Wordexp.
* wordfree:                              Calling Wordexp.
* wprintf:                               Formatted Output Functions.
* write:                                 I/O Primitives.
* writev:                                Scatter-Gather.
* wscanf:                                Formatted Input Functions.
* WSTOPSIG:                              Process Completion Status.
* WTERMSIG:                              Process Completion Status.
* y0:                                    Special Functions.
* y0f:                                   Special Functions.
* y0l:                                   Special Functions.
* y1:                                    Special Functions.
* y1f:                                   Special Functions.
* y1l:                                   Special Functions.
* yn:                                    Special Functions.
* ynf:                                   Special Functions.
* ynl:                                   Special Functions.


File: libc.info,  Node: Variable Index,  Next: File Index,  Prev: Function Index,  Up: Top

Variable and Constant Macro Index
*********************************

* Menu:

* (*__gconv_end_fct):                    glibc iconv Implementation.
* (*__gconv_fct):                        glibc iconv Implementation.
* (*__gconv_init_fct):                   glibc iconv Implementation.
* __free_hook:                           Hooks for Malloc.
* __malloc_hook:                         Hooks for Malloc.
* __malloc_initialize_hook:              Hooks for Malloc.
* __memalign_hook:                       Hooks for Malloc.
* __realloc_hook:                        Hooks for Malloc.
* _BSD_SOURCE:                           Feature Test Macros.
* _Complex_I:                            Complex Numbers.
* _FILE_OFFSET_BITS:                     Feature Test Macros.
* _GNU_SOURCE:                           Feature Test Macros.
* _IOFBF:                                Controlling Buffering.
* _IOLBF:                                Controlling Buffering.
* _IONBF:                                Controlling Buffering.
* _ISOC99_SOURCE:                        Feature Test Macros.
* _LARGEFILE64_SOURCE:                   Feature Test Macros.
* _LARGEFILE_SOURCE:                     Feature Test Macros.
* _PATH_FSTAB:                           Mount Information.
* _PATH_MNTTAB:                          Mount Information.
* _PATH_MOUNTED:                         Mount Information.
* _PATH_UTMP:                            Manipulating the Database.
* _PATH_WTMP:                            Manipulating the Database.
* _POSIX2_C_DEV:                         System Options.
* _POSIX2_C_VERSION:                     Version Supported.
* _POSIX2_FORT_DEV:                      System Options.
* _POSIX2_FORT_RUN:                      System Options.
* _POSIX2_LOCALEDEF:                     System Options.
* _POSIX2_SW_DEV:                        System Options.
* _POSIX_C_SOURCE:                       Feature Test Macros.
* _POSIX_CHOWN_RESTRICTED:               Options for Files.
* _POSIX_JOB_CONTROL:                    System Options.
* _POSIX_NO_TRUNC:                       Options for Files.
* _POSIX_SAVED_IDS:                      System Options.
* _POSIX_SOURCE:                         Feature Test Macros.
* _POSIX_VDISABLE <1>:                   Options for Files.
* _POSIX_VDISABLE:                       Special Characters.
* _POSIX_VERSION:                        Version Supported.
* _REENTRANT:                            Feature Test Macros.
* _SC_2_C_DEV:                           Constants for Sysconf.
* _SC_2_FORT_DEV:                        Constants for Sysconf.
* _SC_2_FORT_RUN:                        Constants for Sysconf.
* _SC_2_LOCALEDEF:                       Constants for Sysconf.
* _SC_2_SW_DEV:                          Constants for Sysconf.
* _SC_2_VERSION:                         Constants for Sysconf.
* _SC_AIO_LISTIO_MAX:                    Constants for Sysconf.
* _SC_AIO_MAX:                           Constants for Sysconf.
* _SC_AIO_PRIO_DELTA_MAX:                Constants for Sysconf.
* _SC_ARG_MAX:                           Constants for Sysconf.
* _SC_ASYNCHRONOUS_IO:                   Constants for Sysconf.
* _SC_ATEXIT_MAX:                        Constants for Sysconf.
* _SC_AVPHYS_PAGES <1>:                  Constants for Sysconf.
* _SC_AVPHYS_PAGES:                      Query Memory Parameters.
* _SC_BC_BASE_MAX:                       Constants for Sysconf.
* _SC_BC_DIM_MAX:                        Constants for Sysconf.
* _SC_BC_SCALE_MAX:                      Constants for Sysconf.
* _SC_BC_STRING_MAX:                     Constants for Sysconf.
* _SC_CHAR_BIT:                          Constants for Sysconf.
* _SC_CHAR_MAX:                          Constants for Sysconf.
* _SC_CHAR_MIN:                          Constants for Sysconf.
* _SC_CHARCLASS_NAME_MAX:                Constants for Sysconf.
* _SC_CHILD_MAX:                         Constants for Sysconf.
* _SC_CLK_TCK:                           Constants for Sysconf.
* _SC_COLL_WEIGHTS_MAX:                  Constants for Sysconf.
* _SC_DELAYTIMER_MAX:                    Constants for Sysconf.
* _SC_EQUIV_CLASS_MAX:                   Constants for Sysconf.
* _SC_EXPR_NEST_MAX:                     Constants for Sysconf.
* _SC_FSYNC:                             Constants for Sysconf.
* _SC_GETGR_R_SIZE_MAX:                  Constants for Sysconf.
* _SC_GETPW_R_SIZE_MAX:                  Constants for Sysconf.
* _SC_INT_MAX:                           Constants for Sysconf.
* _SC_INT_MIN:                           Constants for Sysconf.
* _SC_JOB_CONTROL:                       Constants for Sysconf.
* _SC_LINE_MAX:                          Constants for Sysconf.
* _SC_LOGIN_NAME_MAX:                    Constants for Sysconf.
* _SC_LONG_BIT:                          Constants for Sysconf.
* _SC_MAPPED_FILES:                      Constants for Sysconf.
* _SC_MB_LEN_MAX:                        Constants for Sysconf.
* _SC_MEMLOCK:                           Constants for Sysconf.
* _SC_MEMLOCK_RANGE:                     Constants for Sysconf.
* _SC_MEMORY_PROTECTION:                 Constants for Sysconf.
* _SC_MESSAGE_PASSING:                   Constants for Sysconf.
* _SC_MQ_OPEN_MAX:                       Constants for Sysconf.
* _SC_MQ_PRIO_MAX:                       Constants for Sysconf.
* _SC_NGROUPS_MAX:                       Constants for Sysconf.
* _SC_NL_ARGMAX:                         Constants for Sysconf.
* _SC_NL_LANGMAX:                        Constants for Sysconf.
* _SC_NL_MSGMAX:                         Constants for Sysconf.
* _SC_NL_NMAX:                           Constants for Sysconf.
* _SC_NL_SETMAX:                         Constants for Sysconf.
* _SC_NL_TEXTMAX:                        Constants for Sysconf.
* _SC_NPROCESSORS_CONF <1>:              Constants for Sysconf.
* _SC_NPROCESSORS_CONF:                  Processor Resources.
* _SC_NPROCESSORS_ONLN <1>:              Constants for Sysconf.
* _SC_NPROCESSORS_ONLN:                  Processor Resources.
* _SC_NZERO:                             Constants for Sysconf.
* _SC_OPEN_MAX:                          Constants for Sysconf.
* _SC_PAGESIZE <1>:                      Constants for Sysconf.
* _SC_PAGESIZE <2>:                      Query Memory Parameters.
* _SC_PAGESIZE:                          Memory-mapped I/O.
* _SC_PHYS_PAGES <1>:                    Constants for Sysconf.
* _SC_PHYS_PAGES:                        Query Memory Parameters.
* _SC_PII:                               Constants for Sysconf.
* _SC_PII_INTERNET:                      Constants for Sysconf.
* _SC_PII_INTERNET_DGRAM:                Constants for Sysconf.
* _SC_PII_INTERNET_STREAM:               Constants for Sysconf.
* _SC_PII_OSI:                           Constants for Sysconf.
* _SC_PII_OSI_CLTS:                      Constants for Sysconf.
* _SC_PII_OSI_COTS:                      Constants for Sysconf.
* _SC_PII_OSI_M:                         Constants for Sysconf.
* _SC_PII_SOCKET:                        Constants for Sysconf.
* _SC_PII_XTI:                           Constants for Sysconf.
* _SC_PRIORITIZED_IO:                    Constants for Sysconf.
* _SC_PRIORITY_SCHEDULING:               Constants for Sysconf.
* _SC_REALTIME_SIGNALS:                  Constants for Sysconf.
* _SC_RTSIG_MAX:                         Constants for Sysconf.
* _SC_SAVED_IDS:                         Constants for Sysconf.
* _SC_SCHAR_MAX:                         Constants for Sysconf.
* _SC_SCHAR_MIN:                         Constants for Sysconf.
* _SC_SELECT:                            Constants for Sysconf.
* _SC_SEM_NSEMS_MAX:                     Constants for Sysconf.
* _SC_SEM_VALUE_MAX:                     Constants for Sysconf.
* _SC_SEMAPHORES:                        Constants for Sysconf.
* _SC_SHARED_MEMORY_OBJECTS:             Constants for Sysconf.
* _SC_SHRT_MAX:                          Constants for Sysconf.
* _SC_SHRT_MIN:                          Constants for Sysconf.
* _SC_SIGQUEUE_MAX:                      Constants for Sysconf.
* _SC_STREAM_MAX:                        Constants for Sysconf.
* _SC_SYNCHRONIZED_IO:                   Constants for Sysconf.
* _SC_T_IOV_MAX:                         Constants for Sysconf.
* _SC_THREAD_ATTR_STACKADDR:             Constants for Sysconf.
* _SC_THREAD_ATTR_STACKSIZE:             Constants for Sysconf.
* _SC_THREAD_DESTRUCTOR_ITERATIONS:      Constants for Sysconf.
* _SC_THREAD_KEYS_MAX:                   Constants for Sysconf.
* _SC_THREAD_PRIO_INHERIT:               Constants for Sysconf.
* _SC_THREAD_PRIO_PROTECT:               Constants for Sysconf.
* _SC_THREAD_PRIORITY_SCHEDULING:        Constants for Sysconf.
* _SC_THREAD_PROCESS_SHARED:             Constants for Sysconf.
* _SC_THREAD_SAFE_FUNCTIONS:             Constants for Sysconf.
* _SC_THREAD_STACK_MIN:                  Constants for Sysconf.
* _SC_THREAD_THREADS_MAX:                Constants for Sysconf.
* _SC_THREADS:                           Constants for Sysconf.
* _SC_TIMER_MAX:                         Constants for Sysconf.
* _SC_TIMERS:                            Constants for Sysconf.
* _SC_TTY_NAME_MAX:                      Constants for Sysconf.
* _SC_TZNAME_MAX:                        Constants for Sysconf.
* _SC_UCHAR_MAX:                         Constants for Sysconf.
* _SC_UINT_MAX:                          Constants for Sysconf.
* _SC_UIO_MAXIOV:                        Constants for Sysconf.
* _SC_ULONG_MAX:                         Constants for Sysconf.
* _SC_USHRT_MAX:                         Constants for Sysconf.
* _SC_VERSION:                           Constants for Sysconf.
* _SC_WORD_BIT:                          Constants for Sysconf.
* _SC_XOPEN_CRYPT:                       Constants for Sysconf.
* _SC_XOPEN_ENH_I18N:                    Constants for Sysconf.
* _SC_XOPEN_LEGACY:                      Constants for Sysconf.
* _SC_XOPEN_REALTIME:                    Constants for Sysconf.
* _SC_XOPEN_REALTIME_THREADS:            Constants for Sysconf.
* _SC_XOPEN_SHM:                         Constants for Sysconf.
* _SC_XOPEN_UNIX:                        Constants for Sysconf.
* _SC_XOPEN_VERSION:                     Constants for Sysconf.
* _SC_XOPEN_XCU_VERSION:                 Constants for Sysconf.
* _SC_XOPEN_XPG2:                        Constants for Sysconf.
* _SC_XOPEN_XPG3:                        Constants for Sysconf.
* _SC_XOPEN_XPG4:                        Constants for Sysconf.
* _SVID_SOURCE:                          Feature Test Macros.
* _THREAD_SAFE:                          Feature Test Macros.
* _XOPEN_SOURCE:                         Feature Test Macros.
* _XOPEN_SOURCE_EXTENDED:                Feature Test Macros.
* ABDAY_1:                               The Elegant and Fast Way.
* ABDAY_2:                               The Elegant and Fast Way.
* ABDAY_3:                               The Elegant and Fast Way.
* ABDAY_4:                               The Elegant and Fast Way.
* ABDAY_5:                               The Elegant and Fast Way.
* ABDAY_6:                               The Elegant and Fast Way.
* ABDAY_7:                               The Elegant and Fast Way.
* ABMON_1:                               The Elegant and Fast Way.
* ABMON_10:                              The Elegant and Fast Way.
* ABMON_11:                              The Elegant and Fast Way.
* ABMON_12:                              The Elegant and Fast Way.
* ABMON_2:                               The Elegant and Fast Way.
* ABMON_3:                               The Elegant and Fast Way.
* ABMON_4:                               The Elegant and Fast Way.
* ABMON_5:                               The Elegant and Fast Way.
* ABMON_6:                               The Elegant and Fast Way.
* ABMON_7:                               The Elegant and Fast Way.
* ABMON_8:                               The Elegant and Fast Way.
* ABMON_9:                               The Elegant and Fast Way.
* ACCOUNTING:                            Manipulating the Database.
* AF_FILE:                               Address Formats.
* AF_INET:                               Address Formats.
* AF_LOCAL:                              Address Formats.
* AF_UNIX:                               Address Formats.
* AF_UNSPEC:                             Address Formats.
* aliases:                               NSS Basics.
* ALT_DIGITS:                            The Elegant and Fast Way.
* ALTWERASE:                             Local Modes.
* AM_STR:                                The Elegant and Fast Way.
* ARG_MAX:                               General Limits.
* argp_err_exit_status:                  Argp Global Variables.
* ARGP_ERR_UNKNOWN:                      Argp Parser Functions.
* ARGP_HELP_BUG_ADDR:                    Argp Help Flags.
* ARGP_HELP_DOC:                         Argp Help Flags.
* ARGP_HELP_EXIT_ERR:                    Argp Help Flags.
* ARGP_HELP_EXIT_OK:                     Argp Help Flags.
* ARGP_HELP_LONG:                        Argp Help Flags.
* ARGP_HELP_LONG_ONLY:                   Argp Help Flags.
* ARGP_HELP_POST_DOC:                    Argp Help Flags.
* ARGP_HELP_PRE_DOC:                     Argp Help Flags.
* ARGP_HELP_SEE:                         Argp Help Flags.
* ARGP_HELP_SHORT_USAGE:                 Argp Help Flags.
* ARGP_HELP_STD_ERR:                     Argp Help Flags.
* ARGP_HELP_STD_HELP:                    Argp Help Flags.
* ARGP_HELP_STD_USAGE:                   Argp Help Flags.
* ARGP_HELP_USAGE:                       Argp Help Flags.
* ARGP_IN_ORDER:                         Argp Flags.
* ARGP_KEY_ARG:                          Argp Special Keys.
* ARGP_KEY_ARGS:                         Argp Special Keys.
* ARGP_KEY_END:                          Argp Special Keys.
* ARGP_KEY_ERROR:                        Argp Special Keys.
* ARGP_KEY_FINI:                         Argp Special Keys.
* ARGP_KEY_HELP_ARGS_DOC:                Argp Help Filter Keys.
* ARGP_KEY_HELP_DUP_ARGS_NOTE:           Argp Help Filter Keys.
* ARGP_KEY_HELP_EXTRA:                   Argp Help Filter Keys.
* ARGP_KEY_HELP_HEADER:                  Argp Help Filter Keys.
* ARGP_KEY_HELP_POST_DOC:                Argp Help Filter Keys.
* ARGP_KEY_HELP_PRE_DOC:                 Argp Help Filter Keys.
* ARGP_KEY_INIT:                         Argp Special Keys.
* ARGP_KEY_NO_ARGS:                      Argp Special Keys.
* ARGP_KEY_SUCCESS:                      Argp Special Keys.
* ARGP_LONG_ONLY:                        Argp Flags.
* ARGP_NO_ARGS:                          Argp Flags.
* ARGP_NO_ERRS:                          Argp Flags.
* ARGP_NO_EXIT:                          Argp Flags.
* ARGP_NO_HELP:                          Argp Flags.
* ARGP_PARSE_ARGV0:                      Argp Flags.
* argp_program_bug_address:              Argp Global Variables.
* argp_program_version:                  Argp Global Variables.
* argp_program_version_hook:             Argp Global Variables.
* ARGP_SILENT:                           Argp Flags.
* B0:                                    Line Speed.
* B110:                                  Line Speed.
* B115200:                               Line Speed.
* B1200:                                 Line Speed.
* B134:                                  Line Speed.
* B150:                                  Line Speed.
* B1800:                                 Line Speed.
* B19200:                                Line Speed.
* B200:                                  Line Speed.
* B230400:                               Line Speed.
* B2400:                                 Line Speed.
* B300:                                  Line Speed.
* B38400:                                Line Speed.
* B460800:                               Line Speed.
* B4800:                                 Line Speed.
* B50:                                   Line Speed.
* B57600:                                Line Speed.
* B600:                                  Line Speed.
* B75:                                   Line Speed.
* B9600:                                 Line Speed.
* BC_BASE_MAX:                           Utility Limits.
* BC_DIM_MAX:                            Utility Limits.
* BC_SCALE_MAX:                          Utility Limits.
* BC_STRING_MAX:                         Utility Limits.
* BOOT_TIME <1>:                         XPG Functions.
* BOOT_TIME:                             Manipulating the Database.
* BRKINT:                                Input Modes.
* BUFSIZ:                                Controlling Buffering.
* CCTS_OFLOW:                            Control Modes.
* CHAR_MAX:                              Range of Type.
* CHAR_MIN:                              Range of Type.
* CHILD_MAX:                             General Limits.
* CIGNORE:                               Control Modes.
* CLK_TCK:                               CPU Time.
* CLOCAL:                                Control Modes.
* CLOCKS_PER_SEC:                        CPU Time.
* CODESET:                               The Elegant and Fast Way.
* COLL_WEIGHTS_MAX:                      Utility Limits.
* COREFILE:                              Program Error Signals.
* CPU_SETSIZE:                           CPU Affinity.
* CREAD:                                 Control Modes.
* CRNCYSTR:                              The Elegant and Fast Way.
* CRTS_IFLOW:                            Control Modes.
* CS5:                                   Control Modes.
* CS6:                                   Control Modes.
* CS7:                                   Control Modes.
* CS8:                                   Control Modes.
* CSIZE:                                 Control Modes.
* CSTOPB:                                Control Modes.
* CURRENCY_SYMBOL:                       The Elegant and Fast Way.
* D_FMT:                                 The Elegant and Fast Way.
* D_T_FMT:                               The Elegant and Fast Way.
* DAY_1:                                 The Elegant and Fast Way.
* DAY_2:                                 The Elegant and Fast Way.
* DAY_3:                                 The Elegant and Fast Way.
* DAY_4:                                 The Elegant and Fast Way.
* DAY_5:                                 The Elegant and Fast Way.
* DAY_6:                                 The Elegant and Fast Way.
* DAY_7:                                 The Elegant and Fast Way.
* daylight:                              Time Zone Functions.
* DBL_DIG:                               Floating Point Parameters.
* DBL_EPSILON:                           Floating Point Parameters.
* DBL_MANT_DIG:                          Floating Point Parameters.
* DBL_MAX:                               Floating Point Parameters.
* DBL_MAX_10_EXP:                        Floating Point Parameters.
* DBL_MAX_EXP:                           Floating Point Parameters.
* DBL_MIN:                               Floating Point Parameters.
* DBL_MIN_10_EXP:                        Floating Point Parameters.
* DBL_MIN_EXP:                           Floating Point Parameters.
* DEAD_PROCESS <1>:                      XPG Functions.
* DEAD_PROCESS:                          Manipulating the Database.
* DECIMAL_POINT:                         The Elegant and Fast Way.
* DES_DECRYPT:                           DES Encryption.
* DES_ENCRYPT:                           DES Encryption.
* DES_HW:                                DES Encryption.
* DES_SW:                                DES Encryption.
* DESERR_BADPARAM:                       DES Encryption.
* DESERR_HWERROR:                        DES Encryption.
* DESERR_NOHWDEVICE:                     DES Encryption.
* DESERR_NONE:                           DES Encryption.
* DT_BLK:                                Directory Entries.
* DT_CHR:                                Directory Entries.
* DT_DIR:                                Directory Entries.
* DT_FIFO:                               Directory Entries.
* DT_REG:                                Directory Entries.
* DT_SOCK:                               Directory Entries.
* DT_UNKNOWN:                            Directory Entries.
* E2BIG:                                 Error Codes.
* EACCES:                                Error Codes.
* EADDRINUSE:                            Error Codes.
* EADDRNOTAVAIL:                         Error Codes.
* EADV:                                  Error Codes.
* EAFNOSUPPORT:                          Error Codes.
* EAGAIN:                                Error Codes.
* EALREADY:                              Error Codes.
* EAUTH:                                 Error Codes.
* EBACKGROUND:                           Error Codes.
* EBADE:                                 Error Codes.
* EBADF <1>:                             Line Control.
* EBADF:                                 Error Codes.
* EBADFD:                                Error Codes.
* EBADMSG:                               Error Codes.
* EBADR:                                 Error Codes.
* EBADRPC:                               Error Codes.
* EBADRQC:                               Error Codes.
* EBADSLT:                               Error Codes.
* EBFONT:                                Error Codes.
* EBUSY:                                 Error Codes.
* ECANCELED:                             Error Codes.
* ECHILD:                                Error Codes.
* ECHO:                                  Local Modes.
* ECHOCTL:                               Local Modes.
* ECHOE:                                 Local Modes.
* ECHOK:                                 Local Modes.
* ECHOKE:                                Local Modes.
* ECHONL:                                Local Modes.
* ECHOPRT:                               Local Modes.
* ECHRNG:                                Error Codes.
* ECOMM:                                 Error Codes.
* ECONNABORTED:                          Error Codes.
* ECONNREFUSED:                          Error Codes.
* ECONNRESET:                            Error Codes.
* ED:                                    Error Codes.
* EDEADLK:                               Error Codes.
* EDEADLOCK:                             Error Codes.
* EDESTADDRREQ:                          Error Codes.
* EDIED:                                 Error Codes.
* EDOM:                                  Error Codes.
* EDOTDOT:                               Error Codes.
* EDQUOT:                                Error Codes.
* EEXIST:                                Error Codes.
* EFAULT:                                Error Codes.
* EFBIG:                                 Error Codes.
* EFTYPE:                                Error Codes.
* EGRATUITOUS:                           Error Codes.
* EGREGIOUS:                             Error Codes.
* EHOSTDOWN:                             Error Codes.
* EHOSTUNREACH:                          Error Codes.
* EIDRM:                                 Error Codes.
* EIEIO:                                 Error Codes.
* EILSEQ:                                Error Codes.
* EINPROGRESS:                           Error Codes.
* EINTR:                                 Error Codes.
* EINVAL <1>:                            Line Control.
* EINVAL:                                Error Codes.
* EIO:                                   Error Codes.
* EISCONN:                               Error Codes.
* EISDIR:                                Error Codes.
* EISNAM:                                Error Codes.
* EKEYEXPIRED:                           Error Codes.
* EKEYREJECTED:                          Error Codes.
* EKEYREVOKED:                           Error Codes.
* EL2HLT:                                Error Codes.
* EL2NSYNC:                              Error Codes.
* EL3HLT:                                Error Codes.
* EL3RST:                                Error Codes.
* ELIBACC:                               Error Codes.
* ELIBBAD:                               Error Codes.
* ELIBEXEC:                              Error Codes.
* ELIBMAX:                               Error Codes.
* ELIBSCN:                               Error Codes.
* ELNRNG:                                Error Codes.
* ELOOP:                                 Error Codes.
* EMEDIUMTYPE:                           Error Codes.
* EMFILE:                                Error Codes.
* EMLINK:                                Error Codes.
* EMPTY <1>:                             XPG Functions.
* EMPTY:                                 Manipulating the Database.
* EMSGSIZE:                              Error Codes.
* EMULTIHOP:                             Error Codes.
* ENAMETOOLONG:                          Error Codes.
* ENAVAIL:                               Error Codes.
* ENEEDAUTH:                             Error Codes.
* ENETDOWN:                              Error Codes.
* ENETRESET:                             Error Codes.
* ENETUNREACH:                           Error Codes.
* ENFILE:                                Error Codes.
* ENOANO:                                Error Codes.
* ENOBUFS:                               Error Codes.
* ENOCSI:                                Error Codes.
* ENODATA:                               Error Codes.
* ENODEV:                                Error Codes.
* ENOENT:                                Error Codes.
* ENOEXEC:                               Error Codes.
* ENOKEY:                                Error Codes.
* ENOLCK:                                Error Codes.
* ENOLINK:                               Error Codes.
* ENOMEDIUM:                             Error Codes.
* ENOMEM:                                Error Codes.
* ENOMSG:                                Error Codes.
* ENONET:                                Error Codes.
* ENOPKG:                                Error Codes.
* ENOPROTOOPT:                           Error Codes.
* ENOSPC:                                Error Codes.
* ENOSR:                                 Error Codes.
* ENOSTR:                                Error Codes.
* ENOSYS:                                Error Codes.
* ENOTBLK:                               Error Codes.
* ENOTCONN:                              Error Codes.
* ENOTDIR:                               Error Codes.
* ENOTEMPTY:                             Error Codes.
* ENOTNAM:                               Error Codes.
* ENOTRECOVERABLE:                       Error Codes.
* ENOTSOCK:                              Error Codes.
* ENOTSUP:                               Error Codes.
* ENOTTY <1>:                            Line Control.
* ENOTTY:                                Error Codes.
* ENOTUNIQ:                              Error Codes.
* environ:                               Environment Access.
* ENXIO:                                 Error Codes.
* EOF:                                   EOF and Errors.
* EOPNOTSUPP:                            Error Codes.
* EOVERFLOW:                             Error Codes.
* EOWNERDEAD:                            Error Codes.
* EPERM:                                 Error Codes.
* EPFNOSUPPORT:                          Error Codes.
* EPIPE:                                 Error Codes.
* EPROCLIM:                              Error Codes.
* EPROCUNAVAIL:                          Error Codes.
* EPROGMISMATCH:                         Error Codes.
* EPROGUNAVAIL:                          Error Codes.
* EPROTO:                                Error Codes.
* EPROTONOSUPPORT:                       Error Codes.
* EPROTOTYPE:                            Error Codes.
* EQUIV_CLASS_MAX:                       Utility Limits.
* ERA:                                   The Elegant and Fast Way.
* ERA_D_FMT:                             The Elegant and Fast Way.
* ERA_D_T_FMT:                           The Elegant and Fast Way.
* ERA_T_FMT:                             The Elegant and Fast Way.
* ERA_YEAR:                              The Elegant and Fast Way.
* ERANGE:                                Error Codes.
* EREMCHG:                               Error Codes.
* EREMOTE:                               Error Codes.
* EREMOTEIO:                             Error Codes.
* ERESTART:                              Error Codes.
* EROFS:                                 Error Codes.
* ERPCMISMATCH:                          Error Codes.
* errno:                                 Checking for Errors.
* error_message_count:                   Error Messages.
* error_one_per_line:                    Error Messages.
* error_print_progname:                  Error Messages.
* ESHUTDOWN:                             Error Codes.
* ESOCKTNOSUPPORT:                       Error Codes.
* ESPIPE:                                Error Codes.
* ESRCH:                                 Error Codes.
* ESRMNT:                                Error Codes.
* ESTALE:                                Error Codes.
* ESTRPIPE:                              Error Codes.
* ethers:                                NSS Basics.
* ETIME:                                 Error Codes.
* ETIMEDOUT:                             Error Codes.
* ETOOMANYREFS:                          Error Codes.
* ETXTBSY:                               Error Codes.
* EUCLEAN:                               Error Codes.
* EUNATCH:                               Error Codes.
* EUSERS:                                Error Codes.
* EWOULDBLOCK:                           Error Codes.
* EXDEV:                                 Error Codes.
* EXFULL:                                Error Codes.
* EXIT_FAILURE:                          Exit Status.
* EXIT_SUCCESS:                          Exit Status.
* EXPR_NEST_MAX:                         Utility Limits.
* EXTA:                                  Line Speed.
* EXTB:                                  Line Speed.
* F_DUPFD:                               Duplicating Descriptors.
* F_GETFD:                               Descriptor Flags.
* F_GETFL:                               Getting File Status Flags.
* F_GETLK:                               File Locks.
* F_GETOWN:                              Interrupt Input.
* F_OK:                                  Testing File Access.
* F_RDLCK:                               File Locks.
* F_SETFD:                               Descriptor Flags.
* F_SETFL:                               Getting File Status Flags.
* F_SETLK:                               File Locks.
* F_SETLKW:                              File Locks.
* F_SETOWN:                              Interrupt Input.
* F_UNLCK:                               File Locks.
* F_WRLCK:                               File Locks.
* FD_CLOEXEC:                            Descriptor Flags.
* FD_SETSIZE:                            Waiting for I/O.
* FE_DFL_ENV:                            Control Functions.
* FE_DIVBYZERO:                          Status bit operations.
* FE_DOWNWARD:                           Rounding.
* FE_INEXACT:                            Status bit operations.
* FE_INVALID:                            Status bit operations.
* FE_NOMASK_ENV:                         Control Functions.
* FE_OVERFLOW:                           Status bit operations.
* FE_TONEAREST:                          Rounding.
* FE_TOWARDZERO:                         Rounding.
* FE_UNDERFLOW:                          Status bit operations.
* FE_UPWARD:                             Rounding.
* FILENAME_MAX:                          Limits for Files.
* FLT_DIG:                               Floating Point Parameters.
* FLT_EPSILON:                           Floating Point Parameters.
* FLT_MANT_DIG:                          Floating Point Parameters.
* FLT_MAX:                               Floating Point Parameters.
* FLT_MAX_10_EXP:                        Floating Point Parameters.
* FLT_MAX_EXP:                           Floating Point Parameters.
* FLT_MIN:                               Floating Point Parameters.
* FLT_MIN_10_EXP:                        Floating Point Parameters.
* FLT_MIN_EXP:                           Floating Point Parameters.
* FLT_RADIX:                             Floating Point Parameters.
* FLT_ROUNDS:                            Floating Point Parameters.
* FLUSHO:                                Local Modes.
* FOPEN_MAX:                             Opening Streams.
* FP_FAST_FMA:                           Misc FP Arithmetic.
* FP_ILOGB0:                             Exponents and Logarithms.
* FP_ILOGBNAN:                           Exponents and Logarithms.
* FP_INFINITE:                           Floating Point Classes.
* FP_NAN:                                Floating Point Classes.
* FP_NORMAL:                             Floating Point Classes.
* FP_SUBNORMAL:                          Floating Point Classes.
* FP_ZERO:                               Floating Point Classes.
* FPE_DECOVF_TRAP:                       Program Error Signals.
* FPE_FLTDIV_TRAP:                       Program Error Signals.
* FPE_FLTOVF_TRAP:                       Program Error Signals.
* FPE_FLTUND_TRAP:                       Program Error Signals.
* FPE_INTDIV_TRAP:                       Program Error Signals.
* FPE_INTOVF_TRAP:                       Program Error Signals.
* FPE_SUBRNG_TRAP:                       Program Error Signals.
* FRAC_DIGITS:                           The Elegant and Fast Way.
* FSETLOCKING_BYCALLER:                  Streams and Threads.
* FSETLOCKING_INTERNAL:                  Streams and Threads.
* FSETLOCKING_QUERY:                     Streams and Threads.
* FSTAB:                                 Mount Information.
* FSTAB_RO:                              fstab.
* FSTAB_RQ:                              fstab.
* FSTAB_RW:                              fstab.
* FSTAB_SW:                              fstab.
* FSTAB_XX:                              fstab.
* FTW_ACTIONRETVAL:                      Working with Directory Trees.
* FTW_CHDIR:                             Working with Directory Trees.
* FTW_D:                                 Working with Directory Trees.
* FTW_DEPTH:                             Working with Directory Trees.
* FTW_DNR:                               Working with Directory Trees.
* FTW_DP:                                Working with Directory Trees.
* FTW_F:                                 Working with Directory Trees.
* FTW_MOUNT:                             Working with Directory Trees.
* FTW_NS:                                Working with Directory Trees.
* FTW_PHYS:                              Working with Directory Trees.
* FTW_SL:                                Working with Directory Trees.
* FTW_SLN:                               Working with Directory Trees.
* getdate_err:                           General Time String Parsing.
* GLOB_ABORTED:                          Calling Glob.
* GLOB_ALTDIRFUNC:                       More Flags for Globbing.
* GLOB_APPEND:                           Flags for Globbing.
* GLOB_BRACE:                            More Flags for Globbing.
* GLOB_DOOFFS:                           Flags for Globbing.
* GLOB_ERR:                              Flags for Globbing.
* GLOB_MAGCHAR:                          More Flags for Globbing.
* GLOB_MARK:                             Flags for Globbing.
* GLOB_NOCHECK:                          Flags for Globbing.
* GLOB_NOESCAPE:                         Flags for Globbing.
* GLOB_NOMAGIC:                          More Flags for Globbing.
* GLOB_NOMATCH:                          Calling Glob.
* GLOB_NOSORT:                           Flags for Globbing.
* GLOB_NOSPACE:                          Calling Glob.
* GLOB_ONLYDIR:                          More Flags for Globbing.
* GLOB_PERIOD:                           More Flags for Globbing.
* GLOB_TILDE:                            More Flags for Globbing.
* GLOB_TILDE_CHECK:                      More Flags for Globbing.
* group:                                 NSS Basics.
* GROUPING:                              The Elegant and Fast Way.
* h_errno:                               Host Names.
* HOST_NOT_FOUND:                        Host Names.
* hosts:                                 NSS Basics.
* HUGE_VAL:                              Math Error Reporting.
* HUGE_VALF:                             Math Error Reporting.
* HUGE_VALL:                             Math Error Reporting.
* HUPCL:                                 Control Modes.
* I:                                     Complex Numbers.
* ICANON:                                Local Modes.
* ICRNL:                                 Input Modes.
* IEXTEN:                                Local Modes.
* IFNAMSIZ:                              Interface Naming.
* IGNBRK:                                Input Modes.
* IGNCR:                                 Input Modes.
* IGNPAR:                                Input Modes.
* IMAXBEL:                               Input Modes.
* in6addr_any:                           Host Address Data Type.
* in6addr_loopback:                      Host Address Data Type.
* INADDR_ANY:                            Host Address Data Type.
* INADDR_BROADCAST:                      Host Address Data Type.
* INADDR_LOOPBACK:                       Host Address Data Type.
* INADDR_NONE:                           Host Address Data Type.
* INFINITY:                              Infinity and NaN.
* INIT_PROCESS <1>:                      XPG Functions.
* INIT_PROCESS:                          Manipulating the Database.
* INLCR:                                 Input Modes.
* INPCK:                                 Input Modes.
* INT_CURR_SYMBOL:                       The Elegant and Fast Way.
* INT_FRAC_DIGITS:                       The Elegant and Fast Way.
* INT_MAX:                               Range of Type.
* INT_MIN:                               Range of Type.
* INT_N_CS_PRECEDES:                     The Elegant and Fast Way.
* INT_N_SEP_BY_SPACE:                    The Elegant and Fast Way.
* INT_N_SIGN_POSN:                       The Elegant and Fast Way.
* INT_P_CS_PRECEDES:                     The Elegant and Fast Way.
* INT_P_SEP_BY_SPACE:                    The Elegant and Fast Way.
* INT_P_SIGN_POSN:                       The Elegant and Fast Way.
* IPPORT_RESERVED:                       Ports.
* IPPORT_USERRESERVED:                   Ports.
* ISIG:                                  Local Modes.
* ISTRIP:                                Input Modes.
* ITIMER_PROF:                           Setting an Alarm.
* ITIMER_REAL:                           Setting an Alarm.
* ITIMER_VIRTUAL:                        Setting an Alarm.
* IXANY:                                 Input Modes.
* IXOFF:                                 Input Modes.
* IXON:                                  Input Modes.
* L_ctermid:                             Identifying the Terminal.
* L_cuserid:                             Who Logged In.
* L_INCR:                                File Positioning.
* L_SET:                                 File Positioning.
* L_tmpnam:                              Temporary Files.
* L_XTND:                                File Positioning.
* LANG:                                  Locale Categories.
* LANGUAGE:                              Locale Categories.
* LC_ALL:                                Locale Categories.
* LC_COLLATE:                            Locale Categories.
* LC_CTYPE:                              Locale Categories.
* LC_MESSAGES:                           Locale Categories.
* LC_MONETARY:                           Locale Categories.
* LC_NUMERIC:                            Locale Categories.
* LC_TIME:                               Locale Categories.
* LDBL_DIG:                              Floating Point Parameters.
* LDBL_EPSILON:                          Floating Point Parameters.
* LDBL_MANT_DIG:                         Floating Point Parameters.
* LDBL_MAX:                              Floating Point Parameters.
* LDBL_MAX_10_EXP:                       Floating Point Parameters.
* LDBL_MAX_EXP:                          Floating Point Parameters.
* LDBL_MIN:                              Floating Point Parameters.
* LDBL_MIN_10_EXP:                       Floating Point Parameters.
* LDBL_MIN_EXP:                          Floating Point Parameters.
* LINE_MAX:                              Utility Limits.
* LINK_MAX:                              Limits for Files.
* LIO_NOP:                               Asynchronous I/O.
* LIO_READ:                              Asynchronous I/O.
* LIO_WRITE:                             Asynchronous I/O.
* LOG_ALERT:                             syslog; vsyslog.
* LOG_AUTH:                              syslog; vsyslog.
* LOG_AUTHPRIV:                          syslog; vsyslog.
* LOG_CRIT:                              syslog; vsyslog.
* LOG_CRON:                              syslog; vsyslog.
* LOG_DAEMON:                            syslog; vsyslog.
* LOG_DEBUG:                             syslog; vsyslog.
* LOG_EMERG:                             syslog; vsyslog.
* LOG_ERR:                               syslog; vsyslog.
* LOG_FTP:                               syslog; vsyslog.
* LOG_INFO:                              syslog; vsyslog.
* LOG_LOCAL0:                            syslog; vsyslog.
* LOG_LOCAL1:                            syslog; vsyslog.
* LOG_LOCAL2:                            syslog; vsyslog.
* LOG_LOCAL3:                            syslog; vsyslog.
* LOG_LOCAL4:                            syslog; vsyslog.
* LOG_LOCAL5:                            syslog; vsyslog.
* LOG_LOCAL6:                            syslog; vsyslog.
* LOG_LOCAL7:                            syslog; vsyslog.
* LOG_LPR:                               syslog; vsyslog.
* LOG_MAIL:                              syslog; vsyslog.
* LOG_NEWS:                              syslog; vsyslog.
* LOG_NOTICE:                            syslog; vsyslog.
* LOG_SYSLOG:                            syslog; vsyslog.
* LOG_USER:                              syslog; vsyslog.
* LOG_UUCP:                              syslog; vsyslog.
* LOG_WARNING:                           syslog; vsyslog.
* LOGIN_PROCESS <1>:                     XPG Functions.
* LOGIN_PROCESS:                         Manipulating the Database.
* LONG_LONG_MAX:                         Range of Type.
* LONG_LONG_MIN:                         Range of Type.
* LONG_MAX:                              Range of Type.
* LONG_MIN:                              Range of Type.
* M_1_PI:                                Mathematical Constants.
* M_2_PI:                                Mathematical Constants.
* M_2_SQRTPI:                            Mathematical Constants.
* M_E:                                   Mathematical Constants.
* M_LN10:                                Mathematical Constants.
* M_LN2:                                 Mathematical Constants.
* M_LOG10E:                              Mathematical Constants.
* M_LOG2E:                               Mathematical Constants.
* M_PI:                                  Mathematical Constants.
* M_PI_2:                                Mathematical Constants.
* M_PI_4:                                Mathematical Constants.
* M_SQRT1_2:                             Mathematical Constants.
* M_SQRT2:                               Mathematical Constants.
* MAP_ANON:                              Memory-mapped I/O.
* MAP_ANONYMOUS:                         Memory-mapped I/O.
* MAP_FIXED:                             Memory-mapped I/O.
* MAP_PRIVATE:                           Memory-mapped I/O.
* MAP_SHARED:                            Memory-mapped I/O.
* MAX_CANON:                             Limits for Files.
* MAX_INPUT:                             Limits for Files.
* MAXNAMLEN:                             Limits for Files.
* MAXSYMLINKS:                           Symbolic Links.
* MB_CUR_MAX:                            Selecting the Conversion.
* MB_LEN_MAX:                            Selecting the Conversion.
* MDMBUF:                                Control Modes.
* MINSIGSTKSZ:                           Signal Stack.
* MM_APPL:                               Printing Formatted Messages.
* MM_CONSOLE:                            Printing Formatted Messages.
* MM_ERROR:                              Printing Formatted Messages.
* MM_FIRM:                               Printing Formatted Messages.
* MM_HALT:                               Printing Formatted Messages.
* MM_HARD:                               Printing Formatted Messages.
* MM_INFO:                               Printing Formatted Messages.
* MM_NOSEV:                              Printing Formatted Messages.
* MM_NRECOV:                             Printing Formatted Messages.
* MM_NULLACT:                            Printing Formatted Messages.
* MM_NULLLBL:                            Printing Formatted Messages.
* MM_NULLMC:                             Printing Formatted Messages.
* MM_NULLSEV:                            Printing Formatted Messages.
* MM_NULLTAG:                            Printing Formatted Messages.
* MM_NULLTXT:                            Printing Formatted Messages.
* MM_OPSYS:                              Printing Formatted Messages.
* MM_PRINT:                              Printing Formatted Messages.
* MM_RECOVER:                            Printing Formatted Messages.
* MM_SOFT:                               Printing Formatted Messages.
* MM_UTIL:                               Printing Formatted Messages.
* MM_WARNING:                            Printing Formatted Messages.
* MNTOPT_DEFAULTS:                       mtab.
* MNTOPT_NOAUTO:                         mtab.
* MNTOPT_NOSUID:                         mtab.
* MNTOPT_RO:                             mtab.
* MNTOPT_RW:                             mtab.
* MNTOPT_SUID:                           mtab.
* MNTTAB:                                Mount Information.
* MNTTYPE_IGNORE:                        mtab.
* MNTTYPE_NFS:                           mtab.
* MNTTYPE_SWAP:                          mtab.
* MON_1:                                 The Elegant and Fast Way.
* MON_10:                                The Elegant and Fast Way.
* MON_11:                                The Elegant and Fast Way.
* MON_12:                                The Elegant and Fast Way.
* MON_2:                                 The Elegant and Fast Way.
* MON_3:                                 The Elegant and Fast Way.
* MON_4:                                 The Elegant and Fast Way.
* MON_5:                                 The Elegant and Fast Way.
* MON_6:                                 The Elegant and Fast Way.
* MON_7:                                 The Elegant and Fast Way.
* MON_8:                                 The Elegant and Fast Way.
* MON_9:                                 The Elegant and Fast Way.
* MON_DECIMAL_POINT:                     The Elegant and Fast Way.
* MON_GROUPING:                          The Elegant and Fast Way.
* MON_THOUSANDS_SEP:                     The Elegant and Fast Way.
* MOUNTED:                               Mount Information.
* MS_ASYNC:                              Memory-mapped I/O.
* MS_SYNC:                               Memory-mapped I/O.
* MSG_DONTROUTE:                         Socket Data Options.
* MSG_OOB:                               Socket Data Options.
* MSG_PEEK:                              Socket Data Options.
* N_CS_PRECEDES:                         The Elegant and Fast Way.
* N_SEP_BY_SPACE:                        The Elegant and Fast Way.
* N_SIGN_POSN:                           The Elegant and Fast Way.
* NAME_MAX:                              Limits for Files.
* NAN:                                   Infinity and NaN.
* NCCS:                                  Mode Data Types.
* NDEBUG:                                Consistency Checking.
* NEGATIVE_SIGN:                         The Elegant and Fast Way.
* netgroup:                              NSS Basics.
* networks:                              NSS Basics.
* NEW_TIME <1>:                          XPG Functions.
* NEW_TIME:                              Manipulating the Database.
* NGROUPS_MAX:                           General Limits.
* NL_ARGMAX:                             Output Conversion Syntax.
* NO_ADDRESS:                            Host Names.
* NO_RECOVERY:                           Host Names.
* NOEXPR:                                The Elegant and Fast Way.
* NOFLSH:                                Local Modes.
* NOKERNINFO:                            Local Modes.
* NOSTR:                                 The Elegant and Fast Way.
* NSIG:                                  Standard Signals.
* NSS_STATUS_NOTFOUND:                   NSS Modules Interface.
* NSS_STATUS_SUCCESS:                    NSS Modules Interface.
* NSS_STATUS_TRYAGAIN:                   NSS Modules Interface.
* NSS_STATUS_UNAVAIL:                    NSS Modules Interface.
* NULL:                                  Null Pointer Constant.
* O_ACCMODE:                             Access Modes.
* O_APPEND:                              Operating Modes.
* O_ASYNC:                               Operating Modes.
* O_CREAT:                               Open-time Flags.
* O_EXCL:                                Open-time Flags.
* O_EXEC:                                Access Modes.
* O_EXLOCK:                              Open-time Flags.
* O_FSYNC:                               Operating Modes.
* O_IGNORE_CTTY:                         Open-time Flags.
* O_NDELAY:                              Operating Modes.
* O_NOATIME:                             Operating Modes.
* O_NOCTTY:                              Open-time Flags.
* O_NOLINK:                              Open-time Flags.
* O_NONBLOCK <1>:                        Operating Modes.
* O_NONBLOCK:                            Open-time Flags.
* O_NOTRANS:                             Open-time Flags.
* O_RDONLY:                              Access Modes.
* O_RDWR:                                Access Modes.
* O_READ:                                Access Modes.
* O_SHLOCK:                              Open-time Flags.
* O_SYNC:                                Operating Modes.
* O_TRUNC:                               Open-time Flags.
* O_WRITE:                               Access Modes.
* O_WRONLY:                              Access Modes.
* obstack_alloc_failed_handler:          Preparing for Obstacks.
* OLD_TIME <1>:                          XPG Functions.
* OLD_TIME:                              Manipulating the Database.
* ONLCR:                                 Output Modes.
* ONOEOT:                                Output Modes.
* OPEN_MAX:                              General Limits.
* OPOST:                                 Output Modes.
* optarg:                                Using Getopt.
* opterr:                                Using Getopt.
* optind:                                Using Getopt.
* OPTION_ALIAS:                          Argp Option Flags.
* OPTION_ARG_OPTIONAL:                   Argp Option Flags.
* OPTION_DOC:                            Argp Option Flags.
* OPTION_HIDDEN:                         Argp Option Flags.
* OPTION_NO_USAGE:                       Argp Option Flags.
* optopt:                                Using Getopt.
* OXTABS:                                Output Modes.
* P_CS_PRECEDES:                         The Elegant and Fast Way.
* P_SEP_BY_SPACE:                        The Elegant and Fast Way.
* P_SIGN_POSN:                           The Elegant and Fast Way.
* P_tmpdir:                              Temporary Files.
* PA_CHAR:                               Parsing a Template String.
* PA_DOUBLE:                             Parsing a Template String.
* PA_FLAG_LONG:                          Parsing a Template String.
* PA_FLAG_LONG_DOUBLE:                   Parsing a Template String.
* PA_FLAG_LONG_LONG:                     Parsing a Template String.
* PA_FLAG_MASK:                          Parsing a Template String.
* PA_FLAG_PTR:                           Parsing a Template String.
* PA_FLAG_SHORT:                         Parsing a Template String.
* PA_FLOAT:                              Parsing a Template String.
* PA_INT:                                Parsing a Template String.
* PA_LAST:                               Parsing a Template String.
* PA_POINTER:                            Parsing a Template String.
* PA_STRING:                             Parsing a Template String.
* PARENB:                                Control Modes.
* PARMRK:                                Input Modes.
* PARODD:                                Control Modes.
* passwd:                                NSS Basics.
* PATH_MAX:                              Limits for Files.
* PENDIN:                                Local Modes.
* PF_CCITT:                              Misc Namespaces.
* PF_FILE:                               Local Namespace Details.
* PF_IMPLINK:                            Misc Namespaces.
* PF_INET:                               Internet Namespace.
* PF_INET6:                              Internet Namespace.
* PF_ISO:                                Misc Namespaces.
* PF_LOCAL:                              Local Namespace Details.
* PF_NS:                                 Misc Namespaces.
* PF_ROUTE:                              Misc Namespaces.
* PF_UNIX:                               Local Namespace Details.
* PI:                                    Mathematical Constants.
* PIPE_BUF:                              Limits for Files.
* PM_STR:                                The Elegant and Fast Way.
* POSITIVE_SIGN:                         The Elegant and Fast Way.
* PRIO_MAX:                              Traditional Scheduling Functions.
* PRIO_MIN:                              Traditional Scheduling Functions.
* PRIO_PGRP:                             Traditional Scheduling Functions.
* PRIO_PROCESS:                          Traditional Scheduling Functions.
* PRIO_USER:                             Traditional Scheduling Functions.
* program_invocation_name:               Error Messages.
* program_invocation_short_name:         Error Messages.
* PROT_EXEC:                             Memory-mapped I/O.
* PROT_READ:                             Memory-mapped I/O.
* PROT_WRITE:                            Memory-mapped I/O.
* protocols:                             NSS Basics.
* PWD:                                   Working Directory.
* R_OK:                                  Testing File Access.
* RADIXCHAR:                             The Elegant and Fast Way.
* RAND_MAX:                              ISO Random.
* RE_DUP_MAX:                            General Limits.
* RLIM_INFINITY:                         Limits on Resources.
* RLIM_NLIMITS:                          Limits on Resources.
* RLIMIT_AS:                             Limits on Resources.
* RLIMIT_CORE:                           Limits on Resources.
* RLIMIT_CPU:                            Limits on Resources.
* RLIMIT_DATA:                           Limits on Resources.
* RLIMIT_FSIZE:                          Limits on Resources.
* RLIMIT_NOFILE:                         Limits on Resources.
* RLIMIT_OFILE:                          Limits on Resources.
* RLIMIT_RSS:                            Limits on Resources.
* RLIMIT_STACK:                          Limits on Resources.
* rpc:                                   NSS Basics.
* RUN_LVL <1>:                           XPG Functions.
* RUN_LVL:                               Manipulating the Database.
* S_IEXEC:                               Permission Bits.
* S_IFBLK:                               Testing File Type.
* S_IFCHR:                               Testing File Type.
* S_IFDIR:                               Testing File Type.
* S_IFIFO:                               Testing File Type.
* S_IFLNK:                               Testing File Type.
* S_IFMT:                                Testing File Type.
* S_IFREG:                               Testing File Type.
* S_IFSOCK:                              Testing File Type.
* S_IREAD:                               Permission Bits.
* S_IRGRP:                               Permission Bits.
* S_IROTH:                               Permission Bits.
* S_IRUSR:                               Permission Bits.
* S_IRWXG:                               Permission Bits.
* S_IRWXO:                               Permission Bits.
* S_IRWXU:                               Permission Bits.
* S_ISGID:                               Permission Bits.
* S_ISUID:                               Permission Bits.
* S_ISVTX:                               Permission Bits.
* S_IWGRP:                               Permission Bits.
* S_IWOTH:                               Permission Bits.
* S_IWRITE:                              Permission Bits.
* S_IWUSR:                               Permission Bits.
* S_IXGRP:                               Permission Bits.
* S_IXOTH:                               Permission Bits.
* S_IXUSR:                               Permission Bits.
* SA_NOCLDSTOP:                          Flags for Sigaction.
* SA_ONSTACK:                            Flags for Sigaction.
* SA_RESTART:                            Flags for Sigaction.
* SC_SSIZE_MAX:                          Constants for Sysconf.
* SCHAR_MAX:                             Range of Type.
* SCHAR_MIN:                             Range of Type.
* SEEK_CUR:                              File Positioning.
* SEEK_END:                              File Positioning.
* SEEK_SET:                              File Positioning.
* services:                              NSS Basics.
* shadow:                                NSS Basics.
* SHRT_MAX:                              Range of Type.
* SHRT_MIN:                              Range of Type.
* SIG_BLOCK:                             Process Signal Mask.
* SIG_DFL:                               Basic Signal Handling.
* SIG_ERR:                               Basic Signal Handling.
* SIG_IGN:                               Basic Signal Handling.
* SIG_SETMASK:                           Process Signal Mask.
* SIG_UNBLOCK:                           Process Signal Mask.
* SIGABRT:                               Program Error Signals.
* SIGALRM:                               Alarm Signals.
* SIGBUS:                                Program Error Signals.
* SIGCHLD:                               Job Control Signals.
* SIGCLD:                                Job Control Signals.
* SIGCONT:                               Job Control Signals.
* SIGEMT:                                Program Error Signals.
* SIGFPE:                                Program Error Signals.
* SIGHUP:                                Termination Signals.
* SIGILL:                                Program Error Signals.
* SIGINFO:                               Miscellaneous Signals.
* SIGINT:                                Termination Signals.
* SIGIO:                                 Asynchronous I/O Signals.
* SIGIOT:                                Program Error Signals.
* SIGKILL:                               Termination Signals.
* SIGLOST:                               Operation Error Signals.
* signgam:                               Special Functions.
* SIGPIPE:                               Operation Error Signals.
* SIGPOLL:                               Asynchronous I/O Signals.
* SIGPROF:                               Alarm Signals.
* SIGQUIT:                               Termination Signals.
* SIGSEGV:                               Program Error Signals.
* SIGSTKSZ:                              Signal Stack.
* SIGSTOP:                               Job Control Signals.
* SIGSYS:                                Program Error Signals.
* SIGTERM:                               Termination Signals.
* SIGTRAP:                               Program Error Signals.
* SIGTSTP:                               Job Control Signals.
* SIGTTIN:                               Job Control Signals.
* SIGTTOU:                               Job Control Signals.
* SIGURG:                                Asynchronous I/O Signals.
* SIGUSR1:                               Miscellaneous Signals.
* SIGUSR2:                               Miscellaneous Signals.
* SIGVTALRM:                             Alarm Signals.
* SIGWINCH:                              Miscellaneous Signals.
* SIGXCPU:                               Operation Error Signals.
* SIGXFSZ:                               Operation Error Signals.
* SOCK_DGRAM:                            Communication Styles.
* SOCK_RAW:                              Communication Styles.
* SOCK_STREAM:                           Communication Styles.
* SOL_SOCKET:                            Socket-Level Options.
* SS_DISABLE:                            Signal Stack.
* SS_ONSTACK:                            Signal Stack.
* SSIZE_MAX:                             General Limits.
* stderr:                                Standard Streams.
* STDERR_FILENO:                         Descriptors and Streams.
* stdin:                                 Standard Streams.
* STDIN_FILENO:                          Descriptors and Streams.
* stdout:                                Standard Streams.
* STDOUT_FILENO:                         Descriptors and Streams.
* STREAM_MAX:                            General Limits.
* SV_INTERRUPT:                          BSD Handler.
* SV_ONSTACK:                            BSD Handler.
* SV_RESETHAND:                          BSD Handler.
* sys_siglist:                           Signal Messages.
* T_FMT:                                 The Elegant and Fast Way.
* T_FMT_AMPM:                            The Elegant and Fast Way.
* TCIFLUSH:                              Line Control.
* TCIOFF:                                Line Control.
* TCIOFLUSH:                             Line Control.
* TCION:                                 Line Control.
* TCOFLUSH:                              Line Control.
* TCOOFF:                                Line Control.
* TCOON:                                 Line Control.
* TCSADRAIN:                             Mode Functions.
* TCSAFLUSH:                             Mode Functions.
* TCSANOW:                               Mode Functions.
* TCSASOFT:                              Mode Functions.
* THOUSANDS_SEP:                         The Elegant and Fast Way.
* THOUSEP:                               The Elegant and Fast Way.
* timezone:                              Time Zone Functions.
* TMP_MAX:                               Temporary Files.
* TOSTOP:                                Local Modes.
* TRY_AGAIN:                             Host Names.
* tzname:                                Time Zone Functions.
* TZNAME_MAX:                            General Limits.
* UCHAR_MAX:                             Range of Type.
* UINT_MAX:                              Range of Type.
* ULONG_LONG_MAX:                        Range of Type.
* ULONG_MAX:                             Range of Type.
* USER_PROCESS <1>:                      XPG Functions.
* USER_PROCESS:                          Manipulating the Database.
* USHRT_MAX:                             Range of Type.
* VDISCARD:                              Other Special.
* VDSUSP:                                Signal Characters.
* VEOF:                                  Editing Characters.
* VEOL:                                  Editing Characters.
* VEOL2:                                 Editing Characters.
* VERASE:                                Editing Characters.
* VINTR:                                 Signal Characters.
* VKILL:                                 Editing Characters.
* VLNEXT:                                Other Special.
* VMIN:                                  Noncanonical Input.
* VQUIT:                                 Signal Characters.
* VREPRINT:                              Editing Characters.
* VSTART:                                Start/Stop Characters.
* VSTATUS:                               Other Special.
* VSTOP:                                 Start/Stop Characters.
* VSUSP:                                 Signal Characters.
* VTIME:                                 Noncanonical Input.
* VWERASE:                               Editing Characters.
* W_OK:                                  Testing File Access.
* WCHAR_MAX <1>:                         Range of Type.
* WCHAR_MAX:                             Extended Char Intro.
* WCHAR_MIN:                             Extended Char Intro.
* WEOF <1>:                              EOF and Errors.
* WEOF:                                  Extended Char Intro.
* X_OK:                                  Testing File Access.
* YESEXPR:                               The Elegant and Fast Way.
* YESSTR:                                The Elegant and Fast Way.


File: libc.info,  Node: File Index,  Prev: Variable Index,  Up: Top

Program and File Index
**********************

* Menu:

* -lbsd-compat <1>:                      Process Group Functions.
* -lbsd-compat:                          Feature Test Macros.
* /etc/group:                            Group Database.
* /etc/hosts:                            Host Names.
* /etc/localtime:                        TZ Variable.
* /etc/networks:                         Networks Database.
* /etc/passwd:                           User Database.
* /etc/protocols:                        Protocols Database.
* /etc/services:                         Services Database.
* /share/lib/zoneinfo:                   TZ Variable.
* argp.h:                                Argp.
* argz.h:                                Argz Functions.
* arpa/inet.h:                           Host Address Functions.
* assert.h:                              Consistency Checking.
* bsd-compat <1>:                        Process Group Functions.
* bsd-compat:                            Feature Test Macros.
* cd:                                    Working Directory.
* chgrp:                                 File Owner.
* chown:                                 File Owner.
* complex.h <1>:                         Operations on Complex.
* complex.h <2>:                         Complex Numbers.
* complex.h:                             Mathematics.
* ctype.h <1>:                           Case Conversion.
* ctype.h <2>:                           Classification of Characters.
* ctype.h:                               Character Handling.
* dirent.h <1>:                          Random Access Directory.
* dirent.h <2>:                          Reading/Closing Directory.
* dirent.h <3>:                          Opening a Directory.
* dirent.h <4>:                          Directory Entries.
* dirent.h:                              Reserved Names.
* envz.h:                                Envz Functions.
* errno.h <1>:                           Error Codes.
* errno.h <2>:                           Checking for Errors.
* errno.h:                               Error Reporting.
* execinfo.h:                            Backtraces.
* fcntl.h <1>:                           Interrupt Input.
* fcntl.h <2>:                           File Locks.
* fcntl.h <3>:                           File Status Flags.
* fcntl.h <4>:                           Descriptor Flags.
* fcntl.h <5>:                           Duplicating Descriptors.
* fcntl.h <6>:                           Control Operations.
* fcntl.h <7>:                           Opening and Closing Files.
* fcntl.h:                               Reserved Names.
* float.h:                               Floating Point Parameters.
* fnmatch.h:                             Wildcard Matching.
* gcc:                                   ISO C.
* gconv.h:                               glibc iconv Implementation.
* grp.h <1>:                             Group Data Structure.
* grp.h <2>:                             Setting Groups.
* grp.h:                                 Reserved Names.
* hostid:                                Host Identification.
* hostname:                              Host Identification.
* iconv.h:                               Generic Conversion Interface.
* kill:                                  Termination Signals.
* ksh:                                   Wildcard Matching.
* langinfo.h:                            The Elegant and Fast Way.
* limits.h <1>:                          Width of Type.
* limits.h <2>:                          Limits for Files.
* limits.h <3>:                          General Limits.
* limits.h <4>:                          Selecting the Conversion.
* limits.h:                              Reserved Names.
* locale:                                Setting the Locale.
* locale.h <1>:                          The Lame Way to Locale Data.
* locale.h:                              Setting the Locale.
* localtime:                             TZ Variable.
* ls:                                    File Attributes.
* malloc.h <1>:                          Statistics of Malloc.
* malloc.h <2>:                          Hooks for Malloc.
* malloc.h:                              Malloc Tunable Parameters.
* math.h <1>:                            Rounding Functions.
* math.h <2>:                            Normalization Functions.
* math.h <3>:                            Absolute Value.
* math.h <4>:                            Floating Point Classes.
* math.h:                                Mathematics.
* mcheck.h:                              Heap Consistency Checking.
* mkdir:                                 Creating Directories.
* netdb.h <1>:                           Networks Database.
* netdb.h <2>:                           Protocols Database.
* netdb.h <3>:                           Services Database.
* netdb.h:                               Host Names.
* netinet/in.h <1>:                      Byte Order.
* netinet/in.h <2>:                      Ports.
* netinet/in.h <3>:                      Host Address Data Type.
* netinet/in.h:                          Internet Address Formats.
* obstack.h:                             Creating Obstacks.
* printf.h <1>:                          Conversion Specifier Options.
* printf.h:                              Registering New Conversions.
* pwd.h <1>:                             User Data Structure.
* pwd.h:                                 Reserved Names.
* setjmp.h <1>:                          Non-Local Exits and Signals.
* setjmp.h:                              Non-Local Details.
* sh:                                    Running a Command.
* signal.h <1>:                          BSD Signal Handling.
* signal.h <2>:                          Checking for Pending Signals.
* signal.h <3>:                          Process Signal Mask.
* signal.h <4>:                          Signal Sets.
* signal.h <5>:                          Signaling Another Process.
* signal.h <6>:                          Signaling Yourself.
* signal.h <7>:                          Flags for Sigaction.
* signal.h <8>:                          Advanced Signal Handling.
* signal.h <9>:                          Basic Signal Handling.
* signal.h <10>:                         Standard Signals.
* signal.h:                              Reserved Names.
* stdarg.h <1>:                          Argument Macros.
* stdarg.h:                              Receiving Arguments.
* stddef.h:                              Important Data Types.
* stdint.h:                              Integers.
* stdio.h <1>:                           Who Logged In.
* stdio.h <2>:                           Identifying the Terminal.
* stdio.h <3>:                           Signal Messages.
* stdio.h <4>:                           Temporary Files.
* stdio.h <5>:                           Deleting Files.
* stdio.h <6>:                           Descriptors and Streams.
* stdio.h <7>:                           Streams and Cookies.
* stdio.h <8>:                           String Streams.
* stdio.h <9>:                           Controlling Buffering.
* stdio.h <10>:                          Flushing Buffers.
* stdio.h <11>:                          Portable Positioning.
* stdio.h <12>:                          File Positioning.
* stdio.h <13>:                          Formatted Input Functions.
* stdio.h <14>:                          Variable Arguments Output.
* stdio.h <15>:                          Formatted Output Functions.
* stdio.h <16>:                          Block Input/Output.
* stdio.h <17>:                          Character Input.
* stdio.h <18>:                          Simple Output.
* stdio.h <19>:                          Opening Streams.
* stdio.h <20>:                          Standard Streams.
* stdio.h:                               Streams.
* stdlib.h <1>:                          Running a Command.
* stdlib.h <2>:                          Aborting a Program.
* stdlib.h <3>:                          Exit Status.
* stdlib.h <4>:                          Environment Access.
* stdlib.h <5>:                          Parsing of Floats.
* stdlib.h <6>:                          Parsing of Integers.
* stdlib.h <7>:                          Absolute Value.
* stdlib.h <8>:                          Integer Division.
* stdlib.h <9>:                          SVID Random.
* stdlib.h <10>:                         BSD Random.
* stdlib.h <11>:                         ISO Random.
* stdlib.h <12>:                         Allocation.
* stdlib.h <13>:                         Temporary Files.
* stdlib.h <14>:                         Array Sort Function.
* stdlib.h <15>:                         Array Search Function.
* stdlib.h <16>:                         Non-reentrant Character Conversion.
* stdlib.h <17>:                         Selecting the Conversion.
* stdlib.h <18>:                         Variable Size Automatic.
* stdlib.h <19>:                         Aligned Memory Blocks.
* stdlib.h <20>:                         Allocating Cleared Space.
* stdlib.h <21>:                         Changing Block Size.
* stdlib.h <22>:                         Freeing after Malloc.
* stdlib.h:                              Basic Allocation.
* string.h <1>:                          Signal Messages.
* string.h <2>:                          Trivial Encryption.
* string.h <3>:                          Finding Tokens in a String.
* string.h <4>:                          Search Functions.
* string.h <5>:                          Collation Functions.
* string.h <6>:                          String/Array Comparison.
* string.h <7>:                          Copying and Concatenation.
* string.h:                              String Length.
* sys/param.h:                           Host Identification.
* sys/resource.h <1>:                    Traditional Scheduling Functions.
* sys/resource.h <2>:                    Limits on Resources.
* sys/resource.h:                        Resource Usage.
* sys/socket.h <1>:                      Socket-Level Options.
* sys/socket.h <2>:                      Socket Option Functions.
* sys/socket.h <3>:                      Sending Datagrams.
* sys/socket.h <4>:                      Socket Data Options.
* sys/socket.h <5>:                      Receiving Data.
* sys/socket.h <6>:                      Sending Data.
* sys/socket.h <7>:                      Socket Pairs.
* sys/socket.h <8>:                      Closing a Socket.
* sys/socket.h <9>:                      Creating a Socket.
* sys/socket.h <10>:                     Internet Namespace.
* sys/socket.h <11>:                     Local Namespace Details.
* sys/socket.h <12>:                     Reading Address.
* sys/socket.h <13>:                     Setting Address.
* sys/socket.h <14>:                     Address Formats.
* sys/socket.h:                          Communication Styles.
* sys/stat.h <1>:                        FIFO Special Files.
* sys/stat.h <2>:                        Making Special Files.
* sys/stat.h <3>:                        Setting Permissions.
* sys/stat.h <4>:                        Permission Bits.
* sys/stat.h <5>:                        Testing File Type.
* sys/stat.h <6>:                        Attribute Meanings.
* sys/stat.h <7>:                        Creating Directories.
* sys/stat.h:                            Reserved Names.
* sys/time.h <1>:                        Setting an Alarm.
* sys/time.h <2>:                        High-Resolution Calendar.
* sys/time.h:                            File Times.
* sys/times.h <1>:                       Processor Time.
* sys/times.h:                           Reserved Names.
* sys/timex.h:                           High Accuracy Clock.
* sys/types.h <1>:                       Setting Groups.
* sys/types.h <2>:                       Setting User ID.
* sys/types.h <3>:                       Reading Persona.
* sys/types.h <4>:                       Terminal Access Functions.
* sys/types.h <5>:                       Process Group Functions.
* sys/types.h <6>:                       Process Identification.
* sys/types.h:                           Waiting for I/O.
* sys/un.h:                              Local Namespace Details.
* sys/utsname.h:                         Platform Type.
* sys/vlimit.h:                          Limits on Resources.
* sys/vtimes.h:                          Resource Usage.
* sys/wait.h <1>:                        BSD Wait Functions.
* sys/wait.h <2>:                        Process Completion Status.
* sys/wait.h:                            Process Completion.
* termios.h <1>:                         Terminal Modes.
* termios.h:                             Reserved Names.
* time.h <1>:                            TZ Variable.
* time.h <2>:                            Formatting Calendar Time.
* time.h <3>:                            Simple Calendar Time.
* time.h <4>:                            CPU Time.
* time.h:                                File Times.
* ulimit.h:                              Limits on Resources.
* umask:                                 Setting Permissions.
* unistd.h <1>:                          Options for Files.
* unistd.h <2>:                          System Options.
* unistd.h <3>:                          Host Identification.
* unistd.h <4>:                          Who Logged In.
* unistd.h <5>:                          Setting Groups.
* unistd.h <6>:                          Setting User ID.
* unistd.h <7>:                          Reading Persona.
* unistd.h <8>:                          Terminal Access Functions.
* unistd.h <9>:                          Process Group Functions.
* unistd.h <10>:                         Executing a File.
* unistd.h <11>:                         Creating a Process.
* unistd.h <12>:                         Process Identification.
* unistd.h <13>:                         Termination Internals.
* unistd.h <14>:                         Using Getopt.
* unistd.h <15>:                         Setting an Alarm.
* unistd.h <16>:                         Is It a Terminal.
* unistd.h <17>:                         Creating a Pipe.
* unistd.h <18>:                         Testing File Access.
* unistd.h <19>:                         File Owner.
* unistd.h <20>:                         Deleting Files.
* unistd.h <21>:                         Symbolic Links.
* unistd.h <22>:                         Hard Links.
* unistd.h <23>:                         Working Directory.
* unistd.h <24>:                         Duplicating Descriptors.
* unistd.h <25>:                         Descriptors and Streams.
* unistd.h <26>:                         I/O Primitives.
* unistd.h:                              Opening and Closing Files.
* utime.h:                               File Times.
* utmp.h <1>:                            Logging In and Out.
* utmp.h:                                Manipulating the Database.
* utmpx.h:                               XPG Functions.
* varargs.h:                             Old Varargs.
* wchar.h <1>:                           Parsing of Integers.
* wchar.h <2>:                           Character Input.
* wchar.h <3>:                           Simple Output.
* wchar.h <4>:                           Converting Strings.
* wchar.h <5>:                           Converting a Character.
* wchar.h <6>:                           Keeping the state.
* wchar.h <7>:                           Extended Char Intro.
* wchar.h <8>:                           Collation Functions.
* wchar.h:                               Copying and Concatenation.
* wctype.h <1>:                          Wide Character Case Conversion.
* wctype.h:                              Classification of Wide Characters.
* zoneinfo:                              TZ Variable.


